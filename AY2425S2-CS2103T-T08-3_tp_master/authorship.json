[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"[![CI Status](https://github.com/AY2425S2-CS2103T-T08-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2425S2-CS2103T-T08-3/tp/actions)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"* This is **a sample project for Software Engineering (SE) student**.\u003cbr\u003e","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"  Example usage: (to be updated in future)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"  * as a starting point of a course project (as opposed to writing everything from scratch)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"  * as a case study","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"* The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"* It is named `AddressBook Level 3` (`AB3` for short) because it was initially created as a part of a series of `AddressBook` projects (`Level 1`, `Level 2`, `Level 3` ...).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"* For the detailed documentation of this project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org). If you would like to contribute code to this project, see [se-education.org](https://se-education.org/#contributing-to-se-edu) for more info.","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":3,"-":11}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"findingfaey"},"content":"### Yi Fei Yang","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"findingfaey"},"content":"\u003cimg src\u003d\"images/findingfaey.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"findingfaey"},"content":"[[github](https://github.com/findingfaey)]","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"findingfaey"},"content":"[[portfolio](team/findingfaey.md)]","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"findingfaey"},"content":"* Role: Developer","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"findingfaey"},"content":"* Responsibilities: Software Developer","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rannn367"},"content":"### Alicia Chang","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rannn367"},"content":"\u003cimg src\u003d\"images/rannn367.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rannn367"},"content":"[[github](https://github.com/rannn367)]","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rannn367"},"content":"[[portfolio](team/rannn367.md)]","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rannn367"},"content":"* Role: Developer","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rannn367"},"content":"* Responsibilities: Software Developer","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"### Justin Soon","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"\u003cimg src\u003d\"images/jsjk112344.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"[[github](https://github.com/jsjk112344)]","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"[[portfolio](team/jsjk112344.md)]","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"* Responsibilities: Software Developer","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"### Victor Poh Hong Rong","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"\u003cimg src\u003d\"images/whitebear82.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"[[github](http://github.com/whitebear82)]","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"[[portfolio](team/whitebear82.md)]","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"* Responsibilities: Software Developer","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"findingfaey"},"content":"### Darren Lim","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"findingfaey"},"content":"\u003cimg src\u003d\"images/loyaltypollution.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"findingfaey"},"content":"[[github](https://github.com/loyaltypollution)]","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"findingfaey"},"content":"[[portfolio](team/loyaltypollution.md)]","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"findingfaey"},"content":"* Responsibilities: Software Developer","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"findingfaey":11,"WhiteBear82":5,"-":38,"rannn367":6,"Jsjk112344":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# AB-3 Developer Guide","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"WhiteBear82"},"content":"![github](images/Persona.png)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"WhiteBear82"},"content":"* Name: Amelia Tan","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"WhiteBear82"},"content":"* Age: 34 years","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"WhiteBear82"},"content":"* Gender: Female","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"WhiteBear82"},"content":"* Business Type: Independent café owner of a single-location café \"Brew Haven\"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"WhiteBear82"},"content":"* Team Size: Small team (5–20 staff members)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"WhiteBear82"},"content":"* Customer Base: 100–300 regular customers","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"WhiteBear82"},"content":"* Pain Points:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"WhiteBear82"},"content":"  * Struggles with scattered information (handwritten notes, spreadsheets, physical loyalty cards)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"WhiteBear82"},"content":"  * Finds it hard to keep track of customer preferences, allergies, birthdays, and visit history ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"WhiteBear82"},"content":"  * Needs a better way to manage staff shifts, roles, and contact details","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"WhiteBear82"},"content":"  * Deals with frequent equipment breakdowns without a proper maintenance log","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"WhiteBear82"},"content":"  * Wants to streamline supplier management and order frequency tracking","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"WhiteBear82"},"content":"* Technical Comfort:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"WhiteBear82"},"content":"  * Prefers desktop apps over web or mobile solutions for stability and performance","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"WhiteBear82"},"content":"  * Comfortable with a Command Line Interface (CLI) for fast data entry and retrieval","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"WhiteBear82"},"content":"  * Types fast and prefers keyboard shortcuts over mouse interactions","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"WhiteBear82"},"content":"  * Reasonably tech-savvy but values an intuitive and easy-to-learn system","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"WhiteBear82"},"content":"* Work Style:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"WhiteBear82"},"content":"  * Juggles multiple roles — customer service, staff management, inventory, and maintenance","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"WhiteBear82"},"content":"  * Values efficiency and quick access to information to avoid disruptions during peak hours","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"WhiteBear82"},"content":"  * Wants to delegate responsibilities without losing oversight","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"WhiteBear82"},"content":"* Goals:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"WhiteBear82"},"content":"  * Build strong customer loyalty by remembering personal preferences and rewarding regulars","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"WhiteBear82"},"content":"  * Minimize downtime caused by equipment failures through proper maintenance tracking","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"WhiteBear82"},"content":"  * Streamline supplier coordination and avoid last-minute shortages","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"WhiteBear82"},"content":"  * Maintain a well-organized staff schedule with clear roles and availability","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"WhiteBear82"},"content":"**Value proposition**: manage customers, staff, suppliers, and maintenance faster and more efficiently than a typical mouse/GUI-driven app, all in one centralized system tailored for a fast-paced café environment.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"| Priority | As a …​     | I want to …​                                                     | So that I can…​                                                     |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"WhiteBear82"},"content":"|----------|-------------|------------------------------------------------------------------|---------------------------------------------------------------------|","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | add a staff member\u0027s phone number                                | contact them when needed.                                           |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | delete a staff member\u0027s phone number                             | keep my contact list updated.                                       |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | view a list of all staff phone numbers                           | quickly find and reach them.                                        |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | search for a staff member by name to retrieve their phone number | quickly find the right contact.                                     |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | view a list of supplier emails                                   | map stock requests to specific emails.                              |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | view a list of current stock                                     | know when to reorder stock.                                         |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | add a repair technician\u0027s phone number                           | contact them quickly when needed.                                   |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | delete a repair technician\u0027s phone number                        | keep my contact list updated.                                       |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | add a repair technician\u0027s email address                          | reach them via email if required.                                   |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | delete a repair technician\u0027s email address                       | remove outdated contact information.                                |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | view a list of all repair technician\u0027s contact details           | find and contact them easily.                                       |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | search for a repair technician by name                           | retrieve their contact information efficiently.                     |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | tag repair technicians based on their expertise                  | easily identify the right person for a specific issue.              |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | store notes on past repair services for each technician          | track maintenance history and avoid repeated issues.                |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | set reminders for regular maintenance appointments               | proactively prevent equipment failures.                             |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"WhiteBear82"},"content":"| `* *`    | café owner  | set up autofill fields for frequently entered data               | avoid repetitive typing.                                            |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"WhiteBear82"},"content":"| `* *`    | café owner  | enable autofill for supplier names                               | avoid having to type them repeatedly when creating orders.          |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"WhiteBear82"},"content":"| `* *`    | café owner  | enable autofill for supplier email addresses                     | quickly send stock requests without re-entering details.            |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"WhiteBear82"},"content":"| `* *`    | café owner  | enable autofill for supplier phone numbers                       | contact them without needing to look up their details every time.   |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"WhiteBear82"},"content":"| `* *`    | café owner  | enable autofill for commonly ordered stock items                 | quickly add them to an order form.                                  |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"WhiteBear82"},"content":"| `* *`    | café owner  | enable autofill for standard pricing of stock items              | avoid manually entering expected costs.                             |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"WhiteBear82"},"content":"| `* *`    | café owner  | enable autofill for my café\u0027s business details                   | avoid having to repeatedly enter them when placing orders.          |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"WhiteBear82"},"content":"| `* *`    | café owner  | edit or update saved autofill fields                             | ensure information remains accurate.                                |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"WhiteBear82"},"content":"| `*`      | café owner  | disable autofill fields                                          | enter information manually when necessary.                          |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"WhiteBear82"},"content":"| `* *`    | café owner  | view a list of all autofill fields I have set up                 | manage them easily.                                                 |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"WhiteBear82"},"content":"| `* *`    | café owner  | delete autofill entries for outdated suppliers or items          | prevent storing unnecessary data.                                   |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"WhiteBear82"},"content":"| `*`      | café owner  | categorize autofill fields                                       | organize frequently entered data more efficiently.                  |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"WhiteBear82"},"content":"| `* *`    | café owner  | enable autofill suggestions when entering data                   | choose from previously used values instead of typing them manually. |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | add new customers                                                | track their purchase history.                                       |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | record a drink ordered by a customer in their account            | record the history the customer has with us.                        |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | track the data on the types of drinks the customer orders        | tell when a customer has a favourite drink.                         |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | add to a list of supplier emails                                 | keep track of each supplier contact.                                |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"WhiteBear82"},"content":"| `* * *`  | café owner  | delete from list of supplier emails                              | keep the list updated.                                              |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"WhiteBear82"},"content":"(For all use cases below, the System is the Café Management System and the Actor is the café owner, unless specified otherwise)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"WhiteBear82"},"content":"**Use case: Add a Staff Member**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests to add a new staff member. ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"WhiteBear82"},"content":"2. System prompts for staff details: name, phone number, and role. ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"WhiteBear82"},"content":"3. Café owner provides the required details. ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"WhiteBear82"},"content":"4. System validates the input. ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"WhiteBear82"},"content":"5. System adds the new staff member. ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"WhiteBear82"},"content":"6. System confirms the addition.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"WhiteBear82"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"WhiteBear82"},"content":"* 4a. Provided name format is invalid. ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"WhiteBear82"},"content":"  * 4a1. System shows an error message. ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"WhiteBear82"},"content":"  * 4a2. Use case resumes at step 2.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"WhiteBear82"},"content":"* 4b. Provided phone number is invalid.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"WhiteBear82"},"content":"  * 4b1. System shows an error message. ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"WhiteBear82"},"content":"  * 4b2. Use case resumes at step 2.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"WhiteBear82"},"content":"* 4c. Role description exceeds character limit.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"WhiteBear82"},"content":"  * 4c1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"WhiteBear82"},"content":"  * 4c2. Use case resumes at step 2.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"WhiteBear82"},"content":"* 4d. Staff member with the same name and phone number already exists. ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"WhiteBear82"},"content":"  * 4d1. System shows a duplication error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"WhiteBear82"},"content":"* 4e. Staff member with the same name but different phone number exists.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"WhiteBear82"},"content":"  * 4e1. System prompts to confirm if phone number should be updated.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"WhiteBear82"},"content":"  * 4e2. Café owner chooses not to update.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"  Use case ends. ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"WhiteBear82"},"content":"  * 4e3. Café owner chooses to update.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"WhiteBear82"},"content":"    * System updates phone number.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"WhiteBear82"},"content":"    ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"WhiteBear82"},"content":"    * System confirms update.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"WhiteBear82"},"content":"    ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"WhiteBear82"},"content":"  Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"WhiteBear82"},"content":"**Use case: Delete a Staff Member**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests to delete a staff member.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"WhiteBear82"},"content":"2. System prompts for the staff member\u0027s name.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"WhiteBear82"},"content":"3. Café owner provides the staff member’s name.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"WhiteBear82"},"content":"4. System checks if the staff member exists.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"WhiteBear82"},"content":"5. System deletes the staff member.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"WhiteBear82"},"content":"6. System confirms the deletion.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"WhiteBear82"},"content":"7. Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"WhiteBear82"},"content":"* 4a. No staff member with the given name is found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"WhiteBear82"},"content":"  * 4a1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"WhiteBear82"},"content":"* 4b. Multiple staff members with the same name are found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"WhiteBear82"},"content":"  * 4b1. System prompts for the phone number.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"WhiteBear82"},"content":"  * 4b2. Café owner provides the phone number.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"WhiteBear82"},"content":"  * 4b3. System validates and deletes the correct entry.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"WhiteBear82"},"content":"  * 4b4. System confirms the deletion.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"WhiteBear82"},"content":"**Use case: View Staff List**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests to view the staff list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"WhiteBear82"},"content":"2. System retrieves and displays the list of staff members.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"WhiteBear82"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"WhiteBear82"},"content":"* 2a. The staff list is empty.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"WhiteBear82"},"content":"  * 2a1. System shows a message indicating no staff members are found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"WhiteBear82"},"content":"**Use case: Search Staff by Name**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests to search for a staff member by name.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"WhiteBear82"},"content":"2. System prompts for the staff member’s name.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"WhiteBear82"},"content":"3. Café owner provides the staff member’s name.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"WhiteBear82"},"content":"4. System searches for matching staff members.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"WhiteBear82"},"content":"5. System displays matching staff members.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"WhiteBear82"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"WhiteBear82"},"content":"* 4a. No staff members with the given name are found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"WhiteBear82"},"content":"  * 4a1. System shows a message indicating no matches.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"WhiteBear82"},"content":"* 4b. Multiple staff members with the same name are found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"WhiteBear82"},"content":"  * 4b1. System displays all matching entries.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"WhiteBear82"},"content":"**Use case: Define a Reward**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests to define a new reward.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"WhiteBear82"},"content":"2. System prompts for reward details: reward name and points required.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"WhiteBear82"},"content":"3. Café owner provides the required details.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"WhiteBear82"},"content":"4. System validates the input.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"WhiteBear82"},"content":"5. System adds the new reward.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"WhiteBear82"},"content":"6. System confirms the addition.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"WhiteBear82"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"WhiteBear82"},"content":"* 4a. Provided reward name format is invalid. ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"WhiteBear82"},"content":"  * 4a1. System shows an error message. ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"WhiteBear82"},"content":"  * 4a2. Use case resumes at step 2.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"WhiteBear82"},"content":"* 4b. Provided points value is invalid.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"WhiteBear82"},"content":"  * 4b1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"WhiteBear82"},"content":"  * 4b2. Use case resumes at step 2.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"WhiteBear82"},"content":"* 4c. Reward with the same name already exists.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"WhiteBear82"},"content":"  * 4c1. System shows a duplication error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"WhiteBear82"},"content":"**Use case: Edit a Reward**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests to edit an existing reward.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"WhiteBear82"},"content":"2. System prompts for reward name and new points required.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"WhiteBear82"},"content":"3. Café owner provides the reward name and updated points.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"WhiteBear82"},"content":"4. System checks if the reward exists.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"WhiteBear82"},"content":"5. System updates the reward.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"WhiteBear82"},"content":"6. System confirms the update.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"WhiteBear82"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"WhiteBear82"},"content":"* 4a. Reward not found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"WhiteBear82"},"content":"  * 4a1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"WhiteBear82"},"content":"* 4b. Provided points value is invalid.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"WhiteBear82"},"content":"  * 4b1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"WhiteBear82"},"content":"  * 4b2. Use case resumes at step 2.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"WhiteBear82"},"content":"**Use case: Track Customer Points**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests to update customer points.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"WhiteBear82"},"content":"2. System prompts for customer name and points to add or deduct.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"WhiteBear82"},"content":"3. Café owner provides the customer name and points.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"WhiteBear82"},"content":"4. System validates the input.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"WhiteBear82"},"content":"5. System updates the customer’s points balance.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"WhiteBear82"},"content":"6. System confirms the update.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"WhiteBear82"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"WhiteBear82"},"content":"* 4a. Provided customer name format is invalid. ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"WhiteBear82"},"content":"  * 4a1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"WhiteBear82"},"content":"    ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"WhiteBear82"},"content":"  * 4a2. Use case resumes at step 2.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"WhiteBear82"},"content":"* 4b. Provided points value is invalid.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"WhiteBear82"},"content":"  * 4b1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"WhiteBear82"},"content":"  * 4b2. Use case resumes at step 2.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"WhiteBear82"},"content":"* 4c. Customer not found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"WhiteBear82"},"content":"  * 4c1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"WhiteBear82"},"content":"* 4d. Multiple customers with the same name are found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"WhiteBear82"},"content":"  * 4d1. System prompts for a unique identifier (e.g., phone number).","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"WhiteBear82"},"content":"  * 4d2. Café owner provides the identifier.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"WhiteBear82"},"content":"  * 4d3. System validates and updates the correct entry.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"WhiteBear82"},"content":"  * 4d4. System confirms the update.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"WhiteBear82"},"content":"**Use case: Redeem a Reward**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests to redeem a reward for a customer.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"WhiteBear82"},"content":"2. System prompts for customer name and reward name.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"WhiteBear82"},"content":"3. Café owner provides the required details.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"WhiteBear82"},"content":"4. System checks if the customer and reward exist.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"WhiteBear82"},"content":"5. System verifies if the customer has enough points.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"WhiteBear82"},"content":"6. System deducts the required points and confirms the redemption.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"WhiteBear82"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"WhiteBear82"},"content":"* 4a. Customer not found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"WhiteBear82"},"content":"  * 4a1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"WhiteBear82"},"content":"* 4b. Reward not found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"WhiteBear82"},"content":"  * 4b1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"WhiteBear82"},"content":"* 5a. Customer does not have enough points.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"WhiteBear82"},"content":"  * 5a1. System shows an insufficient points message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"WhiteBear82"},"content":"**Use case: View Customer Visit History**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests to view a customer’s visit history.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"WhiteBear82"},"content":"2. System prompts for the customer’s name.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"WhiteBear82"},"content":"3. Café owner provides the customer’s name.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"WhiteBear82"},"content":"4. System retrieves and displays the customer’s visit history.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"WhiteBear82"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"WhiteBear82"},"content":"* 4a. Customer not found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"WhiteBear82"},"content":"  * 4a1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"WhiteBear82"},"content":"* 4b. Customer has no recorded visits.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"WhiteBear82"},"content":"  * 4b1. System shows a message indicating no visit history.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"WhiteBear82"},"content":"**Use case: Generate Daily Sales Summary**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests a daily sales summary for a specific date.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"WhiteBear82"},"content":"2. System validates the date format.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"WhiteBear82"},"content":"3. System retrieves sales data for the given date.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"WhiteBear82"},"content":"4. System compiles the sales summary, including total revenue, transaction count, and most popular item.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"WhiteBear82"},"content":"5. System displays the daily sales summary.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"WhiteBear82"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"WhiteBear82"},"content":"* 2a. Provided date format is invalid.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"WhiteBear82"},"content":"  * 2a1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"WhiteBear82"},"content":"* 3a. No sales data found for the given date.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"WhiteBear82"},"content":"  * 3a1. System shows a message indicating no recorded transactions.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"WhiteBear82"},"content":"**Use case: Generate Customer Insights Report**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests customer insights by providing a customer name or choosing a predefined report type (e.g., top spenders, popular items).","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"WhiteBear82"},"content":"2. System validates the input.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"WhiteBear82"},"content":"3. System retrieves and compiles the requested insights.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"WhiteBear82"},"content":"4. System displays the customer insights report.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"WhiteBear82"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"WhiteBear82"},"content":"* 2a. Provided customer name format is invalid.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"WhiteBear82"},"content":"  * 2a1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"WhiteBear82"},"content":"* 2b. No data available for the requested report.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"WhiteBear82"},"content":"  * 2b1. System shows a message indicating lack of data.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"WhiteBear82"},"content":"* 3a. Customer not found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"WhiteBear82"},"content":"  * 3a1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"WhiteBear82"},"content":"**Use case: Monitor Stock Levels**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests to check stock levels for a specific item or set a low-stock threshold alert.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"WhiteBear82"},"content":"2. System validates the input.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"WhiteBear82"},"content":"3. System retrieves current stock data.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"WhiteBear82"},"content":"4. System displays the stock levels or sets the threshold alert.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"WhiteBear82"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"WhiteBear82"},"content":"* 2a. Provided item name format is invalid.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"WhiteBear82"},"content":"  * 2a1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"WhiteBear82"},"content":"* 2b. Item not found in inventory.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"WhiteBear82"},"content":"  * 2b1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"WhiteBear82"},"content":"* 2c. Provided threshold value is invalid.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"WhiteBear82"},"content":"  * 2c1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"WhiteBear82"},"content":"* 3a. Stock level is below the threshold.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"WhiteBear82"},"content":"  * 3a1. System shows a low-stock alert message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"WhiteBear82"},"content":"**Use case: View Customer Rewards**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests to view a customer’s reward points.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"WhiteBear82"},"content":"2. System validates the customer name.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"WhiteBear82"},"content":"3. System retrieves and displays the customer’s reward points and eligible rewards.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"WhiteBear82"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"WhiteBear82"},"content":"* 2a. Provided customer name format is invalid.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"WhiteBear82"},"content":"  * 2a1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"WhiteBear82"},"content":"* 3a. Customer not found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"WhiteBear82"},"content":"  * 3a1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"WhiteBear82"},"content":"**Use case: View Customer Order History**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests to view a customer’s order history.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"WhiteBear82"},"content":"2. System validates the customer name.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"WhiteBear82"},"content":"3. System retrieves and displays the customer’s past orders.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":809,"author":{"gitId":"WhiteBear82"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":810,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":811,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":812,"author":{"gitId":"WhiteBear82"},"content":"* 2a. Provided customer name format is invalid.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":813,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":814,"author":{"gitId":"WhiteBear82"},"content":"  * 2a1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":815,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":816,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":817,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":818,"author":{"gitId":"WhiteBear82"},"content":"* 3a. Customer not found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":819,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":820,"author":{"gitId":"WhiteBear82"},"content":"  * 3a1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":821,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":822,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":823,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":824,"author":{"gitId":"WhiteBear82"},"content":"* 3b. No past orders found for the customer.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":825,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":826,"author":{"gitId":"WhiteBear82"},"content":"  * 3b1. System shows a message indicating no recorded orders.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":827,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":828,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":829,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":830,"author":{"gitId":"WhiteBear82"},"content":"**Use case: Record Customer Feedback**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":831,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":832,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":833,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":834,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests to add feedback for a customer.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":835,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":836,"author":{"gitId":"WhiteBear82"},"content":"2. System prompts for customer name, rating, and feedback message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":837,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":838,"author":{"gitId":"WhiteBear82"},"content":"3. Café owner provides the required details.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":839,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":840,"author":{"gitId":"WhiteBear82"},"content":"4. System validates the input.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":841,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":842,"author":{"gitId":"WhiteBear82"},"content":"5. System records the feedback.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":843,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":844,"author":{"gitId":"WhiteBear82"},"content":"6. System confirms the feedback addition.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":845,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":846,"author":{"gitId":"WhiteBear82"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":847,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":848,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":849,"author":{"gitId":"WhiteBear82"},"content":"* 4a. Provided customer name format is invalid.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":850,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":851,"author":{"gitId":"WhiteBear82"},"content":"  * 4a1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":852,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":853,"author":{"gitId":"WhiteBear82"},"content":"  * 4a2. Use case resumes at step 2.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":854,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":855,"author":{"gitId":"WhiteBear82"},"content":"* 4b. Provided rating is out of the accepted range.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":856,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":857,"author":{"gitId":"WhiteBear82"},"content":"  * 4b1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":858,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":859,"author":{"gitId":"WhiteBear82"},"content":"  * 4b2. Use case resumes at step 2.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":860,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":861,"author":{"gitId":"WhiteBear82"},"content":"* 4c. Feedback message exceeds character limit.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":862,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":863,"author":{"gitId":"WhiteBear82"},"content":"  * 4c1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":864,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":865,"author":{"gitId":"WhiteBear82"},"content":"  * 4c2. Use case resumes at step 2.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":866,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":867,"author":{"gitId":"WhiteBear82"},"content":"* 4d. Customer not found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":868,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":869,"author":{"gitId":"WhiteBear82"},"content":"  * 4d1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":870,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":871,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":872,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":873,"author":{"gitId":"WhiteBear82"},"content":"**Use case: Add a Supplier Email**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":874,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":875,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":876,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests to add a new supplier email.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":877,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":878,"author":{"gitId":"WhiteBear82"},"content":"2. System prompts for the supplier\u0027s name and email.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":879,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":880,"author":{"gitId":"WhiteBear82"},"content":"3. Café owner provides the required details.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":881,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":882,"author":{"gitId":"WhiteBear82"},"content":"4. System validates the input.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":883,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":884,"author":{"gitId":"WhiteBear82"},"content":"5. System adds the new supplier.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":885,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":886,"author":{"gitId":"WhiteBear82"},"content":"6. System confirms the addition.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":887,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":888,"author":{"gitId":"WhiteBear82"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":889,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":890,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":891,"author":{"gitId":"WhiteBear82"},"content":"* 4a. Provided name format is invalid.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":892,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":893,"author":{"gitId":"WhiteBear82"},"content":"  * 4a1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":894,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":895,"author":{"gitId":"WhiteBear82"},"content":"  * 4a2. Use case resumes at step 2.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":896,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":897,"author":{"gitId":"WhiteBear82"},"content":"* 4b. Provided email format is invalid.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":898,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":899,"author":{"gitId":"WhiteBear82"},"content":"  * 4b1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":900,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":901,"author":{"gitId":"WhiteBear82"},"content":"  * 4b2. Use case resumes at step 2.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":902,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":903,"author":{"gitId":"WhiteBear82"},"content":"* 4c. Supplier with the same name and email already exists.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":904,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":905,"author":{"gitId":"WhiteBear82"},"content":"  * 4c1. System shows a duplication error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":906,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":907,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":908,"author":{"gitId":"WhiteBear82"},"content":"    ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":909,"author":{"gitId":"WhiteBear82"},"content":"* 4d. Supplier with the same name but a different email exists.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":910,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":911,"author":{"gitId":"WhiteBear82"},"content":"  * 4d1. System prompts to confirm if email should be updated.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":912,"author":{"gitId":"WhiteBear82"},"content":"    ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":913,"author":{"gitId":"WhiteBear82"},"content":"  * 4d2. Café owner chooses not to update.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":914,"author":{"gitId":"WhiteBear82"},"content":"    ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":915,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":916,"author":{"gitId":"WhiteBear82"},"content":"    ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":917,"author":{"gitId":"WhiteBear82"},"content":"  * 4d3. Café owner chooses to update.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":918,"author":{"gitId":"WhiteBear82"},"content":"    ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":919,"author":{"gitId":"WhiteBear82"},"content":"    * System updates the email.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":920,"author":{"gitId":"WhiteBear82"},"content":"      ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":921,"author":{"gitId":"WhiteBear82"},"content":"    * System confirms the update.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":922,"author":{"gitId":"WhiteBear82"},"content":"      ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":923,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":924,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":925,"author":{"gitId":"WhiteBear82"},"content":"* 4e. Required fields are missing.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":926,"author":{"gitId":"WhiteBear82"},"content":"    ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":927,"author":{"gitId":"WhiteBear82"},"content":"  * 4e1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":928,"author":{"gitId":"WhiteBear82"},"content":"      ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":929,"author":{"gitId":"WhiteBear82"},"content":"  * 4e2. Use case resumes at step 2.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":930,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":931,"author":{"gitId":"WhiteBear82"},"content":"**Use case: Delete a Supplier Email**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":932,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":933,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":934,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":935,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests to delete a supplier email.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":936,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":937,"author":{"gitId":"WhiteBear82"},"content":"2. System prompts for the supplier\u0027s name.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":938,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":939,"author":{"gitId":"WhiteBear82"},"content":"3. Café owner provides the supplier\u0027s name.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":940,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":941,"author":{"gitId":"WhiteBear82"},"content":"4. System checks if the supplier exists.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":942,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":943,"author":{"gitId":"WhiteBear82"},"content":"5. System deletes the supplier.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":944,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":945,"author":{"gitId":"WhiteBear82"},"content":"6. System confirms the deletion.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":946,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":947,"author":{"gitId":"WhiteBear82"},"content":"Use case ends. ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":948,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":949,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":950,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":951,"author":{"gitId":"WhiteBear82"},"content":"* 4a. No supplier with the given name is found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":952,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":953,"author":{"gitId":"WhiteBear82"},"content":"  * 4a1. System shows an error message.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":954,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":955,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":956,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":957,"author":{"gitId":"WhiteBear82"},"content":"* 4b. Multiple suppliers with the same name are found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":958,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":959,"author":{"gitId":"WhiteBear82"},"content":"  * 4b1. System prompts for the email.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":960,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":961,"author":{"gitId":"WhiteBear82"},"content":"  * 4b2. Café owner provides the email.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":962,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":963,"author":{"gitId":"WhiteBear82"},"content":"  * 4b3. System validates and deletes the correct entry.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":964,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":965,"author":{"gitId":"WhiteBear82"},"content":"  * 4b4. System confirms the deletion.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":966,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":967,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":968,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":969,"author":{"gitId":"WhiteBear82"},"content":"**Use case: View Supplier Email List**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":970,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":971,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":972,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests to view the supplier email list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":973,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":974,"author":{"gitId":"WhiteBear82"},"content":"2. System retrieves and displays the list of suppliers.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":975,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":976,"author":{"gitId":"WhiteBear82"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":977,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":978,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":979,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":980,"author":{"gitId":"WhiteBear82"},"content":"* 2a. The supplier list is empty.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":981,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":982,"author":{"gitId":"WhiteBear82"},"content":"  * 2a1. System shows a message indicating no suppliers are found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":983,"author":{"gitId":"WhiteBear82"},"content":"  ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":984,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":985,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":986,"author":{"gitId":"WhiteBear82"},"content":"**Use case: View Supplier Email List**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":987,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":988,"author":{"gitId":"WhiteBear82"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":989,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":990,"author":{"gitId":"WhiteBear82"},"content":"1. Café owner requests to view the supplier email list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":991,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":992,"author":{"gitId":"WhiteBear82"},"content":"2. System retrieves and displays the list of suppliers.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":993,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":994,"author":{"gitId":"WhiteBear82"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":995,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":996,"author":{"gitId":"WhiteBear82"},"content":"**Extensions**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":997,"author":{"gitId":"WhiteBear82"},"content":"* 2a. The supplier list is empty.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":998,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":999,"author":{"gitId":"WhiteBear82"},"content":"  * 2a1. System shows a message indicating no suppliers are found.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1000,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1001,"author":{"gitId":"WhiteBear82"},"content":"    Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1002,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1003,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1004,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1005,"author":{"gitId":"WhiteBear82"},"content":"1. Performance \u0026 Scalability","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1006,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1007,"author":{"gitId":"WhiteBear82"},"content":"   * The application should be able to handle up to 1000 persons without noticeable sluggishness in performance for typical usage. ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1008,"author":{"gitId":"WhiteBear82"},"content":"   ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1009,"author":{"gitId":"WhiteBear82"},"content":"   * The system should respond to user actions within 1 second for typical operations like adding, deleting, or searching for contacts. ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1010,"author":{"gitId":"WhiteBear82"},"content":"   ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1011,"author":{"gitId":"WhiteBear82"},"content":"   * The startup time should be no more than 2 seconds on a modern consumer-grade computer. ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1012,"author":{"gitId":"WhiteBear82"},"content":"   ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1013,"author":{"gitId":"WhiteBear82"},"content":"   * The application should consume no more than 200MB of RAM during normal operation with 1000 persons stored.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1014,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1015,"author":{"gitId":"WhiteBear82"},"content":"3. Compatibility \u0026 Portability","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1016,"author":{"gitId":"WhiteBear82"},"content":"   ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1017,"author":{"gitId":"WhiteBear82"},"content":"   * The application should be compatible with Java 17 or above and run on any mainstream OS (Windows, Linux, macOS, Unix).","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1018,"author":{"gitId":"WhiteBear82"},"content":"   ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1019,"author":{"gitId":"WhiteBear82"},"content":"   * The application should be usable on both 32-bit and 64-bit architectures.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1020,"author":{"gitId":"WhiteBear82"},"content":"   ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1021,"author":{"gitId":"WhiteBear82"},"content":"   * The system should be self-contained and should not require an internet connection for core functionalities.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1022,"author":{"gitId":"WhiteBear82"},"content":"   ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1023,"author":{"gitId":"WhiteBear82"},"content":"3. Usability \u0026 Accessibility","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1024,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1025,"author":{"gitId":"WhiteBear82"},"content":"   * A user with above-average typing speed for regular English text should be able to accomplish most tasks faster using commands than using the mouse.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1026,"author":{"gitId":"WhiteBear82"},"content":"   ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1027,"author":{"gitId":"WhiteBear82"},"content":"   * The user interface should be intuitive enough for users who are not IT-savvy.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1028,"author":{"gitId":"WhiteBear82"},"content":"   ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1029,"author":{"gitId":"WhiteBear82"},"content":"   * The application should provide clear and actionable error messages when a user makes an incorrect input.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1030,"author":{"gitId":"WhiteBear82"},"content":"   ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1031,"author":{"gitId":"WhiteBear82"},"content":"4. Reliability \u0026 Robustness","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1032,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1033,"author":{"gitId":"WhiteBear82"},"content":"   * The system should not crash or freeze when an invalid command is entered.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1034,"author":{"gitId":"WhiteBear82"},"content":"   ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1035,"author":{"gitId":"WhiteBear82"},"content":"   * User data should be persisted safely to prevent accidental loss due to application crashes.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1036,"author":{"gitId":"WhiteBear82"},"content":"   ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1037,"author":{"gitId":"WhiteBear82"},"content":"   * The system should be able to recover gracefully from unexpected failures (e.g., power loss, abrupt shutdowns).","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1038,"author":{"gitId":"WhiteBear82"},"content":"   ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1039,"author":{"gitId":"WhiteBear82"},"content":"5. Security \u0026 Privacy","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1040,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1041,"author":{"gitId":"WhiteBear82"},"content":"   * The system should not expose private contact details unless explicitly permitted by the user.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1042,"author":{"gitId":"WhiteBear82"},"content":"   ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1043,"author":{"gitId":"WhiteBear82"},"content":"   * The application should ensure that only authorized users can access certain functionalities if applicable.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1044,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1045,"author":{"gitId":"WhiteBear82"},"content":"6. Maintainability \u0026 Extensibility","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1046,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1047,"author":{"gitId":"WhiteBear82"},"content":"   * The codebase should be modular and well-structured, allowing easy addition of new features without affecting existing ones.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1048,"author":{"gitId":"WhiteBear82"},"content":"   ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1049,"author":{"gitId":"WhiteBear82"},"content":"   * The system should be easily maintainable, with clear documentation for developers.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1050,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1051,"author":{"gitId":"WhiteBear82"},"content":"7. Compliance \u0026 Constraints","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1052,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1053,"author":{"gitId":"WhiteBear82"},"content":"   * The application should follow standard software development best practices, ensuring reliability and efficiency. ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1054,"author":{"gitId":"WhiteBear82"},"content":"   ","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1055,"author":{"gitId":"WhiteBear82"},"content":"   * The application should not exceed a total package size of 100MB to ensure ease of distribution and comply with Constraint-File-Size.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1056,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1057,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1058,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1059,"author":{"gitId":"WhiteBear82"},"content":"* Mainstream OS: Operating systems commonly used by the majority of users, including Windows, Linux, Unix, and macOS.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1060,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1061,"author":{"gitId":"WhiteBear82"},"content":"* Private contact detail: A contact detail that is not meant to be shared with others, such as a personal phone number, home address, or private email.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1062,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1063,"author":{"gitId":"WhiteBear82"},"content":"* Typical usage: Standard operations performed within the application, including adding, editing, deleting, and searching for contacts, assuming a user base of up to 1000 persons.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1064,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1065,"author":{"gitId":"WhiteBear82"},"content":"* Command-based interaction: A method of input where users type textual commands to execute actions instead of using a graphical user interface (GUI).","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1066,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1067,"author":{"gitId":"WhiteBear82"},"content":"* Graphical User Interface (GUI): A visual interface that allows users to interact with the system through elements like buttons, forms, and icons instead of typing commands.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1068,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1069,"author":{"gitId":"WhiteBear82"},"content":"* Error message: A message displayed by the system when a user enters an invalid input or an operation cannot be completed, providing clear guidance on how to correct the issue.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1070,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1071,"author":{"gitId":"WhiteBear82"},"content":"* Modern consumer-grade computer: A personal computer with at least a quad-core processor and 8GB of RAM, manufactured within the last five years.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1072,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1073,"author":{"gitId":"WhiteBear82"},"content":"* Modular codebase: A structured code design where different components can be modified, replaced, or extended independently without affecting the overall system.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1074,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1075,"author":{"gitId":"WhiteBear82"},"content":"* Persisted data: Information that is stored and retained across application restarts, ensuring that user data is not lost when the application is closed.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1076,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1077,"author":{"gitId":"WhiteBear82"},"content":"* Startup time: The time taken from launching the application to when it is fully ready for user interaction.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1078,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1079,"author":{"gitId":"WhiteBear82"},"content":"* Authorized user: A user who has been granted specific permissions to access certain functionalities within the system.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1080,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1081,"author":{"gitId":"WhiteBear82"},"content":"* Self-contained application: An application that does not require external dependencies or an internet connection for its core features to function.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1082,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1083,"author":{"gitId":"WhiteBear82"},"content":"* Scalability: The system’s ability to maintain performance and responsiveness even as the user base or data size increases.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1084,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1085,"author":{"gitId":"WhiteBear82"},"content":"* Undo/Redo functionality: A feature that allows users to reverse or reapply their last action, improving usability and error recovery.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1086,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1087,"author":{"gitId":"WhiteBear82"},"content":"* Extensibility: The ability to add new features or enhance existing ones without major rework of the system.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1088,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1089,"author":{"gitId":"WhiteBear82"},"content":"* Logging and audit trail: A system feature that records user actions and system events for security, debugging, or compliance purposes.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":1090,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1091,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1092,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1093,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1094,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1095,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1096,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1097,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":1098,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":1099,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":1100,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1102,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":1103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1104,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1106,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1108,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1110,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1112,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1114,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1116,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1117,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1119,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1121,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1123,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1125,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1127,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1128,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1130,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1131,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1133,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1134,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1136,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1138,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1140,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1142,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":1144,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":773,"-":371}},{"path":"docs/team/findingfaey.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"findingfaey"},"content":"---","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"findingfaey"},"content":"  layout: default.md","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"findingfaey"},"content":"  title: \"Yi Fei\u0027s Project Portfolio Page\"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"findingfaey"},"content":"---","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"findingfaey"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"findingfaey"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"findingfaey"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"findingfaey"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"findingfaey"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"findingfaey"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"findingfaey"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"findingfaey"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"findingfaey"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"findingfaey"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"findingfaey"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"findingfaey"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"findingfaey"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"findingfaey"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"findingfaey"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"findingfaey"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"findingfaey"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"findingfaey"},"content":"* **Project management**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"findingfaey"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"findingfaey"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"findingfaey"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"findingfaey"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"findingfaey"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"findingfaey"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"findingfaey"},"content":"* **Documentation**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"findingfaey"},"content":"    * User Guide:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"findingfaey"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"findingfaey"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"findingfaey"},"content":"    * Developer Guide:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"findingfaey"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"findingfaey"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"findingfaey"},"content":"* **Community**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"findingfaey"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"findingfaey"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"findingfaey"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"findingfaey"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"findingfaey"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"findingfaey"},"content":"* **Tools**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"findingfaey"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"findingfaey"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"findingfaey"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"findingfaey"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"findingfaey":46}},{"path":"docs/team/jsjk112344.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jsjk112344"},"content":"---","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jsjk112344"},"content":"  layout: default.md","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"  title: \"Justin Soon\u0027s Project Portfolio Page\"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jsjk112344"},"content":"---","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jsjk112344"},"content":"### Project: CaféConnect","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jsjk112344"},"content":"CafeConnect is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jsjk112344"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jsjk112344"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jsjk112344"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jsjk112344"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jsjk112344"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jsjk112344"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jsjk112344"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jsjk112344"},"content":"* **Project management**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jsjk112344"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jsjk112344"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jsjk112344"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jsjk112344"},"content":"* **Documentation**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jsjk112344"},"content":"  * User Guide:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jsjk112344"},"content":"  * Developer Guide:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jsjk112344"},"content":"* **Community**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jsjk112344"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jsjk112344"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jsjk112344"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jsjk112344"},"content":"* **Tools**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jsjk112344"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"Jsjk112344":46}},{"path":"docs/team/loyaltypollution.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"loyaltypollution"},"content":"---","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"loyaltypollution"},"content":"  layout: default.md","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"loyaltypollution"},"content":"  title: \"Loyaltypollution\u0027s Project Portfolio Page\"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"loyaltypollution"},"content":"---","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"loyaltypollution"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"loyaltypollution"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"loyaltypollution"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"loyaltypollution"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"loyaltypollution"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"loyaltypollution"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"loyaltypollution"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"loyaltypollution"},"content":"* **Planned Feature**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"loyaltypollution"},"content":"  * to be filled","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"loyaltypollution"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"loyaltypollution"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"loyaltypollution"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"loyaltypollution"},"content":"* **Project management**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"loyaltypollution"},"content":"  * to be filled","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"loyaltypollution"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"loyaltypollution"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"loyaltypollution"},"content":"  * to be filled","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"loyaltypollution"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"loyaltypollution"},"content":"* **Documentation**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"loyaltypollution"},"content":"  * to be filled","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"loyaltypollution"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"loyaltypollution"},"content":"* **Community**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"loyaltypollution"},"content":"* authored PR #20: Bug Fix in `RemarkCommand`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"loyaltypollution"},"content":"    * Fixed regex failure causing CI pipeline failures","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"loyaltypollution"},"content":"    * CI pipeline now passes without errors related to `RemarkCommand`","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"loyaltypollution"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"loyaltypollution"},"content":"* **Tools**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"loyaltypollution"},"content":"  * to be filled","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"loyaltypollution"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"loyaltypollution"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"loyaltypollution":34}},{"path":"docs/team/rannn367.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rannn367"},"content":"---","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rannn367"},"content":"  layout: default.md","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rannn367"},"content":"  title: \"John Doe\u0027s Project Portfolio Page\"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rannn367"},"content":"---","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rannn367"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rannn367"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rannn367"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rannn367"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rannn367"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rannn367"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rannn367"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rannn367"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rannn367"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rannn367"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rannn367"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rannn367"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rannn367"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rannn367"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rannn367"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rannn367"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rannn367"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rannn367"},"content":"* **Project management**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rannn367"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rannn367"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rannn367"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rannn367"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rannn367"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rannn367"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rannn367"},"content":"* **Documentation**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rannn367"},"content":"    * User Guide:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rannn367"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rannn367"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rannn367"},"content":"    * Developer Guide:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rannn367"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rannn367"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rannn367"},"content":"* **Community**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rannn367"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rannn367"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rannn367"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rannn367"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rannn367"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rannn367"},"content":"* **Tools**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rannn367"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rannn367"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rannn367"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rannn367"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"rannn367":46}},{"path":"docs/team/whitebear82.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"---","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"  layout: default.md","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"  title: \"John Doe\u0027s Project Portfolio Page\"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"---","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"### Project: CaféConnect","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"* **Project management**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"* **Documentation**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"  * User Guide:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"  * Developer Guide:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"* **Community**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"* **Tools**:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":46}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"loyaltypollution"},"content":"     * Creates and returns a {@code Person} with the details of","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"loyaltypollution"},"content":"     * {@code personToEdit} edited with {@code editPersonDescriptor}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Remark updatedRemark \u003d personToEdit.getRemark(); // edit command does not allow editing remarks","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark, updatedTags);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"loyaltypollution"},"content":"     * Stores the details to edit the person with. Each non-empty field value","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"loyaltypollution"},"content":"     * will replace the corresponding field value of the person.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"loyaltypollution"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Remark remark;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"loyaltypollution"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"loyaltypollution"},"content":"        }","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"loyaltypollution"},"content":"         * Copy constructor. A defensive copy of {@code tags} is used","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"loyaltypollution"},"content":"         * internally.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, remark, tags);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"loyaltypollution"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}. A defensive copy of","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"loyaltypollution"},"content":"         * {@code tags} is used internally.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"loyaltypollution"},"content":"         * Returns an unmodifiable tag set, which throws","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"loyaltypollution"},"content":"         * {@code UnsupportedOperationException} if modification is attempted.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26","isFullCredit":false}],"authorContributionMap":{"loyaltypollution":13,"-":243,"Jsjk112344":1}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_REMARK + \"[REMARK]\\n\"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_REMARK + \"Likes to swim.\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Remark remark;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return String.format(message, Messages.format(personToEdit));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"-":93,"Jsjk112344":5}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"loyaltypollution"},"content":"    /**","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"loyaltypollution"},"content":"     * Parses a {@code String remark} into a {@code Remark}.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"loyaltypollution"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"loyaltypollution"},"content":"     *","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"loyaltypollution"},"content":"     * @throws ParseException if the given {@code remark} is invalid.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"loyaltypollution"},"content":"     */","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(remark);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Remark.isValidRemark(trimmedRemark)) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"loyaltypollution":6,"-":135}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"loyaltypollution"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new RemarkCommand(index, new Remark(remark));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"loyaltypollution":1,"-":33,"Jsjk112344":1}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Remark remark;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, remark, tags);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Remark getRemark() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return remark;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":124,"Jsjk112344":1}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s remarks in the address book.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRemark(String)}","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Remark {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remarks can take any values, and it should not be blank\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"loyaltypollution"},"content":"     * No validation for remarks as it can take any value,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"loyaltypollution"},"content":"     * including empty string.","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"loyaltypollution"},"content":"    public static final String VALIDATION_REGEX \u003d \".*\";","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Remark}.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param Remark A valid remark.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Remark(String remark) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(remark);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidRemark(remark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d remark;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Remark)) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Remark otherRemark \u003d (Remark) other;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.equals(otherRemark.value);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false}],"authorContributionMap":{"loyaltypollution":3,"-":62,"Jsjk112344":4}},{"path":"src/main/java/seedu/address/model/person/Staff.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":" * Represents a Staff member in the café management system.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":" * Inherits from Person and adds staff-specific attributes.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"public class Staff extends Person {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"    // Staff-specific fields","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    private final String staffId; // Unique identifier for staff","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"    private final String role; // Job role (e.g., \"Barista\", \"Manager\")","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"    private final String shiftTiming; // Work schedule (e.g., \"9am-5pm\")","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    private final int hoursWorked; // Total hours worked in a period","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    private final double performanceRating; // Performance rating out of 5.0","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    public Staff(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"                 String staffId, String role, String shiftTiming, int hoursWorked, double performanceRating) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"        super(name, phone, email, address, remark, tags);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"        requireAllNonNull(staffId, role, shiftTiming, hoursWorked, performanceRating);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"        this.staffId \u003d staffId;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"        this.role \u003d role;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"        this.shiftTiming \u003d shiftTiming;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"        this.hoursWorked \u003d hoursWorked;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"        this.performanceRating \u003d performanceRating;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"    public String getStaffId() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"        return staffId;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"    public String getRole() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"        return role;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"    public String getShiftTiming() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"        return shiftTiming;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"    public int getHoursWorked() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"        return hoursWorked;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"    public double getPerformanceRating() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"        return performanceRating;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"     * Returns true if both staff members have the same staff ID.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"     * This defines a weaker notion of equality between two staff members.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"    public boolean isSameStaff(Staff otherStaff) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"        if (otherStaff \u003d\u003d this) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"            return true;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"        if (otherStaff \u003d\u003d null) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"            return false;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"        // Compare using staffId, name, or any unique field","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"        return otherStaff.getStaffId().equals(getStaffId());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"     * Returns true if both staff members have the same identity and data fields.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"            return true;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"        if (!(other instanceof Staff)) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"            return false;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WhiteBear82"},"content":"        Staff otherStaff \u003d (Staff) other;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WhiteBear82"},"content":"        return super.equals(otherStaff) // Calls the equality check from Person","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WhiteBear82"},"content":"                \u0026\u0026 staffId.equals(otherStaff.staffId)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WhiteBear82"},"content":"                \u0026\u0026 role.equals(otherStaff.role)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WhiteBear82"},"content":"                \u0026\u0026 shiftTiming.equals(otherStaff.shiftTiming)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WhiteBear82"},"content":"                \u0026\u0026 hoursWorked \u003d\u003d otherStaff.hoursWorked","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WhiteBear82"},"content":"                \u0026\u0026 Double.compare(performanceRating, otherStaff.performanceRating) \u003d\u003d 0;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WhiteBear82"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WhiteBear82"},"content":"        return super.hashCode() + staffId.hashCode() + role.hashCode()","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WhiteBear82"},"content":"                + shiftTiming.hashCode() + Integer.hashCode(hoursWorked)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WhiteBear82"},"content":"                + Double.hashCode(performanceRating);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WhiteBear82"},"content":"    @Override","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WhiteBear82"},"content":"    public String toString() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WhiteBear82"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WhiteBear82"},"content":"                .add(\"staffId\", getStaffId())","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"WhiteBear82"},"content":"                .add(\"name\", getName())","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"WhiteBear82"},"content":"                .add(\"phone\", getPhone())","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"WhiteBear82"},"content":"                .add(\"email\", getEmail())","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"WhiteBear82"},"content":"                .add(\"address\", getAddress())","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"WhiteBear82"},"content":"                .add(\"tags\", getTags())","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"WhiteBear82"},"content":"                .add(\"role\", role)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"WhiteBear82"},"content":"                .add(\"shiftTiming\", shiftTiming)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"WhiteBear82"},"content":"                .add(\"hoursWorked\", hoursWorked)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"WhiteBear82"},"content":"                .add(\"performanceRating\", performanceRating)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"WhiteBear82"},"content":"                .toString();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":120}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_REMARK,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_REMARK,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_REMARK,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_REMARK,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_REMARK,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_REMARK,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20","isFullCredit":false}],"authorContributionMap":{"-":64,"Jsjk112344":2}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"loyaltypollution"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"loyaltypollution"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(\"\").build();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"loyaltypollution"},"content":"                new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"loyaltypollution"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"loyaltypollution"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"loyaltypollution"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS,","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"loyaltypollution"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"                new Remark(VALID_REMARK_AMY))));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"                new Remark(VALID_REMARK_BOB))));","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"loyaltypollution":7,"-":110}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jsjk112344"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jsjk112344"},"content":"        final Remark remark \u003d new Remark(\"Some remark.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_REMARK + remark);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, remark), command);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jsjk112344"},"content":"","lastModifiedDate":"2025-02-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24","isFullCredit":false}],"authorContributionMap":{"-":112,"Jsjk112344":4}},{"path":"src/test/java/seedu/address/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"loyaltypollution"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"loyaltypollution"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"loyaltypollution"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jsjk112344"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"loyaltypollution"},"content":"","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private RemarkCommandParser parser \u003d new RemarkCommandParser();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jsjk112344"},"content":"    private final Remark nonEmptyRemark \u003d new Remark(\"Some remark.\");","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // have remark","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + nonEmptyRemark;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        RemarkCommand expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, nonEmptyRemark);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no remark","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jsjk112344"},"content":"        expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(\"\"));","lastModifiedDate":"2025-02-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // no parameters","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // no index","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD + \" \" + nonEmptyRemark, expectedMessage);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"loyaltypollution":4,"-":31,"Jsjk112344":3}},{"path":"src/test/java/seedu/address/model/person/StaffTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import static seedu.address.testutil.TypicalStaff.ALEX;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import static seedu.address.testutil.TypicalStaff.BEN;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"import seedu.address.testutil.StaffBuilder;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"public class StaffTest {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"        Staff staff \u003d new StaffBuilder().build();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e staff.getTags().remove(0));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    public void isSameStaff() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(ALEX.isSameStaff(ALEX));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"        // Different staffId, same name, different phone, rest same -\u003e returns false","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"        Staff editedBen \u003d new StaffBuilder(BEN).withStaffId(\"S1005\").withPhone(\"91234567\").build();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"        assertFalse(BEN.isSameStaff(editedBen));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"    public void hashCode_sameStaff_returnsSameHashCode() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"        Staff benCopy \u003d new StaffBuilder(BEN).build();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(BEN.hashCode(), benCopy.hashCode()); // Same fields -\u003e same hashcode","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"    public void hashCode_differentStaff_returnsDifferentHashCode() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"        Staff editedBen \u003d new StaffBuilder(BEN).withStaffId(\"S9999\").build();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"        assertNotEquals(BEN.hashCode(), editedBen.hashCode()); // Different staffId -\u003e different hashcode","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"    public void isSameStaff_nullStaff_returnsFalse() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"        assertFalse(BEN.isSameStaff(null)); // null -\u003e should return false","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"    public void equals() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"        Staff alexCopy \u003d new StaffBuilder(ALEX).build();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(ALEX.equals(alexCopy));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"        assertTrue(ALEX.equals(ALEX));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"        assertFalse(ALEX.equals(null));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"        assertFalse(ALEX.equals(5));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"        // different staff -\u003e returns false","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"        assertFalse(ALEX.equals(BEN));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"        // different staffId -\u003e returns false","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"        Staff editedAlex \u003d new StaffBuilder(ALEX).withStaffId(\"S1003\").build();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"        assertFalse(ALEX.equals(editedAlex));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"        // different role -\u003e returns false","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"        editedAlex \u003d new StaffBuilder(ALEX).withRole(\"Manager\").build();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"        assertFalse(ALEX.equals(editedAlex));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"        // different shiftTiming -\u003e returns false","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"        editedAlex \u003d new StaffBuilder(ALEX).withShiftTiming(\"10am-6pm\").build();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"        assertFalse(ALEX.equals(editedAlex));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"        // different hoursWorked -\u003e returns false","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"        editedAlex \u003d new StaffBuilder(ALEX).withHoursWorked(45).build();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"        assertFalse(ALEX.equals(editedAlex));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"        // different performanceRating -\u003e returns false","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WhiteBear82"},"content":"        editedAlex \u003d new StaffBuilder(ALEX).withPerformanceRating(4.8).build();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WhiteBear82"},"content":"        assertFalse(ALEX.equals(editedAlex));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WhiteBear82"},"content":"    @Test","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WhiteBear82"},"content":"    public void toStringMethod() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WhiteBear82"},"content":"        String expected \u003d Staff.class.getCanonicalName() + \"{staffId\u003d\" + ALEX.getStaffId() + \", \"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WhiteBear82"},"content":"                + \"name\u003d\" + ALEX.getName() + \", phone\u003d\" + ALEX.getPhone() + \", email\u003d\" + ALEX.getEmail()","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WhiteBear82"},"content":"                + \", address\u003d\" + ALEX.getAddress() + \", tags\u003d\" + ALEX.getTags() + \", role\u003d\" + ALEX.getRole()","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WhiteBear82"},"content":"                + \", shiftTiming\u003d\" + ALEX.getShiftTiming() + \", hoursWorked\u003d\" + ALEX.getHoursWorked()","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WhiteBear82"},"content":"                + \", performanceRating\u003d\" + ALEX.getPerformanceRating() + \"}\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WhiteBear82"},"content":"        assertEquals(expected, ALEX.toString());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":99}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"loyaltypollution"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2025-03-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_REMARK \u003d \"She likes aardvarks.\";","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Remark remark;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, remark, tags);","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03","isFullCredit":false}],"authorContributionMap":{"loyaltypollution":1,"-":107}},{"path":"src/test/java/seedu/address/testutil/StaffBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package seedu.address.testutil;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":" * A utility class to help with building Staff objects.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"public class StaffBuilder {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    public static final String DEFAULT_NAME \u003d \"Alex Tan\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"    public static final String DEFAULT_PHONE \u003d \"91234567\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"    public static final String DEFAULT_EMAIL \u003d \"alex.tan@example.com\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"456, Bukit Timah Road, #12-34\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"    public static final String DEFAULT_REMARK \u003d \"Punctual and hardworking.\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    public static final String DEFAULT_STAFF_ID \u003d \"S1001\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"    public static final String DEFAULT_ROLE \u003d \"Barista\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    public static final String DEFAULT_SHIFT_TIMING \u003d \"8am-4pm\";","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"    public static final int DEFAULT_HOURS_WORKED \u003d 40;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"    public static final double DEFAULT_PERFORMANCE_RATING \u003d 4.5;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    private Name name;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"    private Phone phone;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"    private Email email;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"    private Address address;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"    private Remark remark;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"    private String staffId;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"    private String role;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"WhiteBear82"},"content":"    private String shiftTiming;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"WhiteBear82"},"content":"    private int hoursWorked;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"WhiteBear82"},"content":"    private double performanceRating;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"WhiteBear82"},"content":"     * Creates a {@code StaffBuilder} with the default details.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"WhiteBear82"},"content":"    public StaffBuilder() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"WhiteBear82"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"WhiteBear82"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"WhiteBear82"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"WhiteBear82"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"WhiteBear82"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"WhiteBear82"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"WhiteBear82"},"content":"        staffId \u003d DEFAULT_STAFF_ID;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"WhiteBear82"},"content":"        role \u003d DEFAULT_ROLE;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"WhiteBear82"},"content":"        shiftTiming \u003d DEFAULT_SHIFT_TIMING;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"WhiteBear82"},"content":"        hoursWorked \u003d DEFAULT_HOURS_WORKED;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"WhiteBear82"},"content":"        performanceRating \u003d DEFAULT_PERFORMANCE_RATING;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"WhiteBear82"},"content":"     * Initializes the StaffBuilder with the data of {@code staffToCopy}.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"WhiteBear82"},"content":"    public StaffBuilder(Staff staffToCopy) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"WhiteBear82"},"content":"        name \u003d staffToCopy.getName();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"WhiteBear82"},"content":"        phone \u003d staffToCopy.getPhone();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"WhiteBear82"},"content":"        email \u003d staffToCopy.getEmail();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"WhiteBear82"},"content":"        address \u003d staffToCopy.getAddress();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"WhiteBear82"},"content":"        remark \u003d staffToCopy.getRemark();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"WhiteBear82"},"content":"        tags \u003d new HashSet\u003c\u003e(staffToCopy.getTags());","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"WhiteBear82"},"content":"        staffId \u003d staffToCopy.getStaffId();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"WhiteBear82"},"content":"        role \u003d staffToCopy.getRole();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"WhiteBear82"},"content":"        shiftTiming \u003d staffToCopy.getShiftTiming();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"WhiteBear82"},"content":"        hoursWorked \u003d staffToCopy.getHoursWorked();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"WhiteBear82"},"content":"        performanceRating \u003d staffToCopy.getPerformanceRating();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"WhiteBear82"},"content":"     * Sets the {@code Name} of the {@code Staff} that we are building.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"WhiteBear82"},"content":"    public StaffBuilder withName(String name) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"WhiteBear82"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"WhiteBear82"},"content":"        return this;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"WhiteBear82"},"content":"     * Sets the {@code Phone} of the {@code Staff} that we are building.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"WhiteBear82"},"content":"    public StaffBuilder withPhone(String phone) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"WhiteBear82"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"WhiteBear82"},"content":"        return this;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"WhiteBear82"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"WhiteBear82"},"content":"    public StaffBuilder withEmail(String email) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"WhiteBear82"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"WhiteBear82"},"content":"        return this;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"WhiteBear82"},"content":"     * Sets the {@code Address} of the {@code Staff} that we are building.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"WhiteBear82"},"content":"    public StaffBuilder withAddress(String address) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"WhiteBear82"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"WhiteBear82"},"content":"        return this;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"WhiteBear82"},"content":"     * Sets the {@code Remark} of the {@code Staff} that we are building.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"WhiteBear82"},"content":"    public StaffBuilder withRemark(String remark) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"WhiteBear82"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"WhiteBear82"},"content":"        return this;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"WhiteBear82"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"WhiteBear82"},"content":"    public StaffBuilder withTags(String... tags) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"WhiteBear82"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"WhiteBear82"},"content":"        return this;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"WhiteBear82"},"content":"     * Sets the {@code Address} of the {@code Staff} that we are building.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"WhiteBear82"},"content":"    public StaffBuilder withStaffId(String staffId) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"WhiteBear82"},"content":"        this.staffId \u003d staffId;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"WhiteBear82"},"content":"        return this;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"WhiteBear82"},"content":"     * Sets the {@code Role} of the {@code Staff} that we are building.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"WhiteBear82"},"content":"    public StaffBuilder withRole(String role) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"WhiteBear82"},"content":"        this.role \u003d role;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"WhiteBear82"},"content":"        return this;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"WhiteBear82"},"content":"     * Sets the {@code ShiftTiming} of the {@code Staff} that we are building.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"WhiteBear82"},"content":"    public StaffBuilder withShiftTiming(String shiftTiming) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"WhiteBear82"},"content":"        this.shiftTiming \u003d shiftTiming;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"WhiteBear82"},"content":"        return this;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"WhiteBear82"},"content":"     * Sets the {@code HoursWorked} of the {@code Staff} that we are building.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"WhiteBear82"},"content":"    public StaffBuilder withHoursWorked(int hoursWorked) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"WhiteBear82"},"content":"        this.hoursWorked \u003d hoursWorked;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"WhiteBear82"},"content":"        return this;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"WhiteBear82"},"content":"     * Sets the {@code PerformanceRating} of the {@code Staff} that we are building.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"WhiteBear82"},"content":"    public StaffBuilder withPerformanceRating(double performanceRating) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"WhiteBear82"},"content":"        this.performanceRating \u003d performanceRating;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"WhiteBear82"},"content":"        return this;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"WhiteBear82"},"content":"    /**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"WhiteBear82"},"content":"     * Builds the staff with the information altogether.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"WhiteBear82"},"content":"     */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"WhiteBear82"},"content":"    public Staff build() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"WhiteBear82"},"content":"        return new Staff(name, phone, email, address, remark, tags,","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"WhiteBear82"},"content":"                staffId, role, shiftTiming, hoursWorked, performanceRating);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":172}},{"path":"src/test/java/seedu/address/testutil/TypicalStaff.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WhiteBear82"},"content":"package seedu.address.testutil;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"WhiteBear82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"WhiteBear82"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"WhiteBear82"},"content":"import java.util.List;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"WhiteBear82"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"WhiteBear82"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"WhiteBear82"},"content":"/**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"WhiteBear82"},"content":" * A utility class containing a list of {@code Staff} objects to be used in tests.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"WhiteBear82"},"content":" */","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"WhiteBear82"},"content":"public class TypicalStaff {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"WhiteBear82"},"content":"    public static final Staff ALEX \u003d new StaffBuilder().withName(\"Alex Tan\").withPhone(\"91234567\")","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"WhiteBear82"},"content":"            .withEmail(\"alex.tan@example.com\").withAddress(\"456, Bukit Timah Road, #12-34\")","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"WhiteBear82"},"content":"            .withStaffId(\"S1001\").withRole(\"Barista\").withShiftTiming(\"8am-4pm\")","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"WhiteBear82"},"content":"            .withHoursWorked(40).withPerformanceRating(4.5).withTags(\"teamplayer\").build();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"WhiteBear82"},"content":"    public static final Staff BEN \u003d new StaffBuilder().withName(\"Ben Chua\").withPhone(\"98765432\")","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"WhiteBear82"},"content":"            .withEmail(\"ben.chua@example.com\").withAddress(\"789, Orchard Road, #22-56\")","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"WhiteBear82"},"content":"            .withStaffId(\"S1002\").withRole(\"Cashier\").withShiftTiming(\"4pm-12am\")","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"WhiteBear82"},"content":"            .withHoursWorked(38).withPerformanceRating(4.2).withTags(\"punctual\").build();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"WhiteBear82"},"content":"    private TypicalStaff() {} // prevents instantiation","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"WhiteBear82"},"content":"    public static List\u003cStaff\u003e getTypicalStaff() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"WhiteBear82"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALEX, BEN));","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"WhiteBear82"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"WhiteBear82"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"WhiteBear82"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"WhiteBear82"},"content":"        for (Staff staff : getTypicalStaff()) {","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"WhiteBear82"},"content":"            ab.addPerson(staff);","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"WhiteBear82"},"content":"        }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"WhiteBear82"},"content":"        return ab;","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"WhiteBear82"},"content":"    }","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"WhiteBear82"},"content":"}","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"WhiteBear82":38}}]
