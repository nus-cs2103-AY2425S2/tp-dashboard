[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"[![CI Status](https://github.com/AY2425S2-CS2103T-W09-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2425S2-CS2103T-W09-4/tp/actions)","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"# HappyEverAfter","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"## Target User Profile","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"**Wedding planner professionals seeking an integrated platform to manage clients, vendors, and invitations efficiently.**","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"## Value Proposition","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"HappyEverAfter is the ultimate wedding planning hub, streamlining client and vendor management for wedding planners. With an organized interface that efficiently tracks client details, allows coordination with caterers, and sending invites and requests effortlessly, it ensures a stress-free planning experience for our users. With everything in one place, wedding planners can focus on what truly matters: creating unforgettable experiences.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"## Acknowledgement","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false}],"authorContributionMap":{"-":3,"Xzh119":11}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"### Xu Zhehao","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"\u003cimg src\u003d\"images/xzh119.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"[[github](http://github.com/xzh119)] [[portfolio](team/xzh119.md)]","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"* Role: Team Lead","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"* Responsibilities: UI","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"### Raeeda Ibnat Hossain","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"\u003cimg src\u003d\"images/rae2480.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"[[github](http://github.com/Rae2480)]","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"[[portfolio](team/rae2480.md)]","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"* Role: Developer","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"* Responsibilities: Site Reliability Engineer","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"### Timothy Soon","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"\u003cimg src\u003d\"images/soonami69.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"[[github](http://github.com/soonami69)] [[portfolio](team/soonami69.md)]","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"* Role: Integration","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"* Responsibilities: Scheduling and Tracking","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zedonggg"},"content":"### Sun Ze Dong","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zedonggg"},"content":"\u003cimg src\u003d\"images/zedonggg.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zedonggg"},"content":"[[github](https://github.com/zedonggg)]","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hrishikeshsathyian"},"content":"### Hrishikesh Sathyian","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hrishikeshsathyian"},"content":"\u003cimg src\u003d\"images/hrishikeshsathyian.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hrishikeshsathyian"},"content":"[[github](http://github.com/hrishikeshsathyian)]","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hrishikeshsathyian"},"content":"* Responsibilities: Full Stack","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":4,"Rae2480":11,"soonami69":5,"zedonggg":3,"-":39}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"DevOps guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# DevOps guide","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Rae2480"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2425S2-CS2103T-W09-4/tp/blob/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26","isFullCredit":false}],"authorContributionMap":{"Rae2480":1,"-":81}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"# HappyEverAfter Developer Guide","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2425S2-CS2103T-W09-4/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2425S2-CS2103T-W09-4/tp/blob/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Rae2480"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2425S2-CS2103T-W09-4/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2425S2-CS2103T-W09-4/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Rae2480"},"content":"**API** : [`Logic.java`](https://github.com/AY2425S2-CS2103T-W09-4/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Rae2480"},"content":"**API** : [`Model.java`](https://github.com/AY2425S2-CS2103T-W09-4/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Rae2480"},"content":"**API** : [`Storage.java`](https://github.com/AY2425S2-CS2103T-W09-4/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"soonami69"},"content":"* has a need to manage a significant number of contacts over a variety of diferent weddings","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Xzh119"},"content":"**Value proposition**: manage wedding tasks faster and clearer than a typical mouse/GUI driven app","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Rae2480"},"content":"|----------|--------------------------------------------|-------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions                          | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Rae2480"},"content":"| `* * *`  | user                                       | create a new wedding folder with a unique name | organize wedding details separately                                    |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Rae2480"},"content":"| `* * *`  | user                                       | open a wedding by its name                     | manage its details                                                     |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Rae2480"},"content":"| `* * *`  | user                                       | close an open wedding                          | open a different wedding                                              |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Rae2480"},"content":"| `* * *`  | user                                       | sort weddings by date                          | easily view upcoming weddings in chronological order and plan accordingly |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Rae2480"},"content":"| `* * *`  | user                                       | add a new person’s contact details to a wedding | track attendees and their information                                 |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Rae2480"},"content":"| `* *`  | user                                       | find a person by name                          | quickly locate their details                                          |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Rae2480"},"content":"| `*`  | user                                       | search using partial name matching             | find people even if I don’t remember their full name                   |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Rae2480"},"content":"| `* *`  | user                                       | filter search results by guests, staff, or couple | narrow down results                                                  |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Rae2480"},"content":"| `* * *`  | user                                       | delete a person from a wedding                 | remove incorrect or outdated entries                                  |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Rae2480"},"content":"| `*`  | user                                       | be asked for confirmation before deletion      | avoid deleting someone by mistake                                    |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Rae2480"},"content":"| `* *`  | user                                       | have my wedding data saved automatically       | avoid losing my progress                                             |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Rae2480"},"content":"| `* * *`  | user                                       | retrieve my saved data when restarting the app | continue managing weddings from where I left off                     |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Rae2480"},"content":"| `* * *`  | user                                       | have data persist even after closing the app   | ensure my information remains intact                                 |","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details                   | minimize chance of someone else seeing them by accident              |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name                           | locate a person easily                                               |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"soonami69"},"content":"(For all use cases below, the **System** is the `HappilyEverAfter` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"soonami69"},"content":"**Use case: Creating a new wedding**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"soonami69"},"content":"1. User creates a new wedding","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"soonami69"},"content":"2. HappilyEverAfter provides confirmation that the wedding has been created","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"soonami69"},"content":"     Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"soonami69"},"content":"**Extensions**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"soonami69"},"content":"* 2a. There exists a wedding with the same name.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"soonami69"},"content":"  2ai. HappilyEverAfter shows an error message.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"soonami69"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"soonami69"},"content":"  Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"soonami69"},"content":"* 2b. Wedding name provided is in an invalid format.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"soonami69"},"content":"  ","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"soonami69"},"content":"  2bi. HappilyEverAfter shows an error message.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"soonami69"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"soonami69"},"content":"**Use case: Adding a person to a wedding**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"soonami69"},"content":"**MSS**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"soonami69"},"content":"1. User requests to list weddings","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"soonami69"},"content":"2. HappilyEverAfter shows a list of weddings","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"soonami69"},"content":"3. User opens the wedding they want","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"soonami69"},"content":"4. HappilyEverAfter provides confirmation that the wedding has been opened","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"soonami69"},"content":"5. User adds contact information of person","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"soonami69"},"content":"6. HappilyEverAfter acts the person to that wedding.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"     Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"soonami69"},"content":"* 5a. Contact information provided is in an invalid format.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"soonami69"},"content":"  5ai. HappilyEverAfter shows an error message.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"soonami69"},"content":"**Use case: Delete a person from a wedding**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"soonami69"},"content":"1. User requests to list weddings","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"soonami69"},"content":"2. HappilyEverAfter shows a list of weddings","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"soonami69"},"content":"3. User opens the wedding they want","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"soonami69"},"content":"4. HappilyEverAfter provides confirmation that the wedding has been opened","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"soonami69"},"content":"5. User requests to list persons associated with that wedding","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"soonami69"},"content":"6. HappilyEverAfter shows a list of persons","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"soonami69"},"content":"7. User requests to delete a specific person in the list","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"soonami69"},"content":"8. HappilyEverAfter deletes the person","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"soonami69"},"content":"* 5a. The list is empty.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"soonami69"},"content":"  Use case ends.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"soonami69"},"content":"* 7a. The given index is invalid.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"soonami69"},"content":"    * 7a1. AddressBook shows an error message.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"soonami69"},"content":"      Use case resumes at step 6.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"hrishikeshsathyian"},"content":"2.  Should be able to hold up to 1000 weddings without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"hrishikeshsathyian"},"content":"4.  Data loss should not occur even in the event of an unexpected shutdown (e.g., GUI crash).","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"hrishikeshsathyian"},"content":"5.  The system should be modular, allowing for easy addition or removal of features without affecting existing functionality.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"hrishikeshsathyian"},"content":"6.  All data should be stored locally on the user\u0027s device, and users should be able to access and modify their data without any delays caused by network connectivity.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"hrishikeshsathyian"},"content":"7.  The system should perform input validation and generate a response within 500 milliseconds for each user input to ensure a smooth and responsive user experience.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"Xzh119"},"content":"* **Client**:  A couple or individual using the wedding planner’s services to organize their wedding","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"Xzh119"},"content":"* **Vendor**: A service provider (e.g., caterers, florists, photographers) who collaborates with the wedding planner","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"Xzh119"},"content":"* **Invitation**: A digital or physical wedding invitation managed and tracked within the system","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"Xzh119"},"content":"* **Event Timeline**: A structured schedule outlining key wedding milestones and deadlines","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"Xzh119"},"content":"* **Vendor Coordination**: The process of managing communication and contracts with wedding vendors","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"Xzh119"},"content":"* **Reminder Notifications**: Automated alerts to keep planners on schedule with tasks","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"Xzh119"},"content":"* **Error Message**: A message displayed when an invalid operation occurs","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"soonami69"},"content":"### Adding a wedding","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"soonami69"},"content":"1. Adding a wedding to `HappilyEverAfter`","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"soonami69"},"content":"   1. Prerequisites: Application must be open","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"soonami69"},"content":"   1. Test case: `new n/NAME d/09092027`\u003cbr\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"soonami69"},"content":"      Expected: The application will prompt addition of the contact details of bride and groom.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"soonami69"},"content":"   1. Test case: `new NAME`\u003cbr\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"soonami69"},"content":"      Expected: No wedding is created. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"soonami69"},"content":"   1. Other incorrect `new` commands to try: `new`, `new n/NAME d/DATE`, `...` (where DATE is not a recognised date format)\u003cbr\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":6,"Rae2480":20,"soonami69":60,"-":383,"Xzh119":8}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hrishikeshsathyian"},"content":"  title: \"HappyEverAfter User Guide\"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hrishikeshsathyian"},"content":"# HappyEverAfter User Guide","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hrishikeshsathyian"},"content":"Welcome to HappyEverAfter - a quick, robust, intuitive Wedding Planner designed to help wedding organisers keep track of their weddings. HappyEverAfter provides a plethora of features, such as the creation of weddings, and the adding of members with roles to each wedding. Wedding Planning can get hectic, especially for a busy planner like you, and with just some typing commands, HappyEverAfter can help you get organised and sorted in no time! ","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hrishikeshsathyian"},"content":"# Table of Contents","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hrishikeshsathyian"},"content":"1. [Quick Start](#quick-start)","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"2. [Command Formats](#feature-details)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hrishikeshsathyian"},"content":"3. [Features](#features)","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"    - [System Commands](#system-commands)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"        - [Viewing help](#viewing-help--help)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"        - [Exiting the program](#exiting-the-program-exit)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"    - [Wedding Management](#wedding-management)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"        - [Creating a new wedding](#creating-a-wedding-add)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"        - [Opening a wedding](#opening-a-wedding--open)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"        - [Closing a wedding](#closing-the-current-wedding-closewedding)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"        - [Listing all weddings](#listing-all-weddings-list)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"        - [Sorting weddings by date](#sorting-weddings-by-date-sort)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"    - [Member Management](#member-management-)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"        - [Adding a person to a wedding](#adding-a-person-add)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"4. [Data Storage](#data-storage)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"5. [FAQ](#faq)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"7. [Command Summary](#command-summary)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Ensure you have Java `17` or above installed in your Computer.\u003cbr\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hrishikeshsathyian"},"content":"   - Java Installation","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hrishikeshsathyian"},"content":"   - **Mac users:** Ensure you have the precise JDK version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hrishikeshsathyian"},"content":"2. Download the latest version of HappyEverAfter","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hrishikeshsathyian"},"content":"   - Click the following link [here](https://github.com/AY2425S2-CS2103T-W09-4/tp/releases) and download the file `happilyeverafter.jar`.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hrishikeshsathyian"},"content":"3. Move the file to the folder","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hrishikeshsathyian"},"content":"    - Copy the file to the folder you want to use as the _home folder_ for your HappyEverAfter.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hrishikeshsathyian"},"content":"4. Running HappyEverAfter","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hrishikeshsathyian"},"content":"    - Open the \"Command Prompt\" (for Windows) or \"Terminal\" (for Mac/Linux).","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hrishikeshsathyian"},"content":"    - Enter `cd` followed by the folder location where you saved the EduConnect file. For example:","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hrishikeshsathyian"},"content":"        - On Windows: `cd C:\\Users\\JohnDoe\\Desktop\\HappyEverAfter`","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hrishikeshsathyian"},"content":"        - On Mac/Linux: `cd /Users/JohnDoe/Desktop/HappyEverAfter`","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hrishikeshsathyian"},"content":"    - Then run this command to launch HappyEverAfter:","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hrishikeshsathyian"},"content":"      `java -jar happilyeverafter.jar`","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hrishikeshsathyian"},"content":"   - A Graphical User Interface (GUI) similar to the image below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"      ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hrishikeshsathyian"},"content":"5. Type the command in the command box and press Enter to execute it. ","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hrishikeshsathyian"},"content":"   - See [features](#features) for the list of all possible commands to execute","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hrishikeshsathyian"},"content":"[Back to Table of Contents](#table-of-contents-)","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hrishikeshsathyian"},"content":"## Feature-Details","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xzh119"},"content":"  e.g. in `new n/WEDDING_NAME`, you should replace `WEDDING_NAME` with the actual name, like `new n/John \u0026 Mary`.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xzh119"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or simply as `n/John Doe`.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xzh119"},"content":"* Parameters can be provided in any order.\u003cbr\u003e","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hrishikeshsathyian"},"content":"* The `DATE` Parameter has to be in the format `DDMMYYYY` ","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hrishikeshsathyian"},"content":"  * e.g `25122025` for the 25th December 2025","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hrishikeshsathyian"},"content":"* The `EMAIL` Parameter has to be a valid email address","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hrishikeshsathyian"},"content":"    * e.g `e\\hrishikeshsathyian2002@gmail.com` ","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xzh119"},"content":"* Special role tags to identify the bride and groom:","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xzh119"},"content":"    * Use `t/bride` to designate a person as the bride","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xzh119"},"content":"    * Use `t/groom` to designate a person as the groom","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xzh119"},"content":"    * A wedding must have both a bride and groom to be valid","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hrishikeshsathyian"},"content":"# Features","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xzh119"},"content":"## System commands","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"hrishikeshsathyian"},"content":"Shows a message explaining how to access the User Guide.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xzh119"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xzh119"},"content":"Exits the HappyEverAfter application.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xzh119"},"content":"Format: `exit`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xzh119"},"content":"## Wedding Management","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"hrishikeshsathyian"},"content":"### Creating a wedding: `add`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"hrishikeshsathyian"},"content":"Adds a wedding to the wedding planner.  ","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"hrishikeshsathyian"},"content":"Format: `new n/WEDDING_NAME d/DATE`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"hrishikeshsathyian"},"content":"Examples: ","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"hrishikeshsathyian"},"content":"* `new n/John \u0026 Mary d/25122025`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Xzh119"},"content":"### Opening a wedding : `open`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Xzh119"},"content":"Opens a wedding from the Wedding Planner to view its persons.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Xzh119"},"content":"Format: `open INDEX`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Xzh119"},"content":"* `open 1` (Opens the first wedding in the list)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Xzh119"},"content":"* `open 3` (Opens the third wedding in the list)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Xzh119"},"content":"### Closing the current wedding: `closewedding`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Xzh119"},"content":"Closes the currently open wedding project to return to the main view.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Xzh119"},"content":"Format: `closewedding`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Xzh119"},"content":"### Listing all weddings: `list`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Xzh119"},"content":"Shows a list of all weddings in the wedding planner.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Xzh119"},"content":"Format: `list`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Rae2480"},"content":"### Sorting weddings by date: `sort`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Rae2480"},"content":"Shows a list of all weddings in the wedding planner, organised from earliest to latest.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Rae2480"},"content":"Format:  `sort`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Xzh119"},"content":"## Member Management ","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Xzh119"},"content":"### Adding a person: `add`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Xzh119"},"content":"Adds a person to the **active** Wedding Planner.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Xzh119"},"content":"Use tags to specify if the person is a bride, groom, or other wedding party member.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Xzh119"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Xzh119"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Xzh119"},"content":"**Note:** ","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Xzh119"},"content":"* Active refers to the wedding associated with the last `open` or `new` command","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Xzh119"},"content":"* Each wedding must have exactly one bride and one groom.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Xzh119"},"content":"* Use `t/bride` to designate a person as the bride.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Xzh119"},"content":"* Use `t/groom` to designate a person as the groom.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Xzh119"},"content":"* Other people added without these special tags will be considered as wedding party members.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Xzh119"},"content":"* A person can have any number of tags (including 0)","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Xzh119"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Xzh119"},"content":"* `add n/Mary Muller p/98765432 e/mary@example.com a/123 Kentridgr St t/bride`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Xzh119"},"content":"* `add n/John Danny p/89989788 e/john@example.com a/456 UTR Ave t/groom`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Xzh119"},"content":"* `add n/Harry Kane p/13701978 e/kane@example.com a/789 NUS Rd t/bridesmaid`","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Xzh119"},"content":"## Data Storage","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Rae2480"},"content":"\u003c!-- ### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Rae2480"},"content":"_Details coming soon ..._ --\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Xzh119"},"content":"**Q**: How do I transfer my wedding planner data to another computer?  ","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Xzh119"},"content":"**A**: Install HappyEverAfter on the other computer and replace the empty data file it creates with the file from your original installation (located at `/data/weddingplanner.json`).","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Xzh119"},"content":"**Q**: Can I add multiple weddings at once?  ","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Xzh119"},"content":"**A**: No, you need to create weddings one at a time using the `new` command.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Xzh119"},"content":"**Q**: What happens if I try to add a second bride or groom to a wedding?  ","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Xzh119"},"content":"**A**: The system will display an error message as each wedding can have only one bride and one groom.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Xzh119"},"content":"**Q**: How many people can I add to a wedding?  ","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Xzh119"},"content":"**A**: At most 100 members for one wedding.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Xzh119"},"content":"| **Help** | `help` |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Xzh119"},"content":"| **Create Wedding** | `new n/WEDDING_NAME d/DATE`\u003cbr\u003ee.g., `new n/John \u0026 Mary d/25122025` |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Xzh119"},"content":"| **Open Wedding** | `open INDEX`\u003cbr\u003ee.g., `open 2` |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Xzh119"},"content":"| **Close Wedding** | `closewedding` |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Xzh119"},"content":"| **List Weddings** | `list` |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Rae2480"},"content":"| **Sort Weddings by Date** | `sort` |","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Xzh119"},"content":"| **Add Person** | `add n/NAME p/PHONE e/EMAIL a/ADDRESS [t/TAG]...`\u003cbr\u003ee.g., `add n/Mary Smith p/98765432 e/mary@example.com a/123 Wedding St t/bride` |","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Xzh119"},"content":"| **Exit** | `exit` |","lastModifiedDate":"2025-03-23","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":39,"Rae2480":7,"-":109,"Xzh119":72}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eHappyEverAfter\u003c/a\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2425S2-CS2103T-W09-4/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false}],"authorContributionMap":{"-":65,"Xzh119":2}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"# HappyEverAfter","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"**HappyEverAfter is a desktop application for wedding planner professionals seeking an integrated platform to manage clients, vendors, and invitations efficiently.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"* If you are interested in using HappyEverAfter, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"* If you are interested about developing HappyEverAfter, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"Rae2480":4,"-":17}},{"path":"docs/team/rae2480.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"  layout: default.md","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"  title: \"Raeeda Ibnat Hossain\u0027s Project Portfolio Page\"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"---","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"### Project:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"HappyEverAfter is a desktop address book application used by wedding planners for keeping track of client ad vendor contact details. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"* **New Feature**: Added the ability to open a wedding in the planner.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"  * What it does: Allows the user to open a specific wedding by selecting it from the list. Once opened, the planner will display detailed information related to the selected wedding.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"  * Justification: This feature is essential because it allows users to focus on one specific wedding at a time and manage its associated details without clutter.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"  * Highlights: Implementing this feature required careful handling of state management to ensure that the correct wedding details were displayed and that switching between weddings was seamless.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"* **New Feature**: Added the ability to close the currently opened wedding.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"  * What it does: Allows the user to close an opened wedding and return to the main wedding list view.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"  * Justification: This feature improves user experience by giving them control over when to exit the detailed view and return to the overview of all weddings.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"* **New Feature**: Added the ability to create a new wedding.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"  * What it does: Allows the user to add a new wedding to the planner by specifying relevant details such as names, contact information, and date.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"  * Justification: This feature is a core functionality of the planner, enabling users to expand their list of weddings to manage.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"* **New Feature**: Added the ability to sort weddings by date.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"  * What it does: Allows the user to sort the list of weddings in ascending order based on their dates.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"  * Justification: This feature enhances usability by enabling users to view upcoming weddings in chronological order, making planning and navigation easier.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2425s2.github.io/tp-dashboard/#/widget/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-02-21\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dRae2480\u0026tabRepo\u003dAY2425S2-CS2103T-W09-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse\u0026chartGroupIndex\u003d80\u0026chartIndex\u003d1)","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"* **Project management**:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"  * Updated the AB3 logic to account for weddings in the model \u0026 contacts being inside weddings (Pull requests [\\#48](https://github.com/AY2425S2-CS2103T-W09-4/tp/pull/48))","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"  \u003c!-- * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]()) --\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"* **Documentation**:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"  * User Guide:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"    * Added documentation for the feature `sort` [\\#76](https://github.com/AY2425S2-CS2103T-W09-4/tp/pull/76)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"    \u003c!-- * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]() --\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"  * Developer Guide:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"    * Added user stories for MVP features [\\#30](https://github.com/AY2425S2-CS2103T-W09-4/tp/pull/31)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"* **Community**:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#44](https://github.com/AY2425S2-CS2103T-W09-4/tp/pull/44), [\\#74](https://github.com/AY2425S2-CS2103T-W09-4/tp/pull/74)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"  * Contributed to forum discussions (examples: [1](https://github.com/nus-cs2103-AY2425S2/forum/issues/138), [2](https://github.com/nus-cs2103-AY2425S2/forum/issues/139), [3](https://github.com/nus-cs2103-AY2425S2/forum/issues/145), [4](https://github.com/nus-cs2103-AY2425S2/forum/issues/190))","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"  \u003c!-- * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]()) --\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"  \u003c!-- * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]()) --\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"* **Tools**:","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"  \u003c!-- * Integrated a third party library (Natty) to the project ([\\#42]()) --\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"  \u003c!-- * Integrated a new Github plugin (CircleCI) to the team repo --\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rae2480"},"content":"\u003c!-- * _{you can add/remove categories in the list above}_ --\u003e","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Rae2480":66}},{"path":"docs/team/soonami69.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"  title: \"Timothy Soon\u0027s Project Portfolio Page\"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"soonami69":1,"-":45}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.ReadOnlyWeddingPlanner;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.WeddingModelManager;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.WeddingPlanner;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zedonggg"},"content":"import seedu.address.storage.JsonWeddingPlannerStorage;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zedonggg"},"content":"import seedu.address.storage.WeddingPlannerStorage;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xzh119"},"content":"    protected WeddingModel model;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zedonggg"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing HappyEverAfter ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zedonggg"},"content":"        WeddingPlannerStorage weddingPlannerStorage \u003d new JsonWeddingPlannerStorage(userPrefs","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zedonggg"},"content":"                .getWeddingPlannerFilePath());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zedonggg"},"content":"        storage \u003d new StorageManager(weddingPlannerStorage, userPrefsStorage);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zedonggg"},"content":"     * Returns a {@code WeddingModelManager} with the data from {@code storage}\u0027s wedding planner and {@code userPrefs}.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zedonggg"},"content":"     * The data from the sample wedding planner will be used instead if {@code storage}\u0027s wedding planner is not found,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zedonggg"},"content":"     * or an empty wedding planner will be used instead if errors occur when reading {@code storage}\u0027s wedding planner.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xzh119"},"content":"    private WeddingModel initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zedonggg"},"content":"        logger.info(\"Using data file : \" + storage.getWeddingPlannerFilePath());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zedonggg"},"content":"        Optional\u003cReadOnlyWeddingPlanner\u003e weddingPlannerOptional;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zedonggg"},"content":"        ReadOnlyWeddingPlanner initialData;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zedonggg"},"content":"            weddingPlannerOptional \u003d storage.readWeddingPlanner();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zedonggg"},"content":"            if (!weddingPlannerOptional.isPresent()) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zedonggg"},"content":"                logger.info(\"Creating a new data file \" + storage.getWeddingPlannerFilePath()","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zedonggg"},"content":"                        + \" populated with a sample WeddingPlanner.\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zedonggg"},"content":"            initialData \u003d weddingPlannerOptional.orElseGet(SampleDataUtil::getSampleWeddingPlanner);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zedonggg"},"content":"            logger.warning(\"Data file at \" + storage.getWeddingPlannerFilePath() + \" could not be loaded.\"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zedonggg"},"content":"                    + \" Will be starting with an empty WeddingPlanner.\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zedonggg"},"content":"            initialData \u003d new WeddingPlanner();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zedonggg"},"content":"        return new WeddingModelManager(initialData, userPrefs);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping AddressBook ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"zedonggg":25,"-":159,"Xzh119":2}},{"path":"src/main/java/seedu/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"zedonggg":1,"-":144}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.ReadOnlyWeddingPlanner;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"     * Returns the wedding planner.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"    ReadOnlyWeddingPlanner getWeddingPlanner();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"     * Returns an unmodifiable view of the filtered list of weddings","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"    ObservableList\u003cWedding\u003e getFilteredWeddingList();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"     * Returns the wedding planner file path.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"    Path getWeddingPlannerFilePath();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25","isFullCredit":false}],"authorContributionMap":{"Rae2480":16,"soonami69":1,"-":37}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"import seedu.address.logic.parser.WeddingPlannerParser;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.ReadOnlyWeddingPlanner;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"    private final WeddingModel model;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"    private final WeddingPlannerParser weddingPlannerParser;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"    public LogicManager(WeddingModel model, Storage storage) { // Changed parameter type from Model to WeddingModel","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"soonami69"},"content":"        weddingPlannerParser \u003d new WeddingPlannerParser();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":"        Command command \u003d weddingPlannerParser.parseCommand(commandText);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zedonggg"},"content":"            storage.saveWeddingPlanner(model.getWeddingPlanner());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zedonggg"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zedonggg"},"content":"            System.out.println(\"dsljfskljdf\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Rae2480"},"content":"    public ReadOnlyWeddingPlanner getWeddingPlanner() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Rae2480"},"content":"        return model.getWeddingPlanner();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Rae2480"},"content":"    public ObservableList\u003cWedding\u003e getFilteredWeddingList() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Rae2480"},"content":"        return model.getFilteredWeddingList();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Rae2480"},"content":"    public Path getWeddingPlannerFilePath() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Rae2480"},"content":"        return model.getWeddingPlannerFilePath();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21","isFullCredit":false}],"authorContributionMap":{"Rae2480":16,"soonami69":6,"zedonggg":5,"-":69,"Xzh119":2}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"    public static final String MESSAGE_COMMAND_NOT_IN_USE \u003d \"Command not in use!\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hrishikeshsathyian"},"content":"     * Formats the {@code Wedding} for display to the user.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hrishikeshsathyian"},"content":"    public static String formatWedding(Wedding wedding) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hrishikeshsathyian"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hrishikeshsathyian"},"content":"        builder.append(wedding.getTitle())","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hrishikeshsathyian"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hrishikeshsathyian"},"content":"                .append(wedding.getDate());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hrishikeshsathyian"},"content":"        return builder.toString();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":12,"soonami69":1,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"soonami69"},"content":"    public CommandResult execute(WeddingModel model) throws CommandException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"soonami69"},"content":"        throw new CommandException(\"Command not in use!\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"soonami69":6,"-":84}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"    public CommandResult execute(WeddingModel model) throws CommandException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"        throw new CommandException(\"Command not in use!\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"soonami69":7,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hrishikeshsathyian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hrishikeshsathyian"},"content":"        throw new UnsupportedOperationException(\"This command does not support execution on a Model.\");","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hrishikeshsathyian"},"content":"     * Executes the command on a WeddingModel.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hrishikeshsathyian"},"content":"     *","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hrishikeshsathyian"},"content":"     * @param model {@code WeddingModel} which the command should operate on.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hrishikeshsathyian"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hrishikeshsathyian"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"    public abstract CommandResult execute(WeddingModel model) throws CommandException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":12,"soonami69":1,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"soonami69"},"content":"    public CommandResult execute(WeddingModel model) throws CommandException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":"        throw new CommandException(\"Command not in use!\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"soonami69":6,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"soonami69"},"content":"    public CommandResult execute(WeddingModel model) throws CommandException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"soonami69"},"content":"        throw new CommandException(\"Command not in use!\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26","isFullCredit":false}],"authorContributionMap":{"soonami69":6,"-":242}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"    public CommandResult execute(WeddingModel model) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22","isFullCredit":false}],"authorContributionMap":{"soonami69":2,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"    public CommandResult execute(WeddingModel model) throws CommandException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"        throw new CommandException(\"Command not in use!\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22","isFullCredit":false}],"authorContributionMap":{"soonami69":7,"-":58}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"    public CommandResult execute(WeddingModel model) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"soonami69":2,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"import static seedu.address.model.WeddingModel.PREDICATE_SHOW_ALL_WEDDINGS;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all weddings!\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"    public CommandResult execute(WeddingModel model) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"        model.updateFilteredWeddingList(PREDICATE_SHOW_ALL_WEDDINGS);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"soonami69":5,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/SortWeddingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":" * Sorts all weddings by date.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"public class SortWeddingCommand extends Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted all weddings by date!\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"    public CommandResult execute(WeddingModel model) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"        model.sortWeddingList();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Rae2480":22}},{"path":"src/main/java/seedu/address/logic/commands/wedding/AddWeddingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hrishikeshsathyian"},"content":"package seedu.address.logic.commands.wedding;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hrishikeshsathyian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hrishikeshsathyian"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":" * Creates a new wedding draft in the Wedding Planner","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hrishikeshsathyian"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hrishikeshsathyian"},"content":"public class AddWeddingCommand extends Command {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"    public static final String COMMAND_WORD \u003d \"new\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"        + \": Creates a wedding draft\\n\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"        + \"Parameters: n/WEDDING_NAME d/DATE\\n\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"        + \"Example: \" + COMMAND_WORD + \" n/John \u0026 Mary d/25122025\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Wedding draft created! \"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"        + \"Now add bride/groom using:\\n\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"        + \"add n/NAME p/PHONE e/EMAIL a/ADDRESS t/bride\\n\"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"        + \"add n/NAME p/PHONE e/EMAIL a/ADDRESS t/groom\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hrishikeshsathyian"},"content":"    public static final String MESSAGE_DUPLICATE_WEDDING \u003d \"This wedding already exists.\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"    public static final String MESSAGE_EXISTING_DRAFT \u003d \"Overwriting previous wedding draft.\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"    private final Wedding draftWedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"     * Creates an AddWeddingCommand to add the specified {@code Wedding}","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"    public AddWeddingCommand(Wedding draftWedding) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"        requireNonNull(draftWedding);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"        this.draftWedding \u003d draftWedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hrishikeshsathyian"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hrishikeshsathyian"},"content":"    public CommandResult execute(WeddingModel model) throws CommandException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hrishikeshsathyian"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"        // Check against existing weddings in permanent storage","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"        if (model.hasWedding(draftWedding)) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hrishikeshsathyian"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_WEDDING);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hrishikeshsathyian"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"        // Handle existing draft","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"        String feedback \u003d MESSAGE_SUCCESS;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"        if (model.hasDraftWedding()) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"            feedback \u003d MESSAGE_EXISTING_DRAFT + \"\\n\" + MESSAGE_SUCCESS;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"        // Set the new draft wedding","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"        model.setDraftWedding(draftWedding);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"soonami69"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"soonami69"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"soonami69"},"content":"            return true;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"soonami69"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"soonami69"},"content":"        if (!(other instanceof AddWeddingCommand)) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"soonami69"},"content":"            return false;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"soonami69"},"content":"        AddWeddingCommand otherAddCommand \u003d (AddWeddingCommand) other;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"soonami69"},"content":"        return draftWedding.equals(otherAddCommand.draftWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hrishikeshsathyian"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":27,"Rae2480":27,"soonami69":18}},{"path":"src/main/java/seedu/address/logic/commands/wedding/AddWeddingPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hrishikeshsathyian"},"content":"package seedu.address.logic.commands.wedding;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hrishikeshsathyian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hrishikeshsathyian"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":" * Adds a person to the currently active wedding (draft or open)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hrishikeshsathyian"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hrishikeshsathyian"},"content":"public class AddWeddingPersonCommand extends Command {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"        + \": Adds a person to the active wedding\\n\"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"        + \"Parameters: \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"        + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"        + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"        + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"        + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"        + \"[\" + PREFIX_TAG + \"ROLE]...\\n\"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"        + PREFIX_NAME + \"Mary \" + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"        + PREFIX_EMAIL + \"mary@example.com \" + PREFIX_ADDRESS + \"123 Street \"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"        + PREFIX_TAG + \"bride\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added %1$s as %2$s\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the wedding\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"    public static final String MESSAGE_NO_ACTIVE_WEDDING \u003d \"No active wedding! Create or open a wedding first.\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"    public static final String MESSAGE_ROLE_CONFLICT \u003d \"The %s role is already assigned!\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"    public static final String MESSAGE_INVALID_ROLE_TAG \u003d \"Invalid role tag! Use \u0027bride\u0027 or \u0027groom\u0027 for special roles.\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hrishikeshsathyian"},"content":"    private final Person toAdd;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"     * Creates an AddPersonCommand to add the specified {@code Person}","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"    public AddWeddingPersonCommand(Person toAdd) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hrishikeshsathyian"},"content":"        this.toAdd \u003d toAdd;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hrishikeshsathyian"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"hrishikeshsathyian"},"content":"    public CommandResult execute(WeddingModel model) throws CommandException {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hrishikeshsathyian"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"        Wedding activeWedding \u003d model.getDraftWedding() !\u003d null","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"            ? model.getDraftWedding()","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"            : model.getCurrentWedding();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"        if (activeWedding \u003d\u003d null) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"            throw new CommandException(MESSAGE_NO_ACTIVE_WEDDING);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"        if (model.weddingHasPerson(activeWedding, toAdd)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hrishikeshsathyian"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hrishikeshsathyian"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rae2480"},"content":"        // Determine role from tags","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rae2480"},"content":"        String role \u003d \"member\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rae2480"},"content":"        if (toAdd.getTags().stream().anyMatch(t -\u003e t.tagName.equalsIgnoreCase(\"bride\"))) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Rae2480"},"content":"            role \u003d \"bride\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Rae2480"},"content":"        } else if (toAdd.getTags().stream().anyMatch(t -\u003e t.tagName.equalsIgnoreCase(\"groom\"))) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Rae2480"},"content":"            role \u003d \"groom\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Rae2480"},"content":"        switch (role.toLowerCase()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Rae2480"},"content":"        case \"bride\":","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Rae2480"},"content":"            if (activeWedding.getBride() !\u003d null) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Rae2480"},"content":"                throw new CommandException(String.format(MESSAGE_ROLE_CONFLICT, \"bride\"));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Rae2480"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Rae2480"},"content":"            activeWedding.setBride(toAdd);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Rae2480"},"content":"            break;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Rae2480"},"content":"        case \"groom\":","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Rae2480"},"content":"            if (activeWedding.getGroom() !\u003d null) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Rae2480"},"content":"                throw new CommandException(String.format(MESSAGE_ROLE_CONFLICT, \"groom\"));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Rae2480"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Rae2480"},"content":"            activeWedding.setGroom(toAdd);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Rae2480"},"content":"            break;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Rae2480"},"content":"        default:","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Rae2480"},"content":"            activeWedding.addMember(toAdd);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Rae2480"},"content":"            break;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Rae2480"},"content":"        // Update model state","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Rae2480"},"content":"        if (model.hasDraftWedding()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Rae2480"},"content":"            model.setDraftWedding(activeWedding);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"soonami69"},"content":"            if (activeWedding.isValid()) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"soonami69"},"content":"                model.commitDraftWedding();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"soonami69"},"content":"                System.out.println(\"Committing wedding...\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"soonami69"},"content":"            }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Rae2480"},"content":"        } else {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Rae2480"},"content":"            model.setCurrentWedding(activeWedding);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Rae2480"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS,","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Rae2480"},"content":"            Messages.format(toAdd),","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Rae2480"},"content":"            role.toUpperCase()));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hrishikeshsathyian"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":29,"Rae2480":77,"soonami69":5}},{"path":"src/main/java/seedu/address/logic/commands/wedding/CloseWeddingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package seedu.address.logic.commands.wedding;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":" * Closes the currently open wedding","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"public class CloseWeddingCommand extends Command {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"    public static final String COMMAND_WORD \u003d \"close\";","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Closed current wedding\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"    public static final String MESSAGE_NO_OPEN_WEDDING \u003d \"No wedding is currently open\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"    public CommandResult execute(WeddingModel model) throws CommandException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"        if (!model.hasCurrentWedding()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"            throw new CommandException(MESSAGE_NO_OPEN_WEDDING);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"        model.clearCurrentWedding();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"Rae2480":28,"soonami69":1}},{"path":"src/main/java/seedu/address/logic/commands/wedding/FindMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.logic.commands.wedding;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"import java.util.List;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.person.NameContainsSubstringPredicate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":" * Finds and lists all weddings in the wedding planner that have members whose names contain any of","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":" * the argument substrings.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":" * Substring matching is case insensitive.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"public class FindMemberCommand extends Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"    public static final String COMMAND_WORD \u003d \"findmember\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all weddings containing members whose names \"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"            + \"contain any of the specified keywords (case-insensitive) and displays them as a list.\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"            + \"Example: \" + COMMAND_WORD + \" jerry je Jerry\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"    public static final String MESSAGE_NO_MATCHING_MEMBERS \u003d \"No members found with the given keywords.\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"    public static final String MESSAGE_MEMBERS_FOUND_OVERVIEW \u003d \"Found %1$d wedding(s) with matching members.\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"    private final NameContainsSubstringPredicate predicate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"    public FindMemberCommand(NameContainsSubstringPredicate predicate) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xzh119"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xzh119"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"    public CommandResult execute(WeddingModel model) throws CommandException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xzh119"},"content":"        List\u003cWedding\u003e allWeddings \u003d model.getWeddingPlanner().getWeddingList();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xzh119"},"content":"        List\u003cWedding\u003e matchedWeddings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xzh119"},"content":"        StringBuilder resultMessage \u003d new StringBuilder();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xzh119"},"content":"        // Track total matches for the summary","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xzh119"},"content":"        int totalMatches \u003d 0;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xzh119"},"content":"        // Check if any member matches the predicate for each wedding","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xzh119"},"content":"        for (Wedding wedding : allWeddings) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xzh119"},"content":"            boolean foundMatch \u003d false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xzh119"},"content":"            List\u003cPerson\u003e matchedMembers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xzh119"},"content":"            // Check bride","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xzh119"},"content":"            if (wedding.getBride() !\u003d null \u0026\u0026 predicate.test(wedding.getBride())) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xzh119"},"content":"                matchedMembers.add(wedding.getBride());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xzh119"},"content":"                foundMatch \u003d true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xzh119"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xzh119"},"content":"            // Check groom","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xzh119"},"content":"            if (wedding.getGroom() !\u003d null \u0026\u0026 predicate.test(wedding.getGroom())) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xzh119"},"content":"                matchedMembers.add(wedding.getGroom());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xzh119"},"content":"                foundMatch \u003d true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xzh119"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xzh119"},"content":"            // Check other members","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xzh119"},"content":"            if (wedding.getMembers() !\u003d null) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xzh119"},"content":"                for (Person member : wedding.getMembers().asUnmodifiableObservableList()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xzh119"},"content":"                    if (predicate.test(member)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xzh119"},"content":"                        matchedMembers.add(member);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xzh119"},"content":"                        foundMatch \u003d true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xzh119"},"content":"                    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xzh119"},"content":"                }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xzh119"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xzh119"},"content":"            // Add matchFound to results","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xzh119"},"content":"            if (foundMatch) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xzh119"},"content":"                matchedWeddings.add(wedding);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xzh119"},"content":"                totalMatches +\u003d matchedMembers.size();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xzh119"},"content":"                // Add wedding details","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xzh119"},"content":"                resultMessage.append(\"\\nWedding: \").append(wedding.getTitle())","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xzh119"},"content":"                        .append(\" (\").append(wedding.getDate()).append(\")\\n\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xzh119"},"content":"                resultMessage.append(\"Matched members: \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xzh119"},"content":"                for (Person member : matchedMembers) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xzh119"},"content":"                    resultMessage.append(member.getName().fullName).append(\", \");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xzh119"},"content":"                }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xzh119"},"content":"                // Remove trailing comma and space","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xzh119"},"content":"                if (!matchedMembers.isEmpty()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xzh119"},"content":"                    resultMessage.delete(resultMessage.length() - 2, resultMessage.length());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xzh119"},"content":"                }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xzh119"},"content":"                resultMessage.append(\"\\n\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Xzh119"},"content":"            }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xzh119"},"content":"        // Update model to display matched weddings among all weddings","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xzh119"},"content":"        model.updateFilteredWeddingList(wedding -\u003e matchedWeddings.contains(wedding));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Xzh119"},"content":"        if (matchedWeddings.isEmpty()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Xzh119"},"content":"            return new CommandResult(MESSAGE_NO_MATCHING_MEMBERS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xzh119"},"content":"        String returnMessage \u003d String.format(MESSAGE_MEMBERS_FOUND_OVERVIEW, matchedWeddings.size())","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xzh119"},"content":"                + \"\\nTotal matching members found: \" + totalMatches + \"\\n\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Xzh119"},"content":"        return new CommandResult(returnMessage + resultMessage.toString());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xzh119"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Xzh119"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xzh119"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Xzh119"},"content":"            return true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Xzh119"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Xzh119"},"content":"        if (!(other instanceof FindMemberCommand)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Xzh119"},"content":"            return false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Xzh119"},"content":"        FindMemberCommand otherFindMemberCommand \u003d (FindMemberCommand) other;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Xzh119"},"content":"        return predicate.equals(otherFindMemberCommand.predicate);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Xzh119":125}},{"path":"src/main/java/seedu/address/logic/commands/wedding/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hrishikeshsathyian"},"content":"package seedu.address.logic.commands.wedding;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hrishikeshsathyian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hrishikeshsathyian"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hrishikeshsathyian"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hrishikeshsathyian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Help message displayed\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hrishikeshsathyian"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Help window successfully displayed! In case you missed it,\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hrishikeshsathyian"},"content":"                        + \" refer to this URL for the User Guide: \\n https://ay2425s2-cs2103t-w09-4.github.io/tp/\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hrishikeshsathyian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hrishikeshsathyian"},"content":"                                                + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hrishikeshsathyian"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hrishikeshsathyian"},"content":"    public CommandResult execute(WeddingModel model) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hrishikeshsathyian"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hrishikeshsathyian"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":23}},{"path":"src/main/java/seedu/address/logic/commands/wedding/OpenWeddingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package seedu.address.logic.commands.wedding;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":" * Opens a specific wedding for editing","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"public class OpenWeddingCommand extends Command {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"    public static final String COMMAND_WORD \u003d \"open\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"        + \": Opens a wedding for editing\\n\"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"        + \"Parameters: INDEX\\n\"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Now editing wedding: %1$s\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"The wedding index is invalid\";","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"    private final Index targetIndex;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"    public OpenWeddingCommand(Index targetIndex) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"    public CommandResult execute(WeddingModel model) throws CommandException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d model.getFilteredWeddingList().size()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"            throw new CommandException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"        Wedding weddingToOpen \u003d model.getFilteredWeddingList().get(targetIndex.getZeroBased());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"        model.setCurrentWedding(weddingToOpen);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, weddingToOpen));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"Rae2480":41,"soonami69":1}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"    public static final Prefix PREFIX_ROLE \u003d new Prefix(\"role/\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"Rae2480":3,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.wedding.Date;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.wedding.Title;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Rae2480"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Rae2480"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Rae2480"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Rae2480"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Rae2480"},"content":"        requireNonNull(title);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Rae2480"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Rae2480"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Rae2480"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Rae2480"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Rae2480"},"content":"     * Parses a {@code String date} into a {@code Date}.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Rae2480"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Rae2480"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Rae2480"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Rae2480"},"content":"        requireNonNull(date);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Rae2480"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Rae2480"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Rae2480"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Rae2480"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"Rae2480":32,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/WeddingPlannerParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.commands.SortWeddingCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.commands.wedding.AddWeddingCommand;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"import seedu.address.logic.commands.wedding.AddWeddingPersonCommand;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.commands.wedding.CloseWeddingCommand;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.logic.commands.wedding.HelpCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.commands.wedding.FindMemberCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.commands.wedding.OpenWeddingCommand;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.wedding.AddWeddingCommandParser;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"import seedu.address.logic.parser.wedding.AddWeddingPersonCommandParser;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.wedding.CloseWeddingCommandParser;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.parser.wedding.FindMemberCommandParser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.wedding.OpenWeddingCommandParser;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"public class WeddingPlannerParser {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(WeddingPlannerParser.class);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"soonami69"},"content":"        //case AddCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"soonami69"},"content":"        //    return new AddCommandParser().parse(arguments);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Rae2480"},"content":"        case AddWeddingCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Rae2480"},"content":"            return new AddWeddingCommandParser().parse(arguments);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"soonami69"},"content":"        case AddWeddingPersonCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"soonami69"},"content":"            return new AddWeddingPersonCommandParser().parse(arguments);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Rae2480"},"content":"        case OpenWeddingCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Rae2480"},"content":"            return new OpenWeddingCommandParser().parse(arguments);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Rae2480"},"content":"        case CloseWeddingCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Rae2480"},"content":"            return new CloseWeddingCommandParser().parse(arguments);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Rae2480"},"content":"        case SortWeddingCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Rae2480"},"content":"            return new SortWeddingCommand();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xzh119"},"content":"        case FindMemberCommand.COMMAND_WORD:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xzh119"},"content":"            return new FindMemberCommandParser().parse(arguments);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":1,"Rae2480":19,"soonami69":9,"-":80,"Xzh119":5}},{"path":"src/main/java/seedu/address/logic/parser/wedding/AddWeddingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package seedu.address.logic.parser.wedding;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.commands.wedding.AddWeddingCommand;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.wedding.Date;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.wedding.Title;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":" * Parses input arguments and creates a new AddWeddingCommand object","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"public class AddWeddingCommandParser implements Parser\u003cAddWeddingCommand\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddWeddingCommandParser.class);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"    public AddWeddingCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"        logger.log(Level.INFO, \"Parsing AddWeddingCommand: {0}\", args);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATE);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DATE)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"                    || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"                    AddWeddingCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_DATE);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"            Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"            Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"            logger.log(Level.INFO, \"Successfully parsed wedding draft - Title: {0}, Date: {1}\",","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"                new Object[]{title, date});","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"            return new AddWeddingCommand(new Wedding(date, title));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"            logger.log(Level.WARNING, \"Invalid AddWeddingCommand format: \" + args, pe);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"                AddWeddingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"Rae2480":61}},{"path":"src/main/java/seedu/address/logic/parser/wedding/AddWeddingPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package seedu.address.logic.parser.wedding;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.commands.wedding.AddWeddingPersonCommand;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":" * Parses input arguments and creates a new AddWeddingPersonCommand","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"public class AddWeddingPersonCommandParser implements Parser\u003cAddWeddingPersonCommand\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"     * Parses the given {@code String} of arguments in the context of the AddWeddingPersonCommand","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"     * and returns an AddWeddingPersonCommand object for execution.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"    public AddWeddingPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"            PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"                AddWeddingPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"        Set\u003cTag\u003e tags \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"        // Validate role tags","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"        long roleTags \u003d tags.stream()","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"            .filter(t -\u003e t.tagName.equalsIgnoreCase(\"bride\") || t.tagName.equalsIgnoreCase(\"groom\"))","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"            .count();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"        if (roleTags \u003e 1) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"            throw new ParseException(AddWeddingPersonCommand.MESSAGE_INVALID_ROLE_TAG);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"        Person person \u003d new Person(name, phone, email, address, tags);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rae2480"},"content":"        return new AddWeddingPersonCommand(person);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rae2480"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rae2480"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"Rae2480":71}},{"path":"src/main/java/seedu/address/logic/parser/wedding/CloseWeddingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package seedu.address.logic.parser.wedding;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.commands.wedding.CloseWeddingCommand;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":" * Parses input arguments for the CloseWeddingCommand","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"public class CloseWeddingCommandParser implements Parser\u003cCloseWeddingCommand\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"     * CloseWeddingCommand and returns a CloseWeddingCommand object for execution.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"    public CloseWeddingCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"        if (!args.trim().isEmpty()) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"            throw new ParseException(","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CloseWeddingCommand.MESSAGE_SUCCESS));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"        return new CloseWeddingCommand();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"Rae2480":26}},{"path":"src/main/java/seedu/address/logic/parser/wedding/FindMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.logic.parser.wedding;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.commands.wedding.FindMemberCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.person.NameContainsSubstringPredicate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":" * Parses input arguments and creates a new FindMemberCommand object","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"public class FindMemberCommandParser implements Parser\u003cFindMemberCommand\u003e {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"     * Parses the given {@code String} of arguments in the context of the FindMemberCommand","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"     * and returns a FindMemberCommand object for execution.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"    public FindMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"        String trimArgs \u003d args.trim();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"        if (trimArgs.isEmpty()) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"            throw new ParseException(","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"        String[] nameKeywords \u003d trimArgs.split(\"\\\\s+\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"        return new FindMemberCommand(new NameContainsSubstringPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Xzh119":34}},{"path":"src/main/java/seedu/address/logic/parser/wedding/OpenWeddingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package seedu.address.logic.parser.wedding;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.commands.wedding.OpenWeddingCommand;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":" * Parses input arguments and creates a new OpenWeddingCommand","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"public class OpenWeddingCommandParser implements Parser\u003cOpenWeddingCommand\u003e {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"     * Parses the given {@code String} of arguments in the context of the OpenWeddingCommand","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"     * and returns an OpenWeddingCommand object for execution.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"    public OpenWeddingCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"            return new OpenWeddingCommand(index);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"            throw new ParseException(","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, OpenWeddingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"Rae2480":30}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zedonggg"},"content":"        return userPrefs.getWeddingPlannerFilePath();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zedonggg"},"content":"        userPrefs.setWeddingPlannerFilePath(addressBookFilePath);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"zedonggg":2,"-":141,"Xzh119":1}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zedonggg"},"content":"    Path getWeddingPlannerFilePath();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27","isFullCredit":false}],"authorContributionMap":{"zedonggg":1,"-":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyWeddingPlanner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package seedu.address.model;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":" * Unmodifiable view of a wedding planner","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"public interface ReadOnlyWeddingPlanner {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"     * Returns an unmodifiable view of the weddings list.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"     * This list will not contain any duplicate weddings.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"    ObservableList\u003cWedding\u003e getWeddingList();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-03-18","isFullCredit":false}],"authorContributionMap":{"Rae2480":17}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zedonggg"},"content":"    private Path weddingPlannerFilePath \u003d Paths.get(\"data\" , \"weddingplanner.json\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zedonggg"},"content":"        setWeddingPlannerFilePath(newUserPrefs.getWeddingPlannerFilePath());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zedonggg"},"content":"    public Path getWeddingPlannerFilePath() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zedonggg"},"content":"        return weddingPlannerFilePath;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zedonggg"},"content":"    public void setWeddingPlannerFilePath(Path weddingPlannerFilePath) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zedonggg"},"content":"        requireNonNull(weddingPlannerFilePath);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zedonggg"},"content":"        this.weddingPlannerFilePath \u003d weddingPlannerFilePath;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zedonggg"},"content":"                \u0026\u0026 weddingPlannerFilePath.equals(otherUserPrefs.weddingPlannerFilePath);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zedonggg"},"content":"        return Objects.hash(guiSettings, weddingPlannerFilePath);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zedonggg"},"content":"        sb.append(\"\\nLocal data file location : \" + weddingPlannerFilePath);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"zedonggg":10,"-":78}},{"path":"src/main/java/seedu/address/model/WeddingModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hrishikeshsathyian"},"content":"package seedu.address.model;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hrishikeshsathyian"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":" * The API of the Wedding Model component which extends the base Model.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hrishikeshsathyian"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"public interface WeddingModel {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"    Predicate\u003cWedding\u003e PREDICATE_SHOW_ALL_WEDDINGS \u003d unused -\u003e true;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"     * Returns the wedding planner file path.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"    Path getWeddingPlannerFilePath();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"     * Sets the wedding planner file path.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"    void setWeddingPlannerFilePath(Path weddingPlannerFilePath);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"     * Replaces wedding planner data with the data in {@code weddingPlanner}.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"    void setWeddingPlanner(ReadOnlyWeddingPlanner weddingPlanner);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"     * Returns the wedding planner.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xzh119"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xzh119"},"content":"    ReadOnlyWeddingPlanner getWeddingPlanner();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Permanent Storage Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"     * Commits the draft wedding to permanent storage.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"hrishikeshsathyian"},"content":"     * {@code Wedding} must not already exist in the Wedding Planner.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hrishikeshsathyian"},"content":"    void addWedding(Wedding wedding);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"     * Returns true if a wedding with the same identity exists in permanent storage.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hrishikeshsathyian"},"content":"    boolean hasWedding(Wedding wedding);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"soonami69"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"soonami69"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"soonami69"},"content":"     * Returns the user prefs.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"soonami69"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"soonami69"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"soonami69"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"soonami69"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"soonami69"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rae2480"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Draft Management \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Rae2480"},"content":"     * Stores a wedding draft temporarily before commitment","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Rae2480"},"content":"    void setDraftWedding(Wedding wedding);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Rae2480"},"content":"     * Returns true if there\u0027s an existing draft wedding","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Rae2480"},"content":"    boolean hasDraftWedding();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Rae2480"},"content":"     * Gets the current draft wedding","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Rae2480"},"content":"    Wedding getDraftWedding();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Rae2480"},"content":"     * Moves draft wedding to permanent storage","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Rae2480"},"content":"    void commitDraftWedding();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Rae2480"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Wedding Context Management \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Rae2480"},"content":"     * Enters a wedding context for editing","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Rae2480"},"content":"    void setCurrentWedding(Wedding wedding);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Rae2480"},"content":"     * Exits the current wedding context","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Rae2480"},"content":"    void clearCurrentWedding();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Rae2480"},"content":"     * Returns true if a wedding context is active","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Rae2480"},"content":"    boolean hasCurrentWedding();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Rae2480"},"content":"     * Gets the currently open wedding","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Rae2480"},"content":"    Wedding getCurrentWedding();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Rae2480"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person Management \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Rae2480"},"content":"     * Checks for duplicate Person in a wedding","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"hrishikeshsathyian"},"content":"    boolean weddingHasPerson(Wedding wedding, Person toAdd);","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Rae2480"},"content":"     * Adds a Person to the specified wedding","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"soonami69"},"content":"    void addWeddingPerson(Wedding wedding, Person person);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Rae2480"},"content":"     * Returns an unmodifiable view of the filtered wedding list","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Rae2480"},"content":"    ObservableList\u003cWedding\u003e getFilteredWeddingList();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"soonami69"},"content":"     * Returns an unmodifiable view of the filtered member list","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"soonami69"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Rae2480"},"content":"     * Updates the filter of the filtered wedding list to filter by the given {@code predicate}.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Rae2480"},"content":"     * @throws NullPointerException if the predicate is null.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Rae2480"},"content":"    void updateFilteredWeddingList(Predicate\u003cWedding\u003e predicate);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"soonami69"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"soonami69"},"content":"     * @throws NullPointerException if the predicate is null.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"soonami69"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Rae2480"},"content":"     * Sorts all weddings by date.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Rae2480"},"content":"    void sortWeddingList();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"hrishikeshsathyian"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":23,"Rae2480":69,"soonami69":34,"Xzh119":25}},{"path":"src/main/java/seedu/address/model/WeddingModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hrishikeshsathyian"},"content":"package seedu.address.model;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hrishikeshsathyian"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hrishikeshsathyian"},"content":" * Represents the in-memory model of the Wedding Planner data.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":" * Extends a base ModelManager to inherit standard address book functionality.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hrishikeshsathyian"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"public class WeddingModelManager implements WeddingModel {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(WeddingModelManager.class);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hrishikeshsathyian"},"content":"    private final WeddingPlanner weddingPlanner;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"    private final FilteredList\u003cWedding\u003e filteredWeddings;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"    private final ObservableList\u003cPerson\u003e allPersons; // to load wedding members","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons; // for each wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"    private Wedding currentWedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"    private Wedding draftWedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"     * Initializes a WeddingModelManager with the given parameters.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"    public WeddingModelManager(ReadOnlyWeddingPlanner weddingPlanner,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"                               ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xzh119"},"content":"        requireNonNull(weddingPlanner);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"        logger.fine(\"Initializing with wedding planner: \" + weddingPlanner);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xzh119"},"content":"        this.weddingPlanner \u003d new WeddingPlanner(weddingPlanner);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xzh119"},"content":"        this.filteredWeddings \u003d new FilteredList\u003c\u003e(this.weddingPlanner.getWeddingList());","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"        this.currentWedding \u003d null;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"        this.draftWedding \u003d null;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"        // initialized as an empty list","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"soonami69"},"content":"        this.allPersons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"soonami69"},"content":"        this.filteredPersons \u003d new FilteredList\u003c\u003e(allPersons);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xzh119"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xzh119"},"content":"     * Creates an empty WeddingModelManager.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xzh119"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xzh119"},"content":"    public WeddingModelManager() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"soonami69"},"content":"        this(new WeddingPlanner(), new UserPrefs());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"soonami69"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"soonami69"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"soonami69"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"soonami69"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"soonami69"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"soonami69"},"content":"        return userPrefs;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"soonami69"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"soonami69"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"soonami69"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"soonami69"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"soonami69"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hrishikeshsathyian"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xzh119"},"content":"    public Path getWeddingPlannerFilePath() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xzh119"},"content":"        return getUserPrefs().getWeddingPlannerFilePath();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hrishikeshsathyian"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xzh119"},"content":"    public void setWeddingPlannerFilePath(Path weddingPlannerFilePath) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xzh119"},"content":"        requireNonNull(weddingPlannerFilePath);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xzh119"},"content":"        UserPrefs userPrefs \u003d (UserPrefs) getUserPrefs();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xzh119"},"content":"        userPrefs.setWeddingPlannerFilePath(weddingPlannerFilePath);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xzh119"},"content":"        //getUserPrefs().setWeddingPlannerFilePath(weddingPlannerFilePath);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xzh119"},"content":"    public void setWeddingPlanner(ReadOnlyWeddingPlanner weddingPlanner) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xzh119"},"content":"        this.weddingPlanner.resetData(weddingPlanner);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xzh119"},"content":"    public ReadOnlyWeddingPlanner getWeddingPlanner() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xzh119"},"content":"        return weddingPlanner;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Xzh119"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Permanent Storage Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Xzh119"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xzh119"},"content":"    public void addWedding(Wedding wedding) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Xzh119"},"content":"        weddingPlanner.addWedding(wedding);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xzh119"},"content":"        updateFilteredWeddingList(PREDICATE_SHOW_ALL_WEDDINGS);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Xzh119"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Xzh119"},"content":"    public boolean hasWedding(Wedding wedding) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Xzh119"},"content":"        requireNonNull(wedding);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Xzh119"},"content":"        return weddingPlanner.hasWedding(wedding);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Rae2480"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Draft Management \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"hrishikeshsathyian"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Rae2480"},"content":"    public void setDraftWedding(Wedding wedding) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Xzh119"},"content":"        requireNonNull(wedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Rae2480"},"content":"        draftWedding \u003d wedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Xzh119"},"content":"        logger.info(\"New draft set: \" + wedding);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"hrishikeshsathyian"},"content":"    @Override","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Rae2480"},"content":"    public boolean hasDraftWedding() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Rae2480"},"content":"        return draftWedding !\u003d null;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Rae2480"},"content":"    public Wedding getDraftWedding() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Rae2480"},"content":"        return draftWedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Rae2480"},"content":"    public void commitDraftWedding() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Rae2480"},"content":"        if (draftWedding \u003d\u003d null) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Xzh119"},"content":"            throw new IllegalStateException(\"No draft to commit\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Xzh119"},"content":"        if (hasWedding(draftWedding)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Xzh119"},"content":"            throw new IllegalStateException(\"Duplicate wedding in permanent storage\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"hrishikeshsathyian"},"content":"        }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Rae2480"},"content":"        addWedding(draftWedding);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Rae2480"},"content":"        draftWedding \u003d null;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Xzh119"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Wedding Context Management \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Rae2480"},"content":"    public void setCurrentWedding(Wedding wedding) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Xzh119"},"content":"        requireNonNull(wedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Rae2480"},"content":"        currentWedding \u003d wedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Xzh119"},"content":"        logger.info(\"Entered context for: \" + wedding);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"soonami69"},"content":"        updateFilteredPersonList();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Rae2480"},"content":"    public void clearCurrentWedding() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Rae2480"},"content":"        currentWedding \u003d null;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Xzh119"},"content":"        logger.info(\"Cleared wedding context\");","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Rae2480"},"content":"    public boolean hasCurrentWedding() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Rae2480"},"content":"        return currentWedding !\u003d null;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Rae2480"},"content":"    public Wedding getCurrentWedding() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Rae2480"},"content":"        return currentWedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Rae2480"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person Management \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Xzh119"},"content":"    public boolean weddingHasPerson(Wedding wedding, Person person) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Xzh119"},"content":"        requireAllNonNull(wedding, person);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Rae2480"},"content":"        // Check bride","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Xzh119"},"content":"        if (wedding.getBride() !\u003d null \u0026\u0026 wedding.getBride().isSamePerson(person)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Rae2480"},"content":"            return true;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Rae2480"},"content":"        // Check groom","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Xzh119"},"content":"        if (wedding.getGroom() !\u003d null \u0026\u0026 wedding.getGroom().isSamePerson(person)) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Rae2480"},"content":"            return true;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Rae2480"},"content":"        // Check members","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Rae2480"},"content":"        if (wedding.getMembers() !\u003d null) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Xzh119"},"content":"            return wedding.getMembers().contains(person);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Rae2480"},"content":"        return false;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Xzh119"},"content":"    public void addWeddingPerson(Wedding wedding, Person person) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Xzh119"},"content":"        requireAllNonNull(wedding, person);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Rae2480"},"content":"        // Initialize members list if null","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Rae2480"},"content":"        if (wedding.getMembers() \u003d\u003d null) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Rae2480"},"content":"            wedding.setMembers(new UniquePersonList());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Xzh119"},"content":"        wedding.getMembers().add(person);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Xzh119"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Wedding List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Xzh119"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Xzh119"},"content":"    public ObservableList\u003cWedding\u003e getFilteredWeddingList() {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Xzh119"},"content":"        return filteredWeddings;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"soonami69"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"soonami69"},"content":"        return filteredPersons;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Xzh119"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Xzh119"},"content":"    public void updateFilteredWeddingList(Predicate\u003cWedding\u003e predicate) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Xzh119"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Xzh119"},"content":"        filteredWeddings.setPredicate(predicate);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"soonami69"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"soonami69"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"soonami69"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"soonami69"},"content":"     * Updates the internal list with the bride, groom, and other persons associated with the weddings","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"soonami69"},"content":"     * so that it can be displayed.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"soonami69"},"content":"    public void updateFilteredPersonList() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"soonami69"},"content":"        if (currentWedding !\u003d null) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"soonami69"},"content":"            ObservableList\u003cPerson\u003e fullList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"soonami69"},"content":"            fullList.add(currentWedding.getBride());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"soonami69"},"content":"            fullList.add(currentWedding.getGroom());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"soonami69"},"content":"            fullList.addAll(currentWedding.getMembers().asUnmodifiableObservableList());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"soonami69"},"content":"            allPersons.setAll(fullList);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"soonami69"},"content":"            this.filteredPersons.setPredicate(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"soonami69"},"content":"        } else if (draftWedding !\u003d null) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"soonami69"},"content":"            allPersons.setAll(draftWedding.getMembers().asUnmodifiableObservableList());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"soonami69"},"content":"            this.filteredPersons.setPredicate(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"soonami69"},"content":"        } else {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"soonami69"},"content":"            // show an empty list","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"soonami69"},"content":"            allPersons.clear();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"soonami69"},"content":"            this.filteredPersons.setPredicate(person -\u003e false);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Rae2480"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Xzh119"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Rae2480"},"content":"            return true;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Rae2480"},"content":"        if (!(obj instanceof WeddingModelManager)) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Rae2480"},"content":"            return false;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Rae2480"},"content":"        WeddingModelManager other \u003d (WeddingModelManager) obj;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Rae2480"},"content":"        return weddingPlanner.equals(other.weddingPlanner)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Xzh119"},"content":"                \u0026\u0026 filteredWeddings.equals(other.filteredWeddings)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Xzh119"},"content":"                \u0026\u0026 java.util.Objects.equals(currentWedding, other.currentWedding)","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Xzh119"},"content":"                \u0026\u0026 java.util.Objects.equals(draftWedding, other.draftWedding);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Rae2480"},"content":"    public void sortWeddingList() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Rae2480"},"content":"        weddingPlanner.sortWeddings();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"hrishikeshsathyian"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":28,"Rae2480":106,"soonami69":73,"Xzh119":76}},{"path":"src/main/java/seedu/address/model/WeddingPlanner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hrishikeshsathyian"},"content":"package seedu.address.model;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zedonggg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zedonggg"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.wedding.UniqueWeddingList;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import seedu.address.model.wedding.exceptions.DuplicateWeddingException;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hrishikeshsathyian"},"content":"/**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hrishikeshsathyian"},"content":" * Represents a Wedding Planner that manages a collection of weddings.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hrishikeshsathyian"},"content":" * Acts as a central storage for wedding-related data.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hrishikeshsathyian"},"content":" */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zedonggg"},"content":"public class WeddingPlanner implements ReadOnlyWeddingPlanner {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zedonggg"},"content":"    private final UniqueWeddingList weddings;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hrishikeshsathyian"},"content":"     * Constructs an empty {@code WeddingPlanner}.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hrishikeshsathyian"},"content":"    public WeddingPlanner() {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zedonggg"},"content":"        this.weddings \u003d new UniqueWeddingList();","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"     * Creates a WeddingPlanner using weddings from the {@code toBeCopied}","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"    public WeddingPlanner(ReadOnlyWeddingPlanner toBeCopied) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"        this();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"     * Resets the existing data with {@code newData}","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"    public void resetData(ReadOnlyWeddingPlanner newData) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"        setWeddings(newData.getWeddingList());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Wedding Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"     * Adds a wedding to the planner.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"     * @throws DuplicateWeddingException if duplicate wedding exists","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hrishikeshsathyian"},"content":"    public void addWedding(Wedding toAdd) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"        weddings.add(toAdd);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"     * Replaces current weddings with {@code weddings}","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"    public void setWeddings(ObservableList\u003cWedding\u003e weddings) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"        this.weddings.setWeddings(weddings);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ReadOnly Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zedonggg"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zedonggg"},"content":"    public ObservableList\u003cWedding\u003e getWeddingList() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zedonggg"},"content":"        return weddings.asUnmodifiableObservableList();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"    public boolean hasWedding(Wedding wedding) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"        return weddings.contains(wedding);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rae2480"},"content":"    public void sortWeddings() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rae2480"},"content":"        this.weddings.sort();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Rae2480"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Rae2480"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Rae2480"},"content":"                || (other instanceof WeddingPlanner","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Rae2480"},"content":"                \u0026\u0026 weddings.equals(((WeddingPlanner) other).weddings));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zedonggg"},"content":"    @Override","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zedonggg"},"content":"    public String toString() {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zedonggg"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zedonggg"},"content":"                .add(\"weddings\", weddings)","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zedonggg"},"content":"                .toString();","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hrishikeshsathyian"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":26,"Rae2480":40,"zedonggg":19}},{"path":"src/main/java/seedu/address/model/person/NameContainsSubstringPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import java.util.List;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":" * Tests that a {@code Person}\u0027s {@code Name} contains any of the substrings given.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":" * It matches parts of words, not just whole words.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"public class NameContainsSubstringPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"    private final List\u003cString\u003e substring;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"    public NameContainsSubstringPredicate(List\u003cString\u003e substring) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"        this.substring \u003d substring;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"        String personName \u003d person.getName().fullName.toLowerCase();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"        return substring.stream()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"                .anyMatch(keyword -\u003e personName.contains(keyword.toLowerCase()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"            return true;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"        if (!(other instanceof NameContainsSubstringPredicate)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"            return false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"        NameContainsSubstringPredicate otherPredicate \u003d (NameContainsSubstringPredicate) other;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xzh119"},"content":"        return substring.equals(otherPredicate.substring);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xzh119"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xzh119"},"content":"    public String toString() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xzh119"},"content":"        return new ToStringBuilder(this).add(\"substring\", substring).toString();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"Xzh119":46}},{"path":"src/main/java/seedu/address/model/person/guest/Availability.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package seedu.address.model.person.guest;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"/**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":" * An enum that represents the availability of a guest. Has three values; ATTENING, NOT_ATTENDING, and PENDING","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":" */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"public enum Availability {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"    ATTENDING,","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"    NOT_ATTENDING,","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"    PENDING","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-03-25","isFullCredit":false}],"authorContributionMap":{"soonami69":10}},{"path":"src/main/java/seedu/address/model/person/guest/Guest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package seedu.address.model.person.guest;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"/**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":" * Represents a guest of a wedding","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":" */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"public class Guest extends Person {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"    private final Availability availability;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"     * Every field must be present and not null. More fields may be added later.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"    public Guest(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Availability availability) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"        requireAllNonNull(availability);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"    public Availability getAvailability() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"        return this.availability;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"soonami69"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"            return true;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"soonami69"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"soonami69"},"content":"            return false;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"        Guest otherPerson \u003d (Guest) other;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"soonami69"},"content":"        return super.equals(other) \u0026\u0026 availability.equals(otherPerson.availability);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"soonami69"},"content":"    public String toString() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"soonami69"},"content":"        return new ToStringBuilder(super.toString()).add(\"availability\", availability).toString();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-03-25","isFullCredit":false}],"authorContributionMap":{"soonami69":55}},{"path":"src/main/java/seedu/address/model/person/staff/PaymentDetail.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package seedu.address.model.person.staff;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"/**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":" * Represents a staff\u0027s payment status in the wedding planner.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":" * This is up to the user to define: It can be free, paid, pending, etc","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":" * Guarantees: Immutable; is valid as declared in {@link #isValidPaymentDetail(String)}","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":" */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"public class PaymentDetail {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Payment Details can take any values, and \"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"        + \"it should not be blank.\";","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"    /*","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"    public final String value;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"     * Constructs an {@code PaymentDetail}.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"     *","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"     * @param detail A valid payment detail.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"    public PaymentDetail(String detail) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"        requireNonNull(detail);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"        checkArgument(isValidPaymentDetail(detail), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"        value \u003d detail;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"    public static boolean isValidPaymentDetail(String test) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"soonami69"},"content":"    public String toString() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"soonami69"},"content":"        return value;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"soonami69"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"soonami69"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":"            return true;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"soonami69"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"soonami69"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"soonami69"},"content":"            return false;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"soonami69"},"content":"        PaymentDetail otherPaymentDetail \u003d (PaymentDetail) other;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"soonami69"},"content":"        return value.equals(otherPaymentDetail.value);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"soonami69"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"soonami69"},"content":"        return value.hashCode();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-03-25","isFullCredit":false}],"authorContributionMap":{"soonami69":67}},{"path":"src/main/java/seedu/address/model/person/staff/Staff.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package seedu.address.model.person.staff;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"/**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":" * Represents a staff member in the wedding planner","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":" */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"public class Staff extends Person {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"    private final PaymentDetail paymentDetail;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"    public Staff(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"                  PaymentDetail paymentDetail) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"        requireAllNonNull(paymentDetail);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"        this.paymentDetail \u003d paymentDetail;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"    public PaymentDetail getPaymentDetail() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"        return this.paymentDetail;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"soonami69"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"soonami69"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"soonami69"},"content":"            return true;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"soonami69"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"soonami69"},"content":"            return false;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"soonami69"},"content":"        Staff otherStaff \u003d (Staff) other;","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"soonami69"},"content":"        return super.equals(otherStaff) \u0026\u0026 paymentDetail.equals(otherStaff.paymentDetail);","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"soonami69"},"content":"    @Override","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"soonami69"},"content":"    public String toString() {","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"soonami69"},"content":"        return new ToStringBuilder(super.toString()).add(\"PaymentDetail\", paymentDetail)","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"soonami69"},"content":"                .toString();","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-03-25","isFullCredit":false}],"authorContributionMap":{"soonami69":61}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.ReadOnlyWeddingPlanner;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.WeddingPlanner;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.wedding.Date;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.wedding.Title;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zedonggg"},"content":"    public static Wedding[] getSampleWeddings() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"soonami69"},"content":"        return new Wedding[] {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"soonami69"},"content":"            new Wedding(new Date(\"11072025\"), new Title(\"TimChaewon\")),","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zedonggg"},"content":"            new Wedding(new Date(\"13052025\"), new Title(\"JayVik\"))","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"soonami69"},"content":"        };","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zedonggg"},"content":"    public static ReadOnlyWeddingPlanner getSampleWeddingPlanner() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zedonggg"},"content":"        WeddingPlanner sampleWp \u003d new WeddingPlanner();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zedonggg"},"content":"        for (Wedding sampleWedding : getSampleWeddings()) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zedonggg"},"content":"            sampleWp.addWedding(sampleWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zedonggg"},"content":"        return sampleWp;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20","isFullCredit":false}],"authorContributionMap":{"zedonggg":12,"soonami69":8,"-":60}},{"path":"src/main/java/seedu/address/model/wedding/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hrishikeshsathyian"},"content":"package seedu.address.model.wedding;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hrishikeshsathyian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hrishikeshsathyian"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hrishikeshsathyian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hrishikeshsathyian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zedonggg"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hrishikeshsathyian"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hrishikeshsathyian"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hrishikeshsathyian"},"content":" * Represents a Wedding\u0027s date in the planner.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hrishikeshsathyian"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hrishikeshsathyian"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"public class Date implements Comparable\u003cDate\u003e {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hrishikeshsathyian"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Dates should be in the format DDMMYYYY (e.g., 30092025 for \"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hrishikeshsathyian"},"content":"            + \"30 September 2025) and must be in the future.\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hrishikeshsathyian"},"content":"    // Formatter for parsing the input string in DDMMYYYY format.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hrishikeshsathyian"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"ddMMyyyy\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hrishikeshsathyian"},"content":"    // Formatter for outputting the date in a friendly format.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hrishikeshsathyian"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zedonggg"},"content":"    private static final DateTimeFormatter formatters \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zedonggg"},"content":"            .appendOptional(INPUT_FORMATTER)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zedonggg"},"content":"            .appendOptional(OUTPUT_FORMATTER)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zedonggg"},"content":"            .toFormatter();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hrishikeshsathyian"},"content":"    public final LocalDate date;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hrishikeshsathyian"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hrishikeshsathyian"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hrishikeshsathyian"},"content":"     * @param dateStr A valid date string in DDMMYYYY format.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hrishikeshsathyian"},"content":"     * @throws IllegalArgumentException if {@code dateStr} is not in the correct format or is not a future date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hrishikeshsathyian"},"content":"     * @throws NullPointerException if {@code dateStr} is null.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hrishikeshsathyian"},"content":"    public Date(String dateStr) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hrishikeshsathyian"},"content":"        requireNonNull(dateStr);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"hrishikeshsathyian"},"content":"        checkArgument(isValidDate(dateStr), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zedonggg"},"content":"        this.date \u003d LocalDate.parse(dateStr, formatters);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"hrishikeshsathyian"},"content":"     * Returns true if a given string is a valid date in DDMMYYYY format and is in the future.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"hrishikeshsathyian"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"hrishikeshsathyian"},"content":"     * @param testDate the date string to validate.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"hrishikeshsathyian"},"content":"     * @return true if the date is in the correct format and is a future date, false otherwise.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"hrishikeshsathyian"},"content":"    public static boolean isValidDate(String testDate) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"hrishikeshsathyian"},"content":"        try {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zedonggg"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(testDate, formatters);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"hrishikeshsathyian"},"content":"            return parsedDate.isAfter(LocalDate.now());","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hrishikeshsathyian"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hrishikeshsathyian"},"content":"            return false;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hrishikeshsathyian"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"    public int compareTo(Date other) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"        return this.date.compareTo(other.date);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hrishikeshsathyian"},"content":"     * Returns this date in a user-friendly format (e.g., \"30 September 2025\").","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hrishikeshsathyian"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hrishikeshsathyian"},"content":"     * @return a formatted date string.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hrishikeshsathyian"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hrishikeshsathyian"},"content":"    public String toString() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hrishikeshsathyian"},"content":"        return date.format(OUTPUT_FORMATTER);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hrishikeshsathyian"},"content":"     * Indicates whether two Date objects are equal.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hrishikeshsathyian"},"content":"     * Two {@code Date} objects are considered equal if they represent the same date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hrishikeshsathyian"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hrishikeshsathyian"},"content":"     * @param other the reference object with which to compare.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"hrishikeshsathyian"},"content":"     * @return true if this object is the same as the other object.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"hrishikeshsathyian"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"hrishikeshsathyian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"hrishikeshsathyian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"hrishikeshsathyian"},"content":"            return true;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"hrishikeshsathyian"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"hrishikeshsathyian"},"content":"        if (!(other instanceof Date)) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"hrishikeshsathyian"},"content":"            return false;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"hrishikeshsathyian"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"hrishikeshsathyian"},"content":"        Date otherDate \u003d (Date) other;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"hrishikeshsathyian"},"content":"        return date.equals(otherDate.date);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"hrishikeshsathyian"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"hrishikeshsathyian"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"hrishikeshsathyian"},"content":"        return date.hashCode();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"hrishikeshsathyian"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":85,"Rae2480":6,"zedonggg":8}},{"path":"src/main/java/seedu/address/model/wedding/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hrishikeshsathyian"},"content":"package seedu.address.model.wedding;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"hrishikeshsathyian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"hrishikeshsathyian"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"hrishikeshsathyian"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hrishikeshsathyian"},"content":" * Represents a Wedding\u0027s name in the address book.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zedonggg"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"hrishikeshsathyian"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hrishikeshsathyian"},"content":"public class Title {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hrishikeshsathyian"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hrishikeshsathyian"},"content":"            \"Wedding Names should only be maximum 100 characters and should not be blank.\";","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hrishikeshsathyian"},"content":"    public static final int WEDDING_NAME_MAX_LENGTH \u003d 100;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hrishikeshsathyian"},"content":"    public final String weddingTitle;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hrishikeshsathyian"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hrishikeshsathyian"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hrishikeshsathyian"},"content":"     * @param weddingTitle A valid wedding name.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hrishikeshsathyian"},"content":"     * @throws NullPointerException if {@code weddingName} is null.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hrishikeshsathyian"},"content":"     * @throws IllegalArgumentException if {@code weddingName} is blank or exceeds 100 characters.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hrishikeshsathyian"},"content":"    public Title(String weddingTitle) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hrishikeshsathyian"},"content":"        requireNonNull(weddingTitle);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zedonggg"},"content":"        checkArgument(isValidTitle(weddingTitle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hrishikeshsathyian"},"content":"        this.weddingTitle \u003d weddingTitle;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hrishikeshsathyian"},"content":"     * Returns the wedding name in string format.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"hrishikeshsathyian"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"hrishikeshsathyian"},"content":"     * @return the wedding name.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hrishikeshsathyian"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"hrishikeshsathyian"},"content":"    public String toString() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"hrishikeshsathyian"},"content":"        return weddingTitle;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xzh119"},"content":"     * Checks if the given title is valid.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xzh119"},"content":"     * A valid title must not be empty and must not exceed {@code WEDDING_NAME_MAX_LENGTH} characters.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xzh119"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xzh119"},"content":"     * @param test The title string to check.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xzh119"},"content":"     * @return {@code true} if the title is valid, {@code false} otherwise.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xzh119"},"content":"     * @throws NullPointerException if {@code test} is null.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xzh119"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xzh119"},"content":"        requireNonNull(test);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xzh119"},"content":"        boolean isValid \u003d !test.trim().isEmpty() \u0026\u0026 test.length() \u003c\u003d WEDDING_NAME_MAX_LENGTH;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xzh119"},"content":"        return isValid;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"hrishikeshsathyian"},"content":"     * Checks if this {@code Name} is equal to another object.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hrishikeshsathyian"},"content":"     * Two {@code Name} objects are considered equal if they have the same wedding name.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hrishikeshsathyian"},"content":"     *","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"hrishikeshsathyian"},"content":"     * @param other the object to compare with.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"hrishikeshsathyian"},"content":"     * @return true if the other object is a {@code Name} with the same wedding name, false otherwise.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hrishikeshsathyian"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"hrishikeshsathyian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"hrishikeshsathyian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"hrishikeshsathyian"},"content":"            return true;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"hrishikeshsathyian"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"hrishikeshsathyian"},"content":"        if (!(other instanceof Title)) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"hrishikeshsathyian"},"content":"            return false;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"hrishikeshsathyian"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"hrishikeshsathyian"},"content":"        Title otherName \u003d (Title) other;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"hrishikeshsathyian"},"content":"        return weddingTitle.equals(otherName.weddingTitle);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"hrishikeshsathyian"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"hrishikeshsathyian"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"hrishikeshsathyian"},"content":"        return weddingTitle.hashCode();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"hrishikeshsathyian"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":63,"Rae2480":3,"zedonggg":2,"Xzh119":11}},{"path":"src/main/java/seedu/address/model/wedding/UniqueWeddingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zedonggg"},"content":"package seedu.address.model.wedding;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zedonggg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zedonggg"},"content":"import java.util.Iterator;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"import java.util.List;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zedonggg"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zedonggg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.wedding.exceptions.DuplicateWeddingException;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.wedding.exceptions.WeddingNotFoundException;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zedonggg"},"content":"/**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":" * A list of weddings that enforces uniqueness between its elements.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zedonggg"},"content":" */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zedonggg"},"content":"public class UniqueWeddingList implements Iterable\u003cWedding\u003e {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"    private final ObservableList\u003cWedding\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"    private final ObservableList\u003cWedding\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"     * Returns true if the list contains an equivalent wedding.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zedonggg"},"content":"    public boolean contains(Wedding toCheck) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zedonggg"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"        return internalList.stream().anyMatch(toCheck::isSameWedding);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zedonggg"},"content":"     * Adds a wedding to the list.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"     * @throws DuplicateWeddingException if duplicate exists","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"    public void add(Wedding toAdd) throws DuplicateWeddingException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zedonggg"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zedonggg"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zedonggg"},"content":"            throw new DuplicateWeddingException();","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zedonggg"},"content":"     * Removes the equivalent wedding from the list.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"     * @throws WeddingNotFoundException if not found","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"    public void remove(Wedding toRemove) throws WeddingNotFoundException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zedonggg"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zedonggg"},"content":"            throw new WeddingNotFoundException();","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"     * Replaces the contents with {@code weddings}","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"    public void setWeddings(List\u003cWedding\u003e weddings) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"        requireAllNonNull(weddings);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"        if (!weddingsAreUnique(weddings)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"            throw new DuplicateWeddingException();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"        internalList.setAll(weddings);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rae2480"},"content":"    public void sort() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rae2480"},"content":"        internalList.sort(Comparator.comparing(wedding -\u003e ((Wedding) wedding).getDate()));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Rae2480"},"content":"     * Returns unmodifiable view of the list","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Rae2480"},"content":"    public ObservableList\u003cWedding\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Rae2480"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zedonggg"},"content":"    @Override","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zedonggg"},"content":"    public Iterator\u003cWedding\u003e iterator() {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Rae2480"},"content":"        return internalList.iterator();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zedonggg"},"content":"    @Override","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zedonggg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Rae2480"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Rae2480"},"content":"                || (other instanceof UniqueWeddingList","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Rae2480"},"content":"                \u0026\u0026 internalList.equals(((UniqueWeddingList) other).internalList));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zedonggg"},"content":"    @Override","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zedonggg"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Rae2480"},"content":"        return internalList.hashCode();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zedonggg"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zedonggg"},"content":"    public String toString() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zedonggg"},"content":"        return internalList.toString();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Rae2480"},"content":"     * Returns true if all weddings are unique","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Rae2480"},"content":"    private boolean weddingsAreUnique(List\u003cWedding\u003e weddings) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Rae2480"},"content":"        for (int i \u003d 0; i \u003c weddings.size() - 1; i++) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Rae2480"},"content":"            for (int j \u003d i + 1; j \u003c weddings.size(); j++) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Rae2480"},"content":"                if (weddings.get(i).isSameWedding(weddings.get(j))) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Rae2480"},"content":"                    return false;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Rae2480"},"content":"                }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Rae2480"},"content":"            }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Rae2480"},"content":"        return true;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"hrishikeshsathyian"},"content":"    //@Override","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"hrishikeshsathyian"},"content":"    //public String toString() {","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"hrishikeshsathyian"},"content":"    //return asUnmodifiableObservableList().toString();","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"hrishikeshsathyian"},"content":"    //}","lastModifiedDate":"2025-03-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zedonggg"},"content":"}","lastModifiedDate":"2025-03-15","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":4,"Rae2480":51,"zedonggg":60,"Xzh119":1}},{"path":"src/main/java/seedu/address/model/wedding/Wedding.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hrishikeshsathyian"},"content":"package seedu.address.model.wedding;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zedonggg"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zedonggg"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"hrishikeshsathyian"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"hrishikeshsathyian"},"content":"/**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":" * Represents a Wedding in the wedding planner.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"hrishikeshsathyian"},"content":" * Guarantees: details are present, validated and not null.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"hrishikeshsathyian"},"content":" */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"hrishikeshsathyian"},"content":"public class Wedding {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"hrishikeshsathyian"},"content":"    private final Date date;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hrishikeshsathyian"},"content":"    private final Title title;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"hrishikeshsathyian"},"content":"    private Person bride;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"hrishikeshsathyian"},"content":"    private Person groom;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zedonggg"},"content":"    private UniquePersonList members;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"hrishikeshsathyian"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"    public Wedding(Date date, Title title) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"        requireAllNonNull(date, title);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"hrishikeshsathyian"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"        this.members \u003d new UniquePersonList(); // Initialize empty list","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zedonggg"},"content":"     * Overloaded Wedding constructor to be used for file storage loading","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zedonggg"},"content":"     * @param date","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zedonggg"},"content":"     * @param title","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zedonggg"},"content":"     * @param bride","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zedonggg"},"content":"     * @param groom","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zedonggg"},"content":"     * @param members","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zedonggg"},"content":"    public Wedding(Date date, Title title, Person bride, Person groom, UniquePersonList members) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zedonggg"},"content":"        requireAllNonNull(date, title, bride, groom, members);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zedonggg"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zedonggg"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zedonggg"},"content":"        this.bride \u003d bride;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zedonggg"},"content":"        this.groom \u003d groom;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zedonggg"},"content":"        this.members \u003d members;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Getters \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"    public Person getBride() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"        return bride;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"    public Person getGroom() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"        return groom;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"    public UniquePersonList getMembers() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"        return members;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rae2480"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Setters \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rae2480"},"content":"    public void setBride(Person bride) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rae2480"},"content":"        requireNonNull(bride);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rae2480"},"content":"        this.bride \u003d bride;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Rae2480"},"content":"    public void setGroom(Person groom) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Rae2480"},"content":"        requireNonNull(groom);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Rae2480"},"content":"        this.groom \u003d groom;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Rae2480"},"content":"     * Adds a person to the list of members in this wedding.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Rae2480"},"content":"    public void addMember(Person member) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Rae2480"},"content":"        requireNonNull(member);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Rae2480"},"content":"        members.add(member);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Rae2480"},"content":"    public void setMembers(UniquePersonList members) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Rae2480"},"content":"        requireNonNull(members);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Rae2480"},"content":"        this.members \u003d members;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Rae2480"},"content":"     * Checks if the wedding contains the specified person.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Rae2480"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Rae2480"},"content":"        requireNonNull(person);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Rae2480"},"content":"        // Check if person is the bride or groom","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Rae2480"},"content":"        boolean isBride \u003d bride !\u003d null \u0026\u0026 bride.isSamePerson(person);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Rae2480"},"content":"        boolean isGroom \u003d groom !\u003d null \u0026\u0026 groom.isSamePerson(person);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Rae2480"},"content":"        // Check if person is in members list","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Rae2480"},"content":"        boolean isMember \u003d members !\u003d null \u0026\u0026 members.contains(person);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Rae2480"},"content":"        return isBride || isGroom || isMember;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"soonami69"},"content":"     * To see if a wedding contains a bride and a groom, or if it should remain as a draft.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"soonami69"},"content":"     * @return","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"soonami69"},"content":"    public boolean isValid() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"soonami69"},"content":"        return this.getGroom() !\u003d null \u0026\u0026 this.getBride() !\u003d null;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Rae2480"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Core Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Rae2480"},"content":"    public Title getTitle() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zedonggg"},"content":"        return this.title;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Rae2480"},"content":"    public Date getDate() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zedonggg"},"content":"        return this.date;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"hrishikeshsathyian"},"content":"    /**","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"hrishikeshsathyian"},"content":"     * Returns true if both Weddings have the same title and date.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"hrishikeshsathyian"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"hrishikeshsathyian"},"content":"    @Override","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"hrishikeshsathyian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"hrishikeshsathyian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"hrishikeshsathyian"},"content":"            return true;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"hrishikeshsathyian"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"hrishikeshsathyian"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"hrishikeshsathyian"},"content":"        if (!(other instanceof Wedding)) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"hrishikeshsathyian"},"content":"            return false;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"hrishikeshsathyian"},"content":"        }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"hrishikeshsathyian"},"content":"        Wedding otherWedding \u003d (Wedding) other;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Rae2480"},"content":"        return date.equals(otherWedding.date)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Rae2480"},"content":"            \u0026\u0026 title.equals(otherWedding.title);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"hrishikeshsathyian"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zedonggg"},"content":"    public boolean isSameWedding(Wedding wedding) {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zedonggg"},"content":"        return this.equals(wedding);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zedonggg"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zedonggg"},"content":"    public String toString() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"zedonggg"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"zedonggg"},"content":"                .add(\"title\", title)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"zedonggg"},"content":"                .add(\"date\", date)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"zedonggg"},"content":"                .add(\"bride\", bride)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"zedonggg"},"content":"                .add(\"groom\", groom)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"zedonggg"},"content":"                .add(\"members\", members)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"zedonggg"},"content":"                .toString();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"hrishikeshsathyian"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":45,"Rae2480":59,"zedonggg":48,"soonami69":8}},{"path":"src/main/java/seedu/address/model/wedding/exceptions/DuplicateWeddingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zedonggg"},"content":"package seedu.address.model.wedding.exceptions;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zedonggg"},"content":"/**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zedonggg"},"content":" * Signals that the operation will result in duplicate Weddings (Weddings are considered duplicates based on","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zedonggg"},"content":" * the {@code Wedding#isSameWedding(Wedding)} method).","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zedonggg"},"content":" */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zedonggg"},"content":"public class DuplicateWeddingException extends RuntimeException {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zedonggg"},"content":"    public DuplicateWeddingException() {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zedonggg"},"content":"        super(\"Operation would result in duplicate weddings\");","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zedonggg"},"content":"}","lastModifiedDate":"2025-03-15","isFullCredit":false}],"authorContributionMap":{"zedonggg":11}},{"path":"src/main/java/seedu/address/model/wedding/exceptions/WeddingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zedonggg"},"content":"package seedu.address.model.wedding.exceptions;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zedonggg"},"content":"/**","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zedonggg"},"content":" * Signals that the operation is unable to find the specified wedding.","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zedonggg"},"content":" */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zedonggg"},"content":"public class WeddingNotFoundException extends RuntimeException {}","lastModifiedDate":"2025-03-15","isFullCredit":false}],"authorContributionMap":{"zedonggg":6}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedWedding.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zedonggg"},"content":"package seedu.address.storage;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zedonggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zedonggg"},"content":"import java.util.List;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zedonggg"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zedonggg"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zedonggg"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.wedding.Date;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.wedding.Title;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zedonggg"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zedonggg"},"content":" * Jackson-friendly version of {@link Wedding}.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zedonggg"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zedonggg"},"content":"public class JsonAdaptedWedding {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zedonggg"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Wedding\u0027s %s field is missing!\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zedonggg"},"content":"    private final String title;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zedonggg"},"content":"    private final String date;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zedonggg"},"content":"    private final JsonAdaptedPerson bride;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zedonggg"},"content":"    private final JsonAdaptedPerson groom;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zedonggg"},"content":"    private final List\u003cJsonAdaptedPerson\u003e members \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zedonggg"},"content":"     * Constructs a {@code JsonAdaptedWedding} with the given wedding details.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zedonggg"},"content":"    @JsonCreator","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zedonggg"},"content":"    public JsonAdaptedWedding(@JsonProperty(\"title\") String title, @JsonProperty(\"date\") String date,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zedonggg"},"content":"                             @JsonProperty(\"bride\") JsonAdaptedPerson bride,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zedonggg"},"content":"                              @JsonProperty(\"groom\") JsonAdaptedPerson groom,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zedonggg"},"content":"                             @JsonProperty(\"members\") List\u003cJsonAdaptedPerson\u003e members) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zedonggg"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zedonggg"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zedonggg"},"content":"        this.bride \u003d bride;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zedonggg"},"content":"        this.groom \u003d groom;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zedonggg"},"content":"        if (members !\u003d null) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zedonggg"},"content":"            this.members.addAll(members);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zedonggg"},"content":"     * Converts a given {@code Wedding} into this class for Jackson use.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zedonggg"},"content":"    public JsonAdaptedWedding(Wedding source) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zedonggg"},"content":"        title \u003d source.getTitle().toString();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zedonggg"},"content":"        date \u003d source.getDate().toString();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zedonggg"},"content":"        bride \u003d new JsonAdaptedPerson(source.getBride());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zedonggg"},"content":"        groom \u003d new JsonAdaptedPerson(source.getGroom());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zedonggg"},"content":"        members.addAll(source.getMembers().asUnmodifiableObservableList().stream()","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zedonggg"},"content":"                .map(JsonAdaptedPerson::new)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zedonggg"},"content":"                .toList());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zedonggg"},"content":"     * Converts this Jackson-friendly adapted wedding object into the model\u0027s {@code Wedding} object.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zedonggg"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zedonggg"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted wedding.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zedonggg"},"content":"    public Wedding toModelType() throws IllegalValueException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zedonggg"},"content":"        final UniquePersonList modelMembers \u003d new UniquePersonList();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zedonggg"},"content":"        for (JsonAdaptedPerson person : this.members) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zedonggg"},"content":"            modelMembers.add(person.toModelType());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zedonggg"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zedonggg"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName()));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zedonggg"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zedonggg"},"content":"            throw new IllegalValueException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zedonggg"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zedonggg"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zedonggg"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zedonggg"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zedonggg"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zedonggg"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zedonggg"},"content":"        if (groom \u003d\u003d null) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zedonggg"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Person.class.getSimpleName()));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zedonggg"},"content":"        final Person modelGroom \u003d groom.toModelType();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zedonggg"},"content":"        if (bride \u003d\u003d null) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zedonggg"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Person.class.getSimpleName()));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zedonggg"},"content":"        final Person modelBride \u003d bride.toModelType();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zedonggg"},"content":"        return new Wedding(modelDate, modelTitle, modelBride, modelGroom, modelMembers);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zedonggg"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"zedonggg":95}},{"path":"src/main/java/seedu/address/storage/JsonSerializableWeddingPlanner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zedonggg"},"content":"package seedu.address.storage;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zedonggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zedonggg"},"content":"import java.util.List;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zedonggg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zedonggg"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zedonggg"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zedonggg"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zedonggg"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.ReadOnlyWeddingPlanner;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.WeddingPlanner;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zedonggg"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zedonggg"},"content":" * An Immutable WeddingPlanner that is serializable to JSON format.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zedonggg"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zedonggg"},"content":"@JsonRootName(value \u003d \"weddingplanner\")","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zedonggg"},"content":"public class JsonSerializableWeddingPlanner {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zedonggg"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Wedding list contains duplicate wedding(s).\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zedonggg"},"content":"    private final List\u003cJsonAdaptedWedding\u003e weddings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zedonggg"},"content":"     * Constructs a {@code JsonSerializableWeddingPlanner} with the given persons.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zedonggg"},"content":"    @JsonCreator","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zedonggg"},"content":"    public JsonSerializableWeddingPlanner(@JsonProperty(\"weddings\") List\u003cJsonAdaptedWedding\u003e weddings) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zedonggg"},"content":"        this.weddings.addAll(weddings);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zedonggg"},"content":"        System.out.println(\"test1\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zedonggg"},"content":"     * Converts a given {@code ReadOnlyWeddingPlanner} into this class for Jackson use.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zedonggg"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zedonggg"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableWeddingPlanner}.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zedonggg"},"content":"    public JsonSerializableWeddingPlanner(ReadOnlyWeddingPlanner source) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zedonggg"},"content":"        weddings.addAll(source.getWeddingList().stream().map(JsonAdaptedWedding::new).collect(Collectors.toList()));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zedonggg"},"content":"     * Converts this wedding planner into the model\u0027s {@code WeddingPlanner} object.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zedonggg"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zedonggg"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zedonggg"},"content":"    public WeddingPlanner toModelType() throws IllegalValueException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zedonggg"},"content":"        WeddingPlanner weddingPlanner \u003d new WeddingPlanner();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zedonggg"},"content":"        for (JsonAdaptedWedding jsonAdaptedWedding : weddings) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zedonggg"},"content":"            Wedding wedding \u003d jsonAdaptedWedding.toModelType();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zedonggg"},"content":"            if (weddingPlanner.hasWedding(wedding)) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zedonggg"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zedonggg"},"content":"            }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zedonggg"},"content":"            weddingPlanner.addWedding(wedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zedonggg"},"content":"        return weddingPlanner;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zedonggg"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"zedonggg":60}},{"path":"src/main/java/seedu/address/storage/JsonWeddingPlannerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zedonggg"},"content":"package seedu.address.storage;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zedonggg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zedonggg"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zedonggg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zedonggg"},"content":"import java.util.Optional;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zedonggg"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zedonggg"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zedonggg"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zedonggg"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zedonggg"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zedonggg"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.ReadOnlyWeddingPlanner;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zedonggg"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zedonggg"},"content":" * A class to access WeddingPlanner data stored as a json file on the hard disk.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zedonggg"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zedonggg"},"content":"public class JsonWeddingPlannerStorage implements WeddingPlannerStorage {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zedonggg"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonWeddingPlannerStorage.class);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zedonggg"},"content":"    private Path filePath;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zedonggg"},"content":"    public JsonWeddingPlannerStorage(Path filePath) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zedonggg"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zedonggg"},"content":"    public Path getWeddingPlannerFilePath() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zedonggg"},"content":"        return filePath;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zedonggg"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zedonggg"},"content":"    public Optional\u003cReadOnlyWeddingPlanner\u003e readWeddingPlanner() throws DataLoadingException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zedonggg"},"content":"        return readWeddingPlanner(filePath);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zedonggg"},"content":"     * Similar to {@link #readWeddingPlanner()} d()}.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zedonggg"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zedonggg"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zedonggg"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zedonggg"},"content":"    public Optional\u003cReadOnlyWeddingPlanner\u003e readWeddingPlanner(Path filePath) throws DataLoadingException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zedonggg"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zedonggg"},"content":"        Optional\u003cJsonSerializableWeddingPlanner\u003e jsonWeddingPlanner \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zedonggg"},"content":"                filePath, JsonSerializableWeddingPlanner.class);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zedonggg"},"content":"        if (!jsonWeddingPlanner.isPresent()) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zedonggg"},"content":"            return Optional.empty();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zedonggg"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zedonggg"},"content":"            return Optional.of(jsonWeddingPlanner.get().toModelType());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zedonggg"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zedonggg"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zedonggg"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zedonggg"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zedonggg"},"content":"    @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zedonggg"},"content":"    public void saveWeddingPlanner(ReadOnlyWeddingPlanner weddingPlanner) throws IOException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zedonggg"},"content":"        saveWeddingPlanner(weddingPlanner, filePath);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zedonggg"},"content":"     * Similar to {@link #saveWeddingPlanner(ReadOnlyWeddingPlanner)} (ReadOnlyWeddingPlanner)}.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zedonggg"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zedonggg"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zedonggg"},"content":"    public void saveWeddingPlanner(ReadOnlyWeddingPlanner weddingPlanner, Path filePath) throws IOException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zedonggg"},"content":"        requireNonNull(weddingPlanner);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zedonggg"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zedonggg"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zedonggg"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableWeddingPlanner(weddingPlanner), filePath);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zedonggg"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zedonggg"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"zedonggg":78}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.ReadOnlyWeddingPlanner;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zedonggg"},"content":"public interface Storage extends WeddingPlannerStorage, UserPrefsStorage {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zedonggg"},"content":"    Path getWeddingPlannerFilePath();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zedonggg"},"content":"    Optional\u003cReadOnlyWeddingPlanner\u003e readWeddingPlanner() throws DataLoadingException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zedonggg"},"content":"    void saveWeddingPlanner(ReadOnlyWeddingPlanner weddingPlanner) throws IOException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25","isFullCredit":false}],"authorContributionMap":{"zedonggg":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.ReadOnlyWeddingPlanner;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zedonggg"},"content":"    private WeddingPlannerStorage weddingPlannerStorage;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zedonggg"},"content":"    public StorageManager(WeddingPlannerStorage weddingPlannerStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zedonggg"},"content":"        this.weddingPlannerStorage \u003d weddingPlannerStorage;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zedonggg"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d WeddingPlanner methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zedonggg"},"content":"    public Path getWeddingPlannerFilePath() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zedonggg"},"content":"        return weddingPlannerStorage.getWeddingPlannerFilePath();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zedonggg"},"content":"    public Optional\u003cReadOnlyWeddingPlanner\u003e readWeddingPlanner() throws DataLoadingException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zedonggg"},"content":"        return readWeddingPlanner(weddingPlannerStorage.getWeddingPlannerFilePath());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zedonggg"},"content":"    public Optional\u003cReadOnlyWeddingPlanner\u003e readWeddingPlanner(Path filePath) throws DataLoadingException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zedonggg"},"content":"        return weddingPlannerStorage.readWeddingPlanner(filePath);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zedonggg"},"content":"    public void saveWeddingPlanner(ReadOnlyWeddingPlanner weddingPlanner) throws IOException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zedonggg"},"content":"        saveWeddingPlanner(weddingPlanner, weddingPlannerStorage.getWeddingPlannerFilePath());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zedonggg"},"content":"    public void saveWeddingPlanner(ReadOnlyWeddingPlanner weddingPlanner, Path filePath) throws IOException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zedonggg"},"content":"        weddingPlannerStorage.saveWeddingPlanner(weddingPlanner, filePath);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"zedonggg":15,"-":63}},{"path":"src/main/java/seedu/address/storage/WeddingPlannerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zedonggg"},"content":"package seedu.address.storage;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zedonggg"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zedonggg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zedonggg"},"content":"import java.util.Optional;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zedonggg"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zedonggg"},"content":"import seedu.address.model.ReadOnlyWeddingPlanner;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zedonggg"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zedonggg"},"content":" * Represents a storage for {@link seedu.address.model.wedding.Wedding}.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zedonggg"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zedonggg"},"content":"public interface WeddingPlannerStorage {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zedonggg"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zedonggg"},"content":"    Path getWeddingPlannerFilePath();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zedonggg"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zedonggg"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zedonggg"},"content":"     *","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zedonggg"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zedonggg"},"content":"    Optional\u003cReadOnlyWeddingPlanner\u003e readWeddingPlanner() throws DataLoadingException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zedonggg"},"content":"     * @see #getWeddingPlannerFilePath() ()","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zedonggg"},"content":"    Optional\u003cReadOnlyWeddingPlanner\u003e readWeddingPlanner(Path filePath) throws DataLoadingException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zedonggg"},"content":"     * Saves the given {@link ReadOnlyWeddingPlanner} to the storage.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zedonggg"},"content":"     * @param weddingPlanner cannot be null.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zedonggg"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zedonggg"},"content":"    void saveWeddingPlanner(ReadOnlyWeddingPlanner weddingPlanner) throws IOException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zedonggg"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zedonggg"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zedonggg"},"content":"     * @see #saveWeddingPlanner(ReadOnlyWeddingPlanner) (ReadOnlyAddressBook)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zedonggg"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zedonggg"},"content":"    void saveWeddingPlanner(ReadOnlyWeddingPlanner weddingPlanner, Path filePath) throws IOException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zedonggg"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"zedonggg":44}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"hrishikeshsathyian"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2425s2-cs2103t-w09-4.github.io/tp/\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"    private WeddingListPanel weddingListPanel;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"soonami69"},"content":"    @FXML","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"soonami69"},"content":"    private StackPane weddingListPanelPlaceholder;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"soonami69"},"content":"        //setAccelerators();","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"soonami69"},"content":"        weddingListPanel \u003d new WeddingListPanel(logic.getFilteredWeddingList());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"soonami69"},"content":"        weddingListPanelPlaceholder.getChildren().add(weddingListPanel.getRoot());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"soonami69"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getWeddingPlannerFilePath());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"soonami69"},"content":"    public WeddingListPanel getWeddingListPanel() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"soonami69"},"content":"        return weddingListPanel;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18","isFullCredit":false}],"authorContributionMap":{"soonami69":14,"-":194}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"soonami69"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DefaultTheme.css\");","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18","isFullCredit":false}],"authorContributionMap":{"soonami69":1,"-":87}},{"path":"src/main/java/seedu/address/ui/WeddingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package seedu.address.ui;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"/**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":" * A UI component that displays information of a {@code Wedding}","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":" */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"public class WeddingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"    private static final String FXML \u003d \"WeddingListCard.fxml\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"    public final Wedding wedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"    @FXML","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"    private HBox cardPane;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"    @FXML","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"    private Label name;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"    @FXML","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"    private Label date;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"    @FXML","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"    private Label id;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"    @FXML","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"    private boolean selected;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"     * Creates a {@code WeddingCode} with the given {@code Wedding} and index to display.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"    public WeddingCard(Wedding wedding, int displayedIndex) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"        super(FXML);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"soonami69"},"content":"        this.wedding \u003d wedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"soonami69"},"content":"        name.setText(wedding.getTitle().toString());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"        date.setText(wedding.getDate().toString());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"        selected \u003d false;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"soonami69"},"content":"     * Sets a particular wedding as selected","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"soonami69"},"content":"    public void select() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"        cardPane.setStyle(\"-fx-background-color: #000000\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"soonami69"},"content":"    public void deselect() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":"        cardPane.setStyle(\"-fx-background-color: #110000\");","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-03-15","isFullCredit":false}],"authorContributionMap":{"soonami69":53}},{"path":"src/main/java/seedu/address/ui/WeddingListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"package seedu.address.ui;","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"/**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":" * Panel containing the list of weddings.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":" */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"public class WeddingListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"    private static final String FXML \u003d \"WeddingListPanel.fxml\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(WeddingListPanel.class);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"    @FXML","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"    private ListView\u003cWedding\u003e weddingListView;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"     * Creates a {@Code WeddingListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"     * @param weddingList the weddingList to be displayed","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"    public WeddingListPanel(ObservableList\u003cWedding\u003e weddingList) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"        super(FXML);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"        weddingListView.setItems(weddingList);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"        weddingListView.setCellFactory(listView -\u003e new WeddingListViewCell());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"    class WeddingListViewCell extends ListCell\u003cWedding\u003e {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"        @Override","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"        protected void updateItem(Wedding wedding, boolean empty) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"soonami69"},"content":"            super.updateItem(wedding, empty);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"soonami69"},"content":"            if (empty || wedding \u003d\u003d null) {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"                setGraphic(null);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"                setText(null);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"            } else {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"                setGraphic(new WeddingCard(wedding, getIndex() + 1).getRoot());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"soonami69"},"content":"            }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"soonami69"},"content":"}","lastModifiedDate":"2025-03-15","isFullCredit":false}],"authorContributionMap":{"soonami69":46}},{"path":"src/main/resources/view/DefaultTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: derive(#d6d3d3, 20%);","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"    background-color: #e7e5e5; /* Used in the default.html file */","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: #AAAAAA;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"soonami69"},"content":"    -fx-base: #E2E2E2;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"soonami69"},"content":"    -fx-control-inner-background: #E2E2E2;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: #e2e2e2;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: derive(#e2e2e2, 20%);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"soonami69"},"content":"    -fx-border-color: transparent transparent transparent #b2b2b2;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: derive(#e2e2e2, 20%);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: derive(#e2e2e2, 20%);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"soonami69"},"content":"    -fx-padding: 5;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"soonami69"},"content":"    -fx-border-insets: 5;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"soonami69"},"content":"    -fx-background-insets: 5;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"soonami69"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"soonami69"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: #ffd8d8;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: #eec5c2;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: #f08282;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"soonami69"},"content":"    -fx-border-color: #913e3e;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"soonami69"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: #FEFBFA;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: #FEFBFA;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"soonami69"},"content":"     -fx-background-color: derive(#ececec, 20%);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"soonami69"},"content":"     -fx-background-color: derive(#ececec, 20%);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"soonami69"},"content":"     -fx-border-color: derive(#ececec, 10%);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: derive(#ececec, 30%);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"soonami69"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"soonami69"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: white !important;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: derive(#ececec, 30%);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"soonami69"},"content":"    -fx-border-color: derive(#ececec, 25%);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: derive(#ececec, 30%);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"soonami69"},"content":"    -fx-border-color: derive(#ececec, 30%);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: derive(#ececec, 30%);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: derive(#ececec, 50%);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: derive(#ececec, 20%);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: #ececec;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"soonami69"},"content":"    -fx-border-color: #1b1b1b;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: #ececec;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: #272727;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: #c5c5c5;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"soonami69"},"content":"  -fx-background-color: black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"soonami69"},"content":"    -fx-border-color: black, black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: #ececec;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: blacke;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: #ececec;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: #ececec;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: derive(#ececec, 25%);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"soonami69"},"content":"    -fx-fill: black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: derive(#d3d3d3, 20%);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"soonami69"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"soonami69"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: derive(#5e5e5e, 50%);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: transparent #e0e0e0 transparent #e0e0e0;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"soonami69"},"content":"    -fx-border-color: #c7c7c7 #c7c7c7 #c7c7c7 #c7c7c7;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"soonami69"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"soonami69"},"content":"    -fx-padding: 0 10 0 10;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"soonami69"},"content":"    -fx-border-insets: 0 10 0 10;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"soonami69"},"content":"    -fx-background-insets: 0 10 0 10;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"soonami69"},"content":"    -fx-effect: innershadow(gaussian, white, 10, 0, 0, 0);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: transparent, #e0e0e0, transparent, #e0e0e0;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"soonami69"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"soonami69"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"soonami69"},"content":"    -fx-background-color: #e3e6c3;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18","isFullCredit":false}],"authorContributionMap":{"soonami69":79,"-":286}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"    -fx-background: transparent;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"    -fx-border-color: black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"soonami69":3,"-":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Address App\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"         type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"                \u003cURL value\u003d\"@DefaultTheme.css\"/\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"                \u003cStackPane fx:id\u003d\"header\" prefHeight\u003d\"100.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"menu-bar\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"                    \u003cImageView\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"                        \u003cImage url\u003d\"@/images/HappyEverAfter.png\"/\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"                    \u003c/ImageView\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"                \u003cSplitPane fx:id\u003d\"mainHorizontalView\" dividerPositions\u003d\"0.5\" prefHeight\u003d\"160.0\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"                           prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"                    \u003citems\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"soonami69"},"content":"                        \u003cVBox fx:id\u003d\"weddingList\" prefWidth\u003d\"160.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"                            \u003cStackPane fx:id\u003d\"weddingListPanelPlaceholder\" prefHeight\u003d\"136.0\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"soonami69"},"content":"                                       prefWidth\u003d\"150.0\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"                                       VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"                        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"soonami69"},"content":"                                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"soonami69"},"content":"                            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" prefHeight\u003d\"136.0\" prefWidth\u003d\"189.0\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"                                       VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"soonami69"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"soonami69"},"content":"                    \u003c/items\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"soonami69"},"content":"                \u003c/SplitPane\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":"                \u003cVBox\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"soonami69"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"soonami69"},"content":"                        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"soonami69"},"content":"                                   prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"soonami69"},"content":"                                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-09-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"soonami69"},"content":"                        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"soonami69"},"content":"                                   VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"soonami69"},"content":"                            \u003cVBox.margin\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"soonami69"},"content":"                                \u003cInsets top\u003d\"-5.0\"/\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"soonami69"},"content":"                            \u003c/VBox.margin\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"soonami69"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"soonami69"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29","isFullCredit":false}],"authorContributionMap":{"soonami69":39,"-":35}},{"path":"src/main/resources/view/WeddingListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"soonami69"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"soonami69"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"soonami69"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"            \u003cHBox spacing\u003d\"0.5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"soonami69"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"soonami69"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"soonami69"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"soonami69"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"soonami69"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"soonami69":33}},{"path":"src/main/resources/view/WeddingListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soonami69"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"soonami69"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"soonami69"},"content":"    \u003cListView fx:id\u003d\"weddingListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"soonami69":8}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"soonami69"},"content":"import static seedu.address.logic.Messages.MESSAGE_COMMAND_NOT_IN_USE;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.WeddingModelManager;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"import seedu.address.storage.JsonWeddingPlannerStorage;","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"soonami69"},"content":"    private WeddingModel model \u003d new WeddingModelManager();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"soonami69"},"content":"        JsonWeddingPlannerStorage weddingPlannerStorage \u003d new JsonWeddingPlannerStorage(","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"            temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"        StorageManager storage \u003d new StorageManager(weddingPlannerStorage, userPrefsStorage);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"soonami69"},"content":"        assertCommandException(deleteCommand, MESSAGE_COMMAND_NOT_IN_USE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"soonami69"},"content":"    /*","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"soonami69"},"content":"    */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"soonami69"},"content":"     * @see #assertCommandFailure(String, Class, String, WeddingModel)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"soonami69"},"content":"            WeddingModel expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"soonami69"},"content":"     * @see #assertCommandFailure(String, Class, String, WeddingModel)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"soonami69"},"content":"     * @see #assertCommandFailure(String, Class, String, WeddingModel)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"soonami69"},"content":"     * @see #assertCommandFailure(String, Class, String, WeddingModel)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"soonami69"},"content":"        WeddingModel expectedModel \u003d new WeddingModelManager(model.getWeddingPlanner(), new UserPrefs());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"soonami69"},"content":"     * @see #assertCommandSuccess(String, String, WeddingModel)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"soonami69"},"content":"            String expectedMessage, WeddingModel expectedModel) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"soonami69"},"content":"    // TODO: UPDATE STORAGE TESTS","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"soonami69"},"content":"    /*","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"soonami69"},"content":"        WeddingModelManager expectedModel \u003d new WeddingModelManager();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"soonami69"},"content":"    */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21","isFullCredit":false}],"authorContributionMap":{"soonami69":23,"-":139}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"hrishikeshsathyian"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12","isFullCredit":false}],"authorContributionMap":{"hrishikeshsathyian":1,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"soonami69"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"soonami69"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"soonami69"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"soonami69"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"soonami69"},"content":"    public static void assertCommandSuccess(Command command, WeddingModel actualModel,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"soonami69"},"content":"                                            CommandResult expectedCommandResult,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"soonami69"},"content":"                                            WeddingModel expectedModel) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"soonami69"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"soonami69"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"soonami69"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"soonami69"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"soonami69"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"soonami69"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"soonami69"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"soonami69"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05","isFullCredit":false}],"authorContributionMap":{"soonami69":18,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.WeddingModelManager;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"    private WeddingModel model \u003d new WeddingModelManager();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"    private WeddingModel expectedModel \u003d new WeddingModelManager();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08","isFullCredit":false}],"authorContributionMap":{"soonami69":4,"-":16}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.WeddingModelManager;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"    private WeddingModel model \u003d new WeddingModelManager();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"    private WeddingModel expectedModel \u003d new WeddingModelManager();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08","isFullCredit":false}],"authorContributionMap":{"soonami69":4,"-":16}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"soonami69"},"content":"    private WeddingModel model;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"soonami69"},"content":"    private WeddingModel expectedModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"soonami69"},"content":"    //TODO: FIX THE TEST CASE WHEN GOT TIME","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"soonami69"},"content":"    /*","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"soonami69"},"content":"        model \u003d new WeddingModelManager();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"soonami69"},"content":"        expectedModel \u003d new WeddingModelManager();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12","isFullCredit":false}],"authorContributionMap":{"soonami69":9,"-":23}},{"path":"src/test/java/seedu/address/logic/commands/wedding/AddWeddingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.logic.commands.wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.WeddingModelManager;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Date;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Title;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"public class AddWeddingCommandTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"    private WeddingModel model;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"    private Wedding testWedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"    private Wedding testWedding2;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"        model \u003d new WeddingModelManager();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"        testWedding \u003d new Wedding(new Date(\"25122025\"), new Title(\"John \u0026 Mary\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"        testWedding2 \u003d new Wedding(new Date(\"31122025\"), new Title(\"Jack \u0026 Kelly\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"    public void constructor_nullWedding_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddWeddingCommand(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"    public void execute_newWedding_success() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xzh119"},"content":"        // Create and execute the command","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"        AddWeddingCommand command \u003d new AddWeddingCommand(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xzh119"},"content":"        // Verify the result","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xzh119"},"content":"        assertEquals(AddWeddingCommand.MESSAGE_SUCCESS, result.getFeedbackToUser());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xzh119"},"content":"        assertEquals(testWedding, model.getDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xzh119"},"content":"        assertTrue(model.hasDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xzh119"},"content":"    public void execute_existingDraftWedding_overwritesAndShowsMessage() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xzh119"},"content":"        // Setup existing draft","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xzh119"},"content":"        model.setDraftWedding(testWedding2);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xzh119"},"content":"        // Create and execute command","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xzh119"},"content":"        AddWeddingCommand command \u003d new AddWeddingCommand(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xzh119"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xzh119"},"content":"        // Verify the result shows overwrite message","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xzh119"},"content":"        assertTrue(result.getFeedbackToUser().contains(AddWeddingCommand.MESSAGE_EXISTING_DRAFT));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xzh119"},"content":"        assertEquals(testWedding, model.getDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xzh119"},"content":"    public void execute_duplicateWedding_throwsCommandException() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xzh119"},"content":"        // crate a wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xzh119"},"content":"        model.addWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xzh119"},"content":"        // Try to create the same wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xzh119"},"content":"        AddWeddingCommand command \u003d new AddWeddingCommand(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xzh119"},"content":"        // Execute the command and expect an exception","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xzh119"},"content":"        assertThrows(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xzh119"},"content":"                CommandException.class,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xzh119"},"content":"                AddWeddingCommand.MESSAGE_DUPLICATE_WEDDING, () -\u003e command.execute(model)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xzh119"},"content":"        );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xzh119"},"content":"    public void execute_differentButValidWeddings_success() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xzh119"},"content":"        // First command execution","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xzh119"},"content":"        CommandResult result1 \u003d new AddWeddingCommand(testWedding).execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xzh119"},"content":"        assertEquals(AddWeddingCommand.MESSAGE_SUCCESS, result1.getFeedbackToUser());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xzh119"},"content":"        // Commit the first wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xzh119"},"content":"        model.commitDraftWedding();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xzh119"},"content":"        // Verify it\u0027s in permanent storage","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xzh119"},"content":"        assertTrue(model.hasWedding(testWedding));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xzh119"},"content":"        // Create a second, different wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xzh119"},"content":"        CommandResult result2 \u003d new AddWeddingCommand(testWedding2).execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xzh119"},"content":"        assertEquals(AddWeddingCommand.MESSAGE_SUCCESS, result2.getFeedbackToUser());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xzh119"},"content":"        // Verify draft is correctly set","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xzh119"},"content":"        assertEquals(testWedding2, model.getDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xzh119"},"content":"    public void equals() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xzh119"},"content":"        Date date1 \u003d new Date(\"25122025\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Xzh119"},"content":"        Title title1 \u003d new Title(\"John \u0026 Mary\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Xzh119"},"content":"        Wedding wedding1 \u003d new Wedding(date1, title1);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xzh119"},"content":"        Date date2 \u003d new Date(\"31122025\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xzh119"},"content":"        Title title2 \u003d new Title(\"Jack \u0026 Kelly\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xzh119"},"content":"        Wedding wedding2 \u003d new Wedding(date2, title2);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Xzh119"},"content":"        AddWeddingCommand addWeddingCommand1 \u003d new AddWeddingCommand(wedding1);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xzh119"},"content":"        AddWeddingCommand addWeddingCommand2 \u003d new AddWeddingCommand(wedding2);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xzh119"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Xzh119"},"content":"        assertTrue(addWeddingCommand1.equals(addWeddingCommand1));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Xzh119"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Xzh119"},"content":"        AddWeddingCommand addWeddingCommand1Copy \u003d new AddWeddingCommand(wedding1);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Xzh119"},"content":"        assertTrue(addWeddingCommand1.equals(addWeddingCommand1Copy));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Xzh119"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Xzh119"},"content":"        assertFalse(addWeddingCommand1.equals(1));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Xzh119"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Xzh119"},"content":"        assertFalse(addWeddingCommand1.equals(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Xzh119"},"content":"        // different wedding -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Xzh119"},"content":"        assertFalse(addWeddingCommand1.equals(addWeddingCommand2));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Xzh119":127}},{"path":"src/test/java/seedu/address/logic/commands/wedding/AddWeddingPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.logic.commands.wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.WeddingModelManager;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Date;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Title;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"public class AddWeddingPersonCommandTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"    private WeddingModel model;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"    private Wedding testWedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"        model \u003d new WeddingModelManager();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"        testWedding \u003d new Wedding(new Date(\"25122025\"), new Title(\"John \u0026 Mary\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddWeddingPersonCommand(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xzh119"},"content":"    public void execute_noActiveWedding_throwsCommandException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"        // Create a person to add and create the command","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xzh119"},"content":"        AddWeddingPersonCommand command \u003d new AddWeddingPersonCommand(person);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xzh119"},"content":"        // Execute the command and expect an exception","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xzh119"},"content":"        assertThrows(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xzh119"},"content":"                CommandException.class,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xzh119"},"content":"                AddWeddingPersonCommand.MESSAGE_NO_ACTIVE_WEDDING, () -\u003e command.execute(model)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xzh119"},"content":"        );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xzh119"},"content":"    public void execute_addPersonToDraftWedding_success() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xzh119"},"content":"        // Set up a draft wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xzh119"},"content":"        model.setDraftWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xzh119"},"content":"        // Create a person to add","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xzh119"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xzh119"},"content":"        // Create and execute the command","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xzh119"},"content":"        AddWeddingPersonCommand command \u003d new AddWeddingPersonCommand(person);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xzh119"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xzh119"},"content":"        // Verify the result","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xzh119"},"content":"        assertTrue(result.getFeedbackToUser().contains(\"Added\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xzh119"},"content":"        assertTrue(model.weddingHasPerson(model.getDraftWedding(), person));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xzh119"},"content":"    public void execute_addPersonToCurrentWedding_success() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xzh119"},"content":"        // Add wedding to storage and set as current","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xzh119"},"content":"        model.addWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xzh119"},"content":"        model.setCurrentWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xzh119"},"content":"        // Create a person to add","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xzh119"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xzh119"},"content":"        // Create and execute the command","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xzh119"},"content":"        AddWeddingPersonCommand command \u003d new AddWeddingPersonCommand(person);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xzh119"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xzh119"},"content":"        // Verify the result","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xzh119"},"content":"        assertTrue(result.getFeedbackToUser().contains(\"Added\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xzh119"},"content":"        assertTrue(model.weddingHasPerson(model.getCurrentWedding(), person));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xzh119"},"content":"    public void execute_addBrideWithTag_success() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xzh119"},"content":"        // Set up a draft wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xzh119"},"content":"        model.setDraftWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xzh119"},"content":"        // Create a person with bride tag","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xzh119"},"content":"        Person person \u003d new PersonBuilder().withTags(\"bride\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xzh119"},"content":"        // Create and execute the command","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xzh119"},"content":"        AddWeddingPersonCommand command \u003d new AddWeddingPersonCommand(person);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Xzh119"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xzh119"},"content":"        // Verify the result","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xzh119"},"content":"        assertTrue(result.getFeedbackToUser().contains(\"BRIDE\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xzh119"},"content":"        assertEquals(person, model.getDraftWedding().getBride());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xzh119"},"content":"    public void execute_addGroomWithTag_success() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xzh119"},"content":"        // Set up a draft wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xzh119"},"content":"        model.setDraftWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Xzh119"},"content":"        // Create a person with groom tag","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xzh119"},"content":"        Person person \u003d new PersonBuilder().withName(\"John\").withTags(\"groom\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xzh119"},"content":"        // Create and execute the command","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Xzh119"},"content":"        AddWeddingPersonCommand command \u003d new AddWeddingPersonCommand(person);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xzh119"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Xzh119"},"content":"        // Verify the result","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Xzh119"},"content":"        assertTrue(result.getFeedbackToUser().contains(\"GROOM\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Xzh119"},"content":"        assertEquals(person, model.getDraftWedding().getGroom());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Xzh119"},"content":"    public void execute_addDuplicatePerson_throwsCommandException() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Xzh119"},"content":"        // Set up a draft wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Xzh119"},"content":"        model.setDraftWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Xzh119"},"content":"        // Create a person to add and add the person","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Xzh119"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Xzh119"},"content":"        new AddWeddingPersonCommand(person).execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Xzh119"},"content":"        // Try to add the same person again","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Xzh119"},"content":"        AddWeddingPersonCommand command \u003d new AddWeddingPersonCommand(person);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Xzh119"},"content":"        // Execute the command and expect an exception","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Xzh119"},"content":"        assertThrows(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Xzh119"},"content":"                CommandException.class,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Xzh119"},"content":"                AddWeddingPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e command.execute(model)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Xzh119"},"content":"        );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Xzh119"},"content":"    public void execute_addSecondBride_throwsCommandException() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Xzh119"},"content":"        // Set up a draft wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Xzh119"},"content":"        model.setDraftWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Xzh119"},"content":"        // Add first bride","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Xzh119"},"content":"        Person firstBride \u003d new PersonBuilder().withName(\"Mary\").withTags(\"bride\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Xzh119"},"content":"        new AddWeddingPersonCommand(firstBride).execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Xzh119"},"content":"        // Try to add second bride","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Xzh119"},"content":"        Person secondBride \u003d new PersonBuilder().withName(\"Jane\").withTags(\"bride\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Xzh119"},"content":"        AddWeddingPersonCommand command \u003d new AddWeddingPersonCommand(secondBride);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Xzh119"},"content":"        // Execute the command and expect an exception","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Xzh119"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Xzh119"},"content":"                String.format(AddWeddingPersonCommand.MESSAGE_ROLE_CONFLICT, \"bride\"), () -\u003e command.execute(model)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Xzh119"},"content":"        );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Xzh119"},"content":"    public void execute_addBrideAndGroom_commitsValidWedding() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Xzh119"},"content":"        // Set up a draft wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Xzh119"},"content":"        model.setDraftWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Xzh119"},"content":"        // Add bride","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Xzh119"},"content":"        Person bride \u003d new PersonBuilder().withName(\"Mary\").withTags(\"bride\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Xzh119"},"content":"        new AddWeddingPersonCommand(bride).execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Xzh119"},"content":"        // Add groom","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Xzh119"},"content":"        Person groom \u003d new PersonBuilder().withName(\"John\").withTags(\"groom\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Xzh119"},"content":"        new AddWeddingPersonCommand(groom).execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Xzh119"},"content":"        // Verify the draft is now valid and was committed","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Xzh119"},"content":"        assertFalse(model.hasDraftWedding()); // Draft should be moved to permanent storage","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Xzh119"},"content":"        assertTrue(model.hasWedding(testWedding)); // Should be in permanent storage","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Xzh119"},"content":"        // Verify the wedding has both bride and groom","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Xzh119"},"content":"        Wedding storedWedding \u003d model.getFilteredWeddingList().get(0);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Xzh119"},"content":"        assertNotNull(storedWedding.getBride());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Xzh119"},"content":"        assertNotNull(storedWedding.getGroom());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Xzh119"},"content":"        assertEquals(bride, storedWedding.getBride());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Xzh119"},"content":"        assertEquals(groom, storedWedding.getGroom());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Xzh119":182}},{"path":"src/test/java/seedu/address/logic/commands/wedding/CloseWeddingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.logic.commands.wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.WeddingModelManager;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Date;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Title;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"public class CloseWeddingCommandTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"    private WeddingModel model;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"    private Wedding testWedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"    private CloseWeddingCommand command;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"        model \u003d new WeddingModelManager();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"        testWedding \u003d new Wedding(new Date(\"25122025\"), new Title(\"John \u0026 Mary\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"        command \u003d new CloseWeddingCommand();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xzh119"},"content":"    public void execute_noOpenWedding_throwsCommandException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xzh119"},"content":"        assertThrows(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"                CommandException.class,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xzh119"},"content":"                CloseWeddingCommand.MESSAGE_NO_OPEN_WEDDING, () -\u003e command.execute(model)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"        );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xzh119"},"content":"    public void execute_withOpenWedding_success() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xzh119"},"content":"        // Set up a wedding and set it as current","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xzh119"},"content":"        model.addWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xzh119"},"content":"        model.setCurrentWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xzh119"},"content":"        // Verify wedding is open","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xzh119"},"content":"        assertTrue(model.hasCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xzh119"},"content":"        assertEquals(testWedding, model.getCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xzh119"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xzh119"},"content":"        // Verify the result","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xzh119"},"content":"        assertEquals(CloseWeddingCommand.MESSAGE_SUCCESS, result.getFeedbackToUser());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xzh119"},"content":"        assertFalse(model.hasCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xzh119"},"content":"        assertNull(model.getCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xzh119"},"content":"    public void execute_closeWeddingWithModifications_preservesChanges() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xzh119"},"content":"        // Set up a wedding with bride and groom","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xzh119"},"content":"        Person bride \u003d new PersonBuilder().withName(\"Mary\").withTags(\"bride\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xzh119"},"content":"        Person groom \u003d new PersonBuilder().withName(\"John\").withTags(\"groom\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xzh119"},"content":"        testWedding.setBride(bride);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xzh119"},"content":"        testWedding.setGroom(groom);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xzh119"},"content":"        // Add to storage and set as current","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xzh119"},"content":"        model.addWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xzh119"},"content":"        model.setCurrentWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xzh119"},"content":"        // Add a guest to the current wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xzh119"},"content":"        Person guest \u003d new PersonBuilder().withName(\"Guest\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xzh119"},"content":"        testWedding.addMember(guest);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xzh119"},"content":"        // Execute the close command and verify closing","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xzh119"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xzh119"},"content":"        assertEquals(CloseWeddingCommand.MESSAGE_SUCCESS, result.getFeedbackToUser());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xzh119"},"content":"        assertFalse(model.hasCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xzh119"},"content":"        // Reopen the wedding to verify changes were saved","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xzh119"},"content":"        model.setCurrentWedding(model.getFilteredWeddingList().get(0));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xzh119"},"content":"        Wedding reopenedWedding \u003d model.getCurrentWedding();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xzh119"},"content":"        // Verify the changes (added guest) persisted","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xzh119"},"content":"        assertEquals(bride, reopenedWedding.getBride());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xzh119"},"content":"        assertEquals(groom, reopenedWedding.getGroom());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xzh119"},"content":"        assertTrue(reopenedWedding.hasPerson(guest));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xzh119"},"content":"    public void execute_closeAndReopenWedding_canModifyAgain() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xzh119"},"content":"        // Set up a wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Xzh119"},"content":"        model.addWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xzh119"},"content":"        model.setCurrentWedding(testWedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xzh119"},"content":"        // Close the wedding and verify closing","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xzh119"},"content":"        command.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Xzh119"},"content":"        assertFalse(model.hasCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Xzh119"},"content":"        // Reopen the wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xzh119"},"content":"        model.setCurrentWedding(model.getFilteredWeddingList().get(0));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xzh119"},"content":"        // Add a person to verify we can modify after reopening","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xzh119"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Xzh119"},"content":"        AddWeddingPersonCommand addCommand \u003d new AddWeddingPersonCommand(person);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Xzh119"},"content":"        // Verify we can modify the wedding after reopening (no exception)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xzh119"},"content":"        CommandResult result \u003d addCommand.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Xzh119"},"content":"        assertTrue(result.getFeedbackToUser().contains(\"Added\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xzh119"},"content":"        assertTrue(model.weddingHasPerson(model.getCurrentWedding(), person));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Xzh119":115}},{"path":"src/test/java/seedu/address/logic/commands/wedding/OpenWeddingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.logic.commands.wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.WeddingModel;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.WeddingModelManager;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Date;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Title;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"public class OpenWeddingCommandTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"    private WeddingModel model;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"    private Wedding wedding1;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"    private Wedding wedding2;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"        model \u003d new WeddingModelManager();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"        wedding1 \u003d new Wedding(new Date(\"25122025\"), new Title(\"John \u0026 Mary\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"        wedding2 \u003d new Wedding(new Date(\"31122025\"), new Title(\"Jack \u0026 Jill\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xzh119"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xzh119"},"content":"        // Create the command with an invalid index","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"        OpenWeddingCommand command \u003d new OpenWeddingCommand(Index.fromOneBased(1)); // No weddings exist","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"        // Execute the command and expect an exception","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"        assertThrows(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xzh119"},"content":"                CommandException.class,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xzh119"},"content":"                OpenWeddingCommand.MESSAGE_INVALID_INDEX, () -\u003e command.execute(model)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xzh119"},"content":"        );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xzh119"},"content":"    public void execute_indexOutOfBounds_throwsCommandException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xzh119"},"content":"        model.addWedding(wedding1);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xzh119"},"content":"        // Create the command with an index that\u0027s too high","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xzh119"},"content":"        OpenWeddingCommand command \u003d new OpenWeddingCommand(Index.fromOneBased(2)); // Only one wedding exists","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xzh119"},"content":"        assertThrows(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xzh119"},"content":"                CommandException.class,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xzh119"},"content":"                OpenWeddingCommand.MESSAGE_INVALID_INDEX, () -\u003e command.execute(model)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xzh119"},"content":"        );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xzh119"},"content":"    public void execute_validIndex_success() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xzh119"},"content":"        model.addWedding(wedding1);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xzh119"},"content":"        // Create the command with a valid index and execute the command","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xzh119"},"content":"        OpenWeddingCommand command \u003d new OpenWeddingCommand(Index.fromOneBased(1));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xzh119"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xzh119"},"content":"        // Verify the result","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xzh119"},"content":"        assertTrue(result.getFeedbackToUser().contains(\"Now editing wedding\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xzh119"},"content":"        assertEquals(wedding1, model.getCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xzh119"},"content":"        assertTrue(model.hasCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xzh119"},"content":"    public void execute_multipleWeddings_opensCorrectOne() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xzh119"},"content":"        // Add multiple weddings","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xzh119"},"content":"        model.addWedding(wedding1);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xzh119"},"content":"        model.addWedding(wedding2);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xzh119"},"content":"        // Create a command for the second wedding and execute it","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xzh119"},"content":"        OpenWeddingCommand command \u003d new OpenWeddingCommand(Index.fromOneBased(2));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xzh119"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xzh119"},"content":"        // Verify the second wedding was opened","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xzh119"},"content":"        assertTrue(result.getFeedbackToUser().contains(\"Now editing wedding\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xzh119"},"content":"        assertEquals(wedding2, model.getCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xzh119"},"content":"    public void execute_openWeddingWithExistingData_loadsAllData() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xzh119"},"content":"        // Add bride and groom to the wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xzh119"},"content":"        Person bride \u003d new PersonBuilder().withName(\"Mary\").withTags(\"bride\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xzh119"},"content":"        Person groom \u003d new PersonBuilder().withName(\"John\").withTags(\"groom\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xzh119"},"content":"        Person guest \u003d new PersonBuilder().withName(\"Guest\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Xzh119"},"content":"        wedding1.setBride(bride);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xzh119"},"content":"        wedding1.setGroom(groom);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xzh119"},"content":"        wedding1.addMember(guest);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xzh119"},"content":"        // Add to model and check it\u0027s stored correctly","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Xzh119"},"content":"        model.addWedding(wedding1);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Xzh119"},"content":"        // Open the wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xzh119"},"content":"        OpenWeddingCommand command \u003d new OpenWeddingCommand(Index.fromOneBased(1));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xzh119"},"content":"        command.execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xzh119"},"content":"        // Verify all data is loaded","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Xzh119"},"content":"        Wedding openedWedding \u003d model.getCurrentWedding();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xzh119"},"content":"        assertNotNull(openedWedding.getBride());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Xzh119"},"content":"        assertNotNull(openedWedding.getGroom());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xzh119"},"content":"        assertEquals(bride, openedWedding.getBride());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Xzh119"},"content":"        assertEquals(groom, openedWedding.getGroom());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xzh119"},"content":"        assertTrue(openedWedding.hasPerson(guest));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Xzh119"},"content":"        // Verify filtered person list is updated","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Xzh119"},"content":"        assertTrue(model.getFilteredPersonList().contains(bride));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Xzh119"},"content":"        assertTrue(model.getFilteredPersonList().contains(groom));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Xzh119"},"content":"        assertTrue(model.getFilteredPersonList().contains(guest));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Xzh119"},"content":"    public void execute_switchFromOneWeddingToAnother_success() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Xzh119"},"content":"        // Add both weddings","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Xzh119"},"content":"        model.addWedding(wedding1);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Xzh119"},"content":"        model.addWedding(wedding2);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Xzh119"},"content":"        // Open the first wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Xzh119"},"content":"        new OpenWeddingCommand(Index.fromOneBased(1)).execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Xzh119"},"content":"        assertEquals(wedding1, model.getCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Xzh119"},"content":"        // Open the second wedding","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Xzh119"},"content":"        CommandResult result \u003d new OpenWeddingCommand(Index.fromOneBased(2)).execute(model);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Xzh119"},"content":"        // Verify the switch was successful","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Xzh119"},"content":"        assertTrue(result.getFeedbackToUser().contains(\"Now editing wedding\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Xzh119"},"content":"        assertEquals(wedding2, model.getCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Xzh119":138}},{"path":"src/test/java/seedu/address/logic/parser/WeddingPlannerParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"import seedu.address.logic.commands.wedding.AddWeddingCommand;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.wedding.Date;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.wedding.Title;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"soonami69"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"soonami69"},"content":"public class WeddingPlannerParserTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"soonami69"},"content":"    private final WeddingPlannerParser parser \u003d new WeddingPlannerParser();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"    public void parseCommand_addWedding() throws Exception {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"soonami69"},"content":"        // Create a mock Wedding object (you can modify these fields to match your actual Wedding constructor)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"soonami69"},"content":"        Wedding wedding \u003d new Wedding(new Date(\"25122025\"), new Title(\"Chaewon \u0026 Tim\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"soonami69"},"content":"        // Create the command from the parsed input string (adjust the input string to match your Wedding\u0027s parameters)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"soonami69"},"content":"        AddWeddingCommand command \u003d (AddWeddingCommand) parser.parseCommand(\"new n/Chaewon \u0026 Tim d/25122025\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"        // Assert that the created command matches the expected AddWeddingCommand","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"soonami69"},"content":"        assertEquals(new AddWeddingCommand(wedding), command);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24","isFullCredit":false}],"authorContributionMap":{"soonami69":16,"-":94}},{"path":"src/test/java/seedu/address/logic/parser/wedding/AddWeddingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.logic.parser.wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.commands.wedding.AddWeddingCommand;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Date;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Title;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"public class AddWeddingCommandParserTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"    private AddWeddingCommandParser parser \u003d new AddWeddingCommandParser();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"        Wedding expectedWedding \u003d new Wedding(new Date(\"25122025\"), new Title(\"John \u0026 Mary\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"        // normal case","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"        assertParseSuccess(parser, \" n/John \u0026 Mary d/25122025\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"                new AddWeddingCommand(expectedWedding));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"                AddWeddingCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"        // missing name prefix","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"        assertParseFailure(parser, \" d/25122025\", expectedMessage);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"        // missing date prefix","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"        assertParseFailure(parser, \" n/John \u0026 Mary\", expectedMessage);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xzh119"},"content":"        // all prefixes missing","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xzh119"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xzh119"},"content":"        // invalid date (past date or wrong format)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xzh119"},"content":"        String dateErrorMessage \u003d \"Invalid command format! \\n\"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xzh119"},"content":"                + \"new: Creates a wedding draft\\n\"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xzh119"},"content":"                + \"Parameters: n/WEDDING_NAME d/DATE\\n\"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xzh119"},"content":"                + \"Example: new n/John \u0026 Mary d/25122025\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xzh119"},"content":"        assertParseFailure(parser, \" n/John \u0026 Mary d/01012020\", dateErrorMessage);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Xzh119":50}},{"path":"src/test/java/seedu/address/logic/parser/wedding/AddWeddingPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.logic.parser.wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.commands.wedding.AddWeddingPersonCommand;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"public class AddWeddingPersonCommandParserTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"    private AddWeddingPersonCommandParser parser \u003d new AddWeddingPersonCommandParser();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"        // normal case with role tag","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"        String groomInput \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"                + \" \" + PREFIX_TAG + \"groom\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"            parser.parse(groomInput);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"            fail(\"Parsing should not fail for valid input: \" + e.getMessage());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"        // normal case without role tag","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"        String noTagInput \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"            parser.parse(noTagInput);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"            fail(\"Parsing should not fail for valid input: \" + e.getMessage());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xzh119"},"content":"                AddWeddingPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xzh119"},"content":"        // missing name prefix","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xzh119"},"content":"        assertParseFailure(parser, PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xzh119"},"content":"                expectedMessage);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xzh119"},"content":"        // missing phone prefix","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xzh119"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xzh119"},"content":"                expectedMessage);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xzh119"},"content":"        // missing email prefix","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xzh119"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xzh119"},"content":"                expectedMessage);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xzh119"},"content":"        // missing address prefix","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xzh119"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xzh119"},"content":"                expectedMessage);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xzh119"},"content":"        // all prefixes missing","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xzh119"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Xzh119":63}},{"path":"src/test/java/seedu/address/logic/parser/wedding/CloseWeddingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.logic.parser.wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.commands.wedding.CloseWeddingCommand;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"public class CloseWeddingCommandParserTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"    private CloseWeddingCommandParser parser \u003d new CloseWeddingCommandParser();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"    public void parse_validArgs_returnsCloseWeddingCommand() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"        // empty arguments","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"            parser.parse(\"\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"            fail(\"Parsing empty string should not fail: \" + e.getMessage());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"        // arguments with whitespace","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"            parser.parse(\"   \");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"            fail(\"Parsing whitespace should not fail: \" + e.getMessage());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"        // non-empty arguments","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"        assertParseFailure(parser, \"some args\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CloseWeddingCommand.MESSAGE_SUCCESS));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xzh119"},"content":"        // numeric arguments","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xzh119"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CloseWeddingCommand.MESSAGE_SUCCESS));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Xzh119":41}},{"path":"src/test/java/seedu/address/logic/parser/wedding/OpenWeddingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.logic.parser.wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"import seedu.address.logic.commands.wedding.OpenWeddingCommand;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"public class OpenWeddingCommandParserTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"    private OpenWeddingCommandParser parser \u003d new OpenWeddingCommandParser();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"    public void parse_validArgs_returnsOpenWeddingCommand() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"        // Index 1","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"            parser.parse(\"1\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"            fail(\"Parsing index 1 should not fail: \" + e.getMessage());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"        // Index 1 with whitespace","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"        try {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"            parser.parse(\"  1  \");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"            fail(\"Parsing index 1 with whitespace should not fail: \" + e.getMessage());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"        // Non-numeric argument","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, OpenWeddingCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xzh119"},"content":"        // Negative index","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"        assertParseFailure(parser, \"-1\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xzh119"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, OpenWeddingCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"        // Zero index","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xzh119"},"content":"        assertParseFailure(parser, \"0\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xzh119"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, OpenWeddingCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xzh119"},"content":"        // Empty argument","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xzh119"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xzh119"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, OpenWeddingCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Xzh119":49}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"soonami69"},"content":"        userPrefs.setWeddingPlannerFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"soonami69"},"content":"        userPrefs.setWeddingPlannerFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"soonami69"},"content":"        /* TODO: CONFIGURE THIS TEST","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"soonami69"},"content":"         */","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31","isFullCredit":false}],"authorContributionMap":{"soonami69":4,"-":129}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"soonami69"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setWeddingPlannerFilePath(null));","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27","isFullCredit":false}],"authorContributionMap":{"soonami69":1,"-":20}},{"path":"src/test/java/seedu/address/model/WeddingModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.model;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Date;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Title;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"public class WeddingModelManagerTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"    private WeddingModelManager modelManager \u003d new WeddingModelManager();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"    private final Wedding weddingA \u003d new Wedding(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"            new Date(\"25122025\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"            new Title(\"Alice \u0026 Bob\")","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"    );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"    private final Wedding weddingB \u003d new Wedding(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"            new Date(\"01012026\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"            new Title(\"Charlie \u0026 Diana\")","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"    );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"    private final Person personA \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"    public void constructor() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xzh119"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"        assertEquals(new WeddingPlanner(), new WeddingPlanner(modelManager.getWeddingPlanner()));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xzh119"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xzh119"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xzh119"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xzh119"},"content":"        userPrefs.setWeddingPlannerFilePath(Paths.get(\"wedding/planner/file/path\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xzh119"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xzh119"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xzh119"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xzh119"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xzh119"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xzh119"},"content":"        userPrefs.setWeddingPlannerFilePath(Paths.get(\"new/wedding/planner/file/path\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xzh119"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xzh119"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xzh119"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xzh119"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xzh119"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xzh119"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xzh119"},"content":"    public void setWeddingPlannerFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setWeddingPlannerFilePath(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xzh119"},"content":"    public void setWeddingPlannerFilePath_validPath_setsWeddingPlannerFilePath() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xzh119"},"content":"        Path path \u003d Paths.get(\"wedding/planner/file/path\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xzh119"},"content":"        modelManager.setWeddingPlannerFilePath(path);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xzh119"},"content":"        assertEquals(path, modelManager.getWeddingPlannerFilePath());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xzh119"},"content":"    public void hasWedding_nullWedding_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasWedding(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xzh119"},"content":"    public void hasWedding_weddingNotInWeddingPlanner_returnsFalse() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xzh119"},"content":"        assertFalse(modelManager.hasWedding(weddingA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xzh119"},"content":"    public void hasWedding_weddingInWeddingPlanner_returnsTrue() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xzh119"},"content":"        modelManager.addWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xzh119"},"content":"        assertTrue(modelManager.hasWedding(weddingA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xzh119"},"content":"    public void setDraftWedding_nullWedding_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setDraftWedding(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xzh119"},"content":"    public void setDraftWedding_validWedding_setsDraftWedding() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Xzh119"},"content":"        modelManager.setDraftWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xzh119"},"content":"        assertEquals(weddingA, modelManager.getDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Xzh119"},"content":"        assertTrue(modelManager.hasDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Xzh119"},"content":"    public void hasDraftWedding_noDraftWedding_returnsFalse() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Xzh119"},"content":"        assertFalse(modelManager.hasDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Xzh119"},"content":"    public void getDraftWedding_noDraftWedding_returnsNull() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Xzh119"},"content":"        assertNull(modelManager.getDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Xzh119"},"content":"    public void commitDraftWedding_noDraftWedding_throwsIllegalStateException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Xzh119"},"content":"        assertThrows(IllegalStateException.class, () -\u003e modelManager.commitDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Xzh119"},"content":"    public void commitDraftWedding_duplicateWedding_throwsIllegalStateException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Xzh119"},"content":"        modelManager.addWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Xzh119"},"content":"        modelManager.setDraftWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Xzh119"},"content":"        assertThrows(IllegalStateException.class, () -\u003e modelManager.commitDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Xzh119"},"content":"    public void commitDraftWedding_validDraftWedding_addsWeddingAndClearsDraft() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Xzh119"},"content":"        modelManager.setDraftWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Xzh119"},"content":"        modelManager.commitDraftWedding();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Xzh119"},"content":"        assertTrue(modelManager.hasWedding(weddingA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Xzh119"},"content":"        assertFalse(modelManager.hasDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Xzh119"},"content":"        assertNull(modelManager.getDraftWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Xzh119"},"content":"    public void setCurrentWedding_nullWedding_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setCurrentWedding(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Xzh119"},"content":"    public void setCurrentWedding_validWedding_setsCurrentWedding() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Xzh119"},"content":"        modelManager.setCurrentWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Xzh119"},"content":"        assertEquals(weddingA, modelManager.getCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Xzh119"},"content":"        assertTrue(modelManager.hasCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Xzh119"},"content":"    public void clearCurrentWedding_removesCurrentWedding() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Xzh119"},"content":"        modelManager.setCurrentWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Xzh119"},"content":"        modelManager.clearCurrentWedding();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Xzh119"},"content":"        assertFalse(modelManager.hasCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Xzh119"},"content":"        assertNull(modelManager.getCurrentWedding());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Xzh119"},"content":"    public void weddingHasPerson_nullWedding_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.weddingHasPerson(null, personA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Xzh119"},"content":"    public void weddingHasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.weddingHasPerson(weddingA, null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Xzh119"},"content":"    public void weddingHasPerson_personAsBride_returnsTrue() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Xzh119"},"content":"        Wedding wedding \u003d new Wedding(new Date(\"25122025\"), new Title(\"Test Wedding\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Xzh119"},"content":"        wedding.setBride(personA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Xzh119"},"content":"        assertTrue(modelManager.weddingHasPerson(wedding, personA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Xzh119"},"content":"    public void weddingHasPerson_personAsGroom_returnsTrue() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Xzh119"},"content":"        Wedding wedding \u003d new Wedding(new Date(\"25122025\"), new Title(\"Test Wedding\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Xzh119"},"content":"        wedding.setGroom(personA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Xzh119"},"content":"        assertTrue(modelManager.weddingHasPerson(wedding, personA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Xzh119"},"content":"    public void weddingHasPerson_personAsMember_returnsTrue() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Xzh119"},"content":"        Wedding wedding \u003d new Wedding(new Date(\"25122025\"), new Title(\"Test Wedding\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Xzh119"},"content":"        wedding.addMember(personA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Xzh119"},"content":"        assertTrue(modelManager.weddingHasPerson(wedding, personA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Xzh119"},"content":"    public void weddingHasPerson_personNotInWedding_returnsFalse() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Xzh119"},"content":"        Wedding wedding \u003d new Wedding(new Date(\"25122025\"), new Title(\"Test Wedding\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Xzh119"},"content":"        assertFalse(modelManager.weddingHasPerson(wedding, personA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Xzh119"},"content":"    public void addWeddingPerson_nullWedding_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addWeddingPerson(null, personA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Xzh119"},"content":"    public void addWeddingPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addWeddingPerson(weddingA, null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Xzh119"},"content":"    public void addWeddingPerson_validWeddingAndPerson_addsPerson() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Xzh119"},"content":"        Wedding wedding \u003d new Wedding(new Date(\"25122025\"), new Title(\"Test Wedding\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Xzh119"},"content":"        modelManager.addWeddingPerson(wedding, personA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Xzh119"},"content":"        assertTrue(modelManager.weddingHasPerson(wedding, personA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Xzh119"},"content":"    public void getFilteredWeddingList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Xzh119"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredWeddingList().remove(0));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Xzh119"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Xzh119"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Xzh119"},"content":"    public void updateFilteredWeddingList_nullPredicate_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateFilteredWeddingList(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Xzh119"},"content":"    public void updateFilteredPersonList_nullPredicate_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateFilteredPersonList(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Xzh119"},"content":"    public void equals() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Xzh119"},"content":"        WeddingPlanner weddingPlanner \u003d new WeddingPlannerTest.WeddingPlannerBuilder()","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Xzh119"},"content":"                .withWedding(weddingA)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Xzh119"},"content":"                .withWedding(weddingB)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Xzh119"},"content":"                .build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Xzh119"},"content":"        WeddingPlanner differentWeddingPlanner \u003d new WeddingPlanner();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Xzh119"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Xzh119"},"content":"        // Same values -\u003e returns true","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Xzh119"},"content":"        WeddingModelManager modelManagerCopy \u003d new WeddingModelManager(weddingPlanner, userPrefs);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Xzh119"},"content":"        modelManager \u003d new WeddingModelManager(weddingPlanner, userPrefs);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Xzh119"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Xzh119"},"content":"        // Same object -\u003e returns true","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Xzh119"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Xzh119"},"content":"        // Null -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Xzh119"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Xzh119"},"content":"        // Different types -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Xzh119"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Xzh119"},"content":"        // Different wedding planner -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Xzh119"},"content":"        assertFalse(modelManager.equals(new WeddingModelManager(differentWeddingPlanner, userPrefs)));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Xzh119"},"content":"        // Different current wedding -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Xzh119"},"content":"        WeddingModelManager differentModelManager \u003d new WeddingModelManager(weddingPlanner, userPrefs);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Xzh119"},"content":"        modelManager.setCurrentWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Xzh119"},"content":"        assertFalse(modelManager.equals(differentModelManager));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Xzh119"},"content":"        // Different draft wedding -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Xzh119"},"content":"        differentModelManager \u003d new WeddingModelManager(weddingPlanner, userPrefs);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Xzh119"},"content":"        differentModelManager.setCurrentWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Xzh119"},"content":"        modelManager.clearCurrentWedding();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Xzh119"},"content":"        modelManager.setDraftWedding(weddingB);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Xzh119"},"content":"        assertFalse(modelManager.equals(differentModelManager));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Xzh119"},"content":"        // Different userPrefs -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Xzh119"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Xzh119"},"content":"        differentUserPrefs.setWeddingPlannerFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Xzh119"},"content":"        assertFalse(modelManager.equals(new WeddingModelManager(weddingPlanner, differentUserPrefs)));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Xzh119":290}},{"path":"src/test/java/seedu/address/model/WeddingPlannerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.model;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"import java.util.Collection;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"import java.util.Collections;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Date;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Title;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.Wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.exceptions.DuplicateWeddingException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"public class WeddingPlannerTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"    private final WeddingPlanner weddingPlanner \u003d new WeddingPlanner();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"    private final Wedding weddingA \u003d new Wedding(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"            new Date(\"25122025\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"            new Title(\"Alice \u0026 Bob\")","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"    );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"    private final Wedding weddingB \u003d new Wedding(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"            new Date(\"01012026\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"            new Title(\"Charlie \u0026 Diana\")","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"    );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"    public void constructor() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"        assertEquals(Collections.emptyList(), weddingPlanner.getWeddingList());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e weddingPlanner.resetData(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xzh119"},"content":"    public void resetData_withValidReadOnlyWeddingPlanner_replacesData() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xzh119"},"content":"        WeddingPlanner newData \u003d new WeddingPlannerBuilder().withWedding(weddingB).build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xzh119"},"content":"        weddingPlanner.resetData(newData);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xzh119"},"content":"        assertEquals(newData, weddingPlanner);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xzh119"},"content":"    public void resetData_withDuplicateWeddings_throwsDuplicateWeddingException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xzh119"},"content":"        // Two weddings with the same identity fields","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xzh119"},"content":"        Wedding editedWeddingA \u003d new Wedding(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xzh119"},"content":"                new Date(\"25122025\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xzh119"},"content":"                new Title(\"Alice \u0026 Bob\")","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xzh119"},"content":"        );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xzh119"},"content":"        ObservableList\u003cWedding\u003e newWeddings \u003d FXCollections.observableArrayList(weddingA, editedWeddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xzh119"},"content":"        WeddingPlannerStub newData \u003d new WeddingPlannerStub(newWeddings);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xzh119"},"content":"        assertThrows(DuplicateWeddingException.class, () -\u003e weddingPlanner.resetData(newData));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xzh119"},"content":"    public void hasWedding_nullWedding_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e weddingPlanner.hasWedding(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xzh119"},"content":"    public void hasWedding_weddingNotInWeddingPlanner_returnsFalse() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xzh119"},"content":"        assertFalse(weddingPlanner.hasWedding(weddingA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xzh119"},"content":"    public void hasWedding_weddingInWeddingPlanner_returnsTrue() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xzh119"},"content":"        weddingPlanner.addWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xzh119"},"content":"        assertTrue(weddingPlanner.hasWedding(weddingA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xzh119"},"content":"    public void hasWedding_weddingWithSameIdentityFieldsInWeddingPlanner_returnsTrue() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xzh119"},"content":"        weddingPlanner.addWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xzh119"},"content":"        Wedding editedWeddingA \u003d new Wedding(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xzh119"},"content":"                new Date(\"25122025\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xzh119"},"content":"                new Title(\"Alice \u0026 Bob\")","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xzh119"},"content":"        );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xzh119"},"content":"        assertTrue(weddingPlanner.hasWedding(editedWeddingA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xzh119"},"content":"    public void getWeddingList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xzh119"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e weddingPlanner.getWeddingList().remove(0));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xzh119"},"content":"    public void toString_validWeddingPlanner_returnsString() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Xzh119"},"content":"        String actualOutput \u003d weddingPlanner.toString();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xzh119"},"content":"        System.out.println(\"Actual output: \" + actualOutput);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xzh119"},"content":"        assertTrue(actualOutput.contains(\"WeddingPlanner\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xzh119"},"content":"        assertTrue(actualOutput.contains(\"weddings\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xzh119"},"content":"    public void equals() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xzh119"},"content":"        // Same object -\u003e returns true","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xzh119"},"content":"        assertTrue(weddingPlanner.equals(weddingPlanner));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Xzh119"},"content":"        // Different type -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xzh119"},"content":"        assertFalse(weddingPlanner.equals(5));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xzh119"},"content":"        // Null -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Xzh119"},"content":"        assertFalse(weddingPlanner.equals(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Xzh119"},"content":"        // Different weddings -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Xzh119"},"content":"        WeddingPlanner anotherPlanner \u003d new WeddingPlannerBuilder().withWedding(weddingA).build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Xzh119"},"content":"        assertFalse(weddingPlanner.equals(anotherPlanner));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Xzh119"},"content":"        // Same weddings -\u003e returns true","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Xzh119"},"content":"        weddingPlanner.addWedding(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Xzh119"},"content":"        assertTrue(weddingPlanner.equals(anotherPlanner));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Xzh119"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Xzh119"},"content":"     * A stub ReadOnlyWeddingPlanner whose weddings list can violate interface constraints.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Xzh119"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Xzh119"},"content":"    private static class WeddingPlannerStub implements ReadOnlyWeddingPlanner {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Xzh119"},"content":"        private final ObservableList\u003cWedding\u003e weddings;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Xzh119"},"content":"        WeddingPlannerStub(Collection\u003cWedding\u003e weddings) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Xzh119"},"content":"            this.weddings \u003d FXCollections.observableArrayList(weddings);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Xzh119"},"content":"        @Override","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Xzh119"},"content":"        public ObservableList\u003cWedding\u003e getWeddingList() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Xzh119"},"content":"            return weddings;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Xzh119"},"content":"    /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Xzh119"},"content":"     * A utility class to help with building WeddingPlanner objects.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Xzh119"},"content":"     */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Xzh119"},"content":"    public static class WeddingPlannerBuilder {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Xzh119"},"content":"        private WeddingPlanner weddingPlanner;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Xzh119"},"content":"        public WeddingPlannerBuilder() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Xzh119"},"content":"            weddingPlanner \u003d new WeddingPlanner();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Xzh119"},"content":"        /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Xzh119"},"content":"         * Adds a wedding to the wedding planner being built.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Xzh119"},"content":"         */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Xzh119"},"content":"        public WeddingPlannerBuilder withWedding(Wedding wedding) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Xzh119"},"content":"            weddingPlanner.addWedding(wedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Xzh119"},"content":"            return this;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Xzh119"},"content":"        /**","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Xzh119"},"content":"         * Adds multiple weddings to the wedding planner being built.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Xzh119"},"content":"         */","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Xzh119"},"content":"        public WeddingPlannerBuilder withWeddings(Wedding... weddings) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Xzh119"},"content":"            for (Wedding wedding : weddings) {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Xzh119"},"content":"                weddingPlanner.addWedding(wedding);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Xzh119"},"content":"            }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Xzh119"},"content":"            return this;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Xzh119"},"content":"        public WeddingPlanner build() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Xzh119"},"content":"            return weddingPlanner;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Xzh119"},"content":"        }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Xzh119":171}},{"path":"src/test/java/seedu/address/model/wedding/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.model.wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"public class DateTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"        // Invalid format","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(\"2025-12-25\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(\"25/12/2025\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"        // Past date","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(\"25122020\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"        // Invalid day/month","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(\"32122025\")); // Invalid day","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(\"25132025\")); // Invalid month","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"    public void isValidDate() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xzh119"},"content":"        // null date","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xzh119"},"content":"        // invalid dates","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"        assertFalse(Date.isValidDate(\" \")); // spaces only","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xzh119"},"content":"        assertFalse(Date.isValidDate(\"25/12/2025\")); // wrong format","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xzh119"},"content":"        assertFalse(Date.isValidDate(\"2025-12-25\")); // wrong format","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xzh119"},"content":"        assertFalse(Date.isValidDate(\"25122020\")); // past date","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xzh119"},"content":"        assertFalse(Date.isValidDate(\"32122025\")); // invalid day","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xzh119"},"content":"        assertFalse(Date.isValidDate(\"25132025\")); // invalid month","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xzh119"},"content":"        // valid dates (future dates in DDMMYYYY format)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xzh119"},"content":"        assertTrue(Date.isValidDate(\"25122025\")); // Christmas 2025","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xzh119"},"content":"        assertTrue(Date.isValidDate(\"01012030\")); // New Year\u0027s Day 2030","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xzh119"},"content":"        // Edge cases - tomorrow should be valid","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xzh119"},"content":"        LocalDate tomorrow \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xzh119"},"content":"        String tomorrowStr \u003d tomorrow.format(DateTimeFormatter.ofPattern(\"ddMMyyyy\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xzh119"},"content":"        assertTrue(Date.isValidDate(tomorrowStr));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xzh119"},"content":"    public void equals() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xzh119"},"content":"        Date date \u003d new Date(\"25122025\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xzh119"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xzh119"},"content":"        assertTrue(date.equals(new Date(\"25122025\")));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xzh119"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xzh119"},"content":"        assertTrue(date.equals(date));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xzh119"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xzh119"},"content":"        assertFalse(date.equals(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xzh119"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xzh119"},"content":"        assertFalse(date.equals(5.0f));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xzh119"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xzh119"},"content":"        assertFalse(date.equals(new Date(\"01012030\")));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xzh119"},"content":"    public void toString_validDate_returnsFormattedDate() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xzh119"},"content":"        Date date \u003d new Date(\"25122025\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xzh119"},"content":"        assertEquals(\"25 December 2025\", date.toString());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Xzh119":83}},{"path":"src/test/java/seedu/address/model/wedding/TitleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.model.wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"public class TitleTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Title(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"    public void constructor_invalidTitle_throwsIllegalArgumentException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"        String invalidTitle \u003d \"\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Title(invalidTitle));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"        // Blank string","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Title(\"   \"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"        // Too long (over 100 characters)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"        String tooLongTitle \u003d \"This title is way too long and exceeds the maximum allowed length of one hundred \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"                + \"characters which is definitely not allowed in our system\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Title(tooLongTitle));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"    public void isValidTitle() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"        // null title","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e Title.isValidTitle(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"        // invalid titles","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xzh119"},"content":"        assertFalse(Title.isValidTitle(\"\")); // empty string","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xzh119"},"content":"        assertFalse(Title.isValidTitle(\"   \")); // spaces only","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xzh119"},"content":"        // Title exceeding maximum length (100 characters)","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"        String tooLongTitle \u003d \"This title is way too long and exceeds the maximum allowed length of one hundred \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"                + \"characters which is definitely not allowed in our system\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xzh119"},"content":"        assertFalse(Title.isValidTitle(tooLongTitle));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xzh119"},"content":"        // valid titles","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xzh119"},"content":"        assertTrue(Title.isValidTitle(\"John \u0026 Mary\")); // normal title","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xzh119"},"content":"        assertTrue(Title.isValidTitle(\"A\")); // single character","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xzh119"},"content":"        assertTrue(Title.isValidTitle(\"Super Long Wedding Title But Still Under The Limit Of One Hundred \"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xzh119"},"content":"                + \"Characters So It Should Be Valid.\")); // long but valid","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xzh119"},"content":"        assertTrue(Title.isValidTitle(\"Special Characters: !@#$%^\u0026*()_+-\u003d[]{}|;\u0027:\\\",./\u003c\u003e?\")); // special characters","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xzh119"},"content":"        assertTrue(Title.isValidTitle(\"12345\")); // numbers only","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xzh119"},"content":"    public void equals() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xzh119"},"content":"        Title title \u003d new Title(\"John \u0026 Mary\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xzh119"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xzh119"},"content":"        assertTrue(title.equals(new Title(\"John \u0026 Mary\")));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xzh119"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xzh119"},"content":"        assertTrue(title.equals(title));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xzh119"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xzh119"},"content":"        assertFalse(title.equals(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xzh119"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xzh119"},"content":"        assertFalse(title.equals(5.0f));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xzh119"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xzh119"},"content":"        assertFalse(title.equals(new Title(\"Different Title\")));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xzh119"},"content":"    public void toString_returnsWeddingTitle() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xzh119"},"content":"        String titleString \u003d \"John \u0026 Mary\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xzh119"},"content":"        Title title \u003d new Title(titleString);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xzh119"},"content":"        assertTrue(title.toString().equals(titleString));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Xzh119":79}},{"path":"src/test/java/seedu/address/model/wedding/UniqueWeddingListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.model.wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"import java.util.Collections;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"import java.util.List;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.exceptions.DuplicateWeddingException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.wedding.exceptions.WeddingNotFoundException;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"public class UniqueWeddingListTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"    private final UniqueWeddingList uniqueWeddingList \u003d new UniqueWeddingList();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"    private final Wedding weddingA \u003d new Wedding(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"            new Date(\"25122025\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"            new Title(\"Alice \u0026 Bob\")","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"    );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"    private final Wedding weddingB \u003d new Wedding(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"            new Date(\"01012026\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"            new Title(\"Charlie \u0026 Diana\")","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"    );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"    public void contains_nullWedding_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueWeddingList.contains(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xzh119"},"content":"    public void contains_weddingNotInList_returnsFalse() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"        assertFalse(uniqueWeddingList.contains(weddingA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xzh119"},"content":"    public void contains_weddingInList_returnsTrue() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xzh119"},"content":"        uniqueWeddingList.add(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xzh119"},"content":"        assertTrue(uniqueWeddingList.contains(weddingA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xzh119"},"content":"    public void contains_weddingWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xzh119"},"content":"        uniqueWeddingList.add(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xzh119"},"content":"        Wedding weddingSameIdentity \u003d new Wedding(","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xzh119"},"content":"                new Date(\"25122025\"),","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xzh119"},"content":"                new Title(\"Alice \u0026 Bob\")","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xzh119"},"content":"        );","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xzh119"},"content":"        assertTrue(uniqueWeddingList.contains(weddingSameIdentity));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xzh119"},"content":"    public void add_nullWedding_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueWeddingList.add(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xzh119"},"content":"    public void add_duplicateWedding_throwsDuplicateWeddingException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xzh119"},"content":"        uniqueWeddingList.add(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xzh119"},"content":"        assertThrows(DuplicateWeddingException.class, () -\u003e uniqueWeddingList.add(weddingA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xzh119"},"content":"    public void remove_nullWedding_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueWeddingList.remove(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xzh119"},"content":"    public void remove_weddingDoesNotExist_throwsWeddingNotFoundException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xzh119"},"content":"        assertThrows(WeddingNotFoundException.class, () -\u003e uniqueWeddingList.remove(weddingA));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xzh119"},"content":"    public void remove_existingWedding_removesWedding() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xzh119"},"content":"        uniqueWeddingList.add(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xzh119"},"content":"        uniqueWeddingList.remove(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xzh119"},"content":"        UniqueWeddingList expectedUniqueWeddingList \u003d new UniqueWeddingList();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xzh119"},"content":"        assertEquals(expectedUniqueWeddingList, uniqueWeddingList);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xzh119"},"content":"    public void setWeddings_nullUniqueWeddingList_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueWeddingList.setWeddings((List\u003cWedding\u003e) null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xzh119"},"content":"    public void setWeddings_uniqueWeddingList_replacesOwnListWithProvidedUniqueWeddingList() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xzh119"},"content":"        uniqueWeddingList.add(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xzh119"},"content":"        UniqueWeddingList expectedUniqueWeddingList \u003d new UniqueWeddingList();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xzh119"},"content":"        expectedUniqueWeddingList.add(weddingB);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Xzh119"},"content":"        uniqueWeddingList.setWeddings(expectedUniqueWeddingList.asUnmodifiableObservableList());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xzh119"},"content":"        assertEquals(expectedUniqueWeddingList, uniqueWeddingList);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Xzh119"},"content":"    public void setWeddings_nullList_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueWeddingList.setWeddings((List\u003cWedding\u003e) null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xzh119"},"content":"    public void setWeddings_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xzh119"},"content":"        uniqueWeddingList.add(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Xzh119"},"content":"        List\u003cWedding\u003e weddingList \u003d Collections.singletonList(weddingB);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xzh119"},"content":"        uniqueWeddingList.setWeddings(weddingList);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Xzh119"},"content":"        UniqueWeddingList expectedUniqueWeddingList \u003d new UniqueWeddingList();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xzh119"},"content":"        expectedUniqueWeddingList.add(weddingB);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Xzh119"},"content":"        assertEquals(expectedUniqueWeddingList, uniqueWeddingList);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Xzh119"},"content":"    public void setWeddings_listWithDuplicateWeddings_throwsDuplicateWeddingException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Xzh119"},"content":"        List\u003cWedding\u003e listWithDuplicateWeddings \u003d Arrays.asList(weddingA, weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Xzh119"},"content":"        assertThrows(DuplicateWeddingException.class, () -\u003e uniqueWeddingList.setWeddings(listWithDuplicateWeddings));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Xzh119"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Xzh119"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Xzh119"},"content":"                uniqueWeddingList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Xzh119"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Xzh119"},"content":"        UniqueWeddingList anotherUniqueWeddingList \u003d new UniqueWeddingList();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Xzh119"},"content":"        // Empty lists should have same hashcode","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Xzh119"},"content":"        assertEquals(uniqueWeddingList.hashCode(), anotherUniqueWeddingList.hashCode());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Xzh119"},"content":"        // After adding the same wedding, they should still have the same hashcode","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Xzh119"},"content":"        uniqueWeddingList.add(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Xzh119"},"content":"        anotherUniqueWeddingList.add(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Xzh119"},"content":"        assertEquals(uniqueWeddingList.hashCode(), anotherUniqueWeddingList.hashCode());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Xzh119"},"content":"    public void toStringTest() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Xzh119"},"content":"        // Empty list","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Xzh119"},"content":"        assertEquals(uniqueWeddingList.asUnmodifiableObservableList().toString(), uniqueWeddingList.toString());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Xzh119"},"content":"        // Non-empty list","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Xzh119"},"content":"        uniqueWeddingList.add(weddingA);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Xzh119"},"content":"        assertEquals(uniqueWeddingList.asUnmodifiableObservableList().toString(), uniqueWeddingList.toString());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Xzh119":149}},{"path":"src/test/java/seedu/address/model/wedding/WeddingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.model.wedding;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"public class WeddingTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"    private static final Date VALID_DATE \u003d new Date(\"25122025\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"    private static final Title VALID_TITLE \u003d new Title(\"John \u0026 Mary\");","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"    private static final Person VALID_BRIDE \u003d new PersonBuilder().withName(\"Mary\").withTags(\"bride\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"    private static final Person VALID_GROOM \u003d new PersonBuilder().withName(\"John\").withTags(\"groom\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"    private static final Person VALID_MEMBER \u003d new PersonBuilder().withName(\"Jerry\").withTags(\"bridesmaid\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xzh119"},"content":"    public void constructor_nullParameters_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Wedding(null, VALID_TITLE));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Wedding(VALID_DATE, null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xzh119"},"content":"        // Full constructor with null parameters","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Wedding(null, VALID_TITLE, VALID_BRIDE, VALID_GROOM,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xzh119"},"content":"                new UniquePersonList()));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Wedding(VALID_DATE, null, VALID_BRIDE, VALID_GROOM,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xzh119"},"content":"                new UniquePersonList()));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Wedding(VALID_DATE, VALID_TITLE, null, VALID_GROOM,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xzh119"},"content":"                new UniquePersonList()));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Wedding(VALID_DATE, VALID_TITLE, VALID_BRIDE, null,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xzh119"},"content":"                new UniquePersonList()));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Wedding(VALID_DATE, VALID_TITLE, VALID_BRIDE, VALID_GROOM,","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xzh119"},"content":"                null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xzh119"},"content":"    public void setters_nullValues_throwsNullPointerException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xzh119"},"content":"        Wedding wedding \u003d new Wedding(VALID_DATE, VALID_TITLE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e wedding.setBride(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e wedding.setGroom(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e wedding.setMembers(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xzh119"},"content":"        assertThrows(NullPointerException.class, () -\u003e wedding.addMember(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xzh119"},"content":"    public void getters_validValues_returnsCorrectValues() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xzh119"},"content":"        Wedding wedding \u003d new Wedding(VALID_DATE, VALID_TITLE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xzh119"},"content":"        assertEquals(VALID_DATE, wedding.getDate());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xzh119"},"content":"        assertEquals(VALID_TITLE, wedding.getTitle());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xzh119"},"content":"    public void setters_validValues_setsCorrectValues() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xzh119"},"content":"        Wedding wedding \u003d new Wedding(VALID_DATE, VALID_TITLE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xzh119"},"content":"        wedding.setBride(VALID_BRIDE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xzh119"},"content":"        assertEquals(VALID_BRIDE, wedding.getBride());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xzh119"},"content":"        wedding.setGroom(VALID_GROOM);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xzh119"},"content":"        assertEquals(VALID_GROOM, wedding.getGroom());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xzh119"},"content":"        wedding.addMember(VALID_MEMBER);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xzh119"},"content":"        assertTrue(wedding.getMembers().contains(VALID_MEMBER));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xzh119"},"content":"        UniquePersonList newMembers \u003d new UniquePersonList();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xzh119"},"content":"        Person newMember \u003d new PersonBuilder().withName(\"Alex\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xzh119"},"content":"        newMembers.add(newMember);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xzh119"},"content":"        wedding.setMembers(newMembers);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xzh119"},"content":"        assertEquals(newMembers, wedding.getMembers());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xzh119"},"content":"    public void hasPerson_personInWedding_returnsTrue() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xzh119"},"content":"        Wedding wedding \u003d new Wedding(VALID_DATE, VALID_TITLE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xzh119"},"content":"        wedding.setBride(VALID_BRIDE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xzh119"},"content":"        assertTrue(wedding.hasPerson(VALID_BRIDE));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xzh119"},"content":"        wedding.setGroom(VALID_GROOM);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xzh119"},"content":"        assertTrue(wedding.hasPerson(VALID_GROOM));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xzh119"},"content":"        wedding.addMember(VALID_MEMBER);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xzh119"},"content":"        assertTrue(wedding.hasPerson(VALID_MEMBER));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Xzh119"},"content":"    public void hasPerson_personNotInWedding_returnsFalse() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Xzh119"},"content":"        Wedding wedding \u003d new Wedding(VALID_DATE, VALID_TITLE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Xzh119"},"content":"        Person person \u003d new PersonBuilder().withName(\"Stranger\").build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Xzh119"},"content":"        assertFalse(wedding.hasPerson(person));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Xzh119"},"content":"    public void isValid_hasBrideAndGroom_returnsTrue() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Xzh119"},"content":"        Wedding wedding \u003d new Wedding(VALID_DATE, VALID_TITLE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Xzh119"},"content":"        wedding.setBride(VALID_BRIDE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Xzh119"},"content":"        wedding.setGroom(VALID_GROOM);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Xzh119"},"content":"        assertTrue(wedding.isValid());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Xzh119"},"content":"    public void isValid_missingBrideOrGroom_returnsFalse() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Xzh119"},"content":"        Wedding wedding \u003d new Wedding(VALID_DATE, VALID_TITLE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Xzh119"},"content":"        // No bride or groom","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Xzh119"},"content":"        assertFalse(wedding.isValid());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Xzh119"},"content":"        // Only bride","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Xzh119"},"content":"        wedding.setBride(VALID_BRIDE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Xzh119"},"content":"        assertFalse(wedding.isValid());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Xzh119"},"content":"        // Only groom","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Xzh119"},"content":"        wedding \u003d new Wedding(VALID_DATE, VALID_TITLE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Xzh119"},"content":"        wedding.setGroom(VALID_GROOM);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Xzh119"},"content":"        assertFalse(wedding.isValid());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Xzh119"},"content":"    public void equals() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Xzh119"},"content":"        Wedding wedding \u003d new Wedding(VALID_DATE, VALID_TITLE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Xzh119"},"content":"        // Same instance -\u003e returns true","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Xzh119"},"content":"        assertTrue(wedding.equals(wedding));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Xzh119"},"content":"        // Same values -\u003e returns true","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Xzh119"},"content":"        Wedding weddingCopy \u003d new Wedding(VALID_DATE, VALID_TITLE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Xzh119"},"content":"        assertTrue(wedding.equals(weddingCopy));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Xzh119"},"content":"        // Different type -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Xzh119"},"content":"        assertFalse(wedding.equals(5));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Xzh119"},"content":"        // Null -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Xzh119"},"content":"        assertFalse(wedding.equals(null));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Xzh119"},"content":"        // Different date -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Xzh119"},"content":"        Wedding differentDate \u003d new Wedding(new Date(\"11112025\"), VALID_TITLE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Xzh119"},"content":"        assertFalse(wedding.equals(differentDate));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Xzh119"},"content":"        // Different title -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Xzh119"},"content":"        Wedding differentTitle \u003d new Wedding(VALID_DATE, new Title(\"Different Title\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Xzh119"},"content":"        assertFalse(wedding.equals(differentTitle));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Xzh119"},"content":"    public void isSameWedding() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Xzh119"},"content":"        Wedding wedding \u003d new Wedding(VALID_DATE, VALID_TITLE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Xzh119"},"content":"        // Same instance -\u003e returns true","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Xzh119"},"content":"        assertTrue(wedding.isSameWedding(wedding));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Xzh119"},"content":"        // Same values -\u003e returns true","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Xzh119"},"content":"        Wedding weddingCopy \u003d new Wedding(VALID_DATE, VALID_TITLE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Xzh119"},"content":"        assertTrue(wedding.isSameWedding(weddingCopy));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Xzh119"},"content":"        // Different date -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Xzh119"},"content":"        Wedding differentDate \u003d new Wedding(new Date(\"11112025\"), VALID_TITLE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Xzh119"},"content":"        assertFalse(wedding.isSameWedding(differentDate));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Xzh119"},"content":"        // Different title -\u003e returns false","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Xzh119"},"content":"        Wedding differentTitle \u003d new Wedding(VALID_DATE, new Title(\"Different Title\"));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Xzh119"},"content":"        assertFalse(wedding.isSameWedding(differentTitle));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"soonami69"},"content":"    /*","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Xzh119"},"content":"    public void toString_validWedding_returnsCorrectString() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Xzh119"},"content":"        Wedding wedding \u003d new Wedding(VALID_DATE, VALID_TITLE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Xzh119"},"content":"        String expected \u003d String.format(\"%s (%s)\", VALID_TITLE, VALID_DATE);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Xzh119"},"content":"        assertEquals(expected, wedding.toString());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"soonami69"},"content":"    TODO: FIX TEST (IDK WHY TOSTRING IS WRONG HERE)","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"soonami69"},"content":"     */","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"soonami69":3,"Xzh119":179}},{"path":"src/test/java/seedu/address/model/wedding/exceptions/DuplicateWeddingExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.model.wedding.exceptions;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"public class DuplicateWeddingExceptionTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"    public void constructor_defaultMessage_messageCorrect() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"        DuplicateWeddingException exception \u003d new DuplicateWeddingException();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"        assertEquals(\"Operation would result in duplicate weddings\", exception.getMessage());","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"    public void inheritance_isRuntimeException_true() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"        DuplicateWeddingException exception \u003d new DuplicateWeddingException();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"        assertTrue(exception instanceof RuntimeException);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Xzh119":21}},{"path":"src/test/java/seedu/address/model/wedding/exceptions/WeddingNotFoundExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xzh119"},"content":"package seedu.address.model.wedding.exceptions;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xzh119"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xzh119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xzh119"},"content":"public class WeddingNotFoundExceptionTest {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xzh119"},"content":"    public void constructor_default_createsInstance() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xzh119"},"content":"        WeddingNotFoundException exception \u003d new WeddingNotFoundException();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xzh119"},"content":"        assertTrue(exception instanceof WeddingNotFoundException);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xzh119"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xzh119"},"content":"    @Test","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xzh119"},"content":"    public void inheritance_isRuntimeException_true() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xzh119"},"content":"        WeddingNotFoundException exception \u003d new WeddingNotFoundException();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xzh119"},"content":"        assertTrue(exception instanceof RuntimeException);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xzh119"},"content":"    }","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xzh119"},"content":"}","lastModifiedDate":"2025-03-20","isFullCredit":false}],"authorContributionMap":{"Xzh119":20}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"soonami69"},"content":"        userPrefs.setWeddingPlannerFilePath(Paths.get(\"data/weddingplanner.json\"));","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24","isFullCredit":false}],"authorContributionMap":{"soonami69":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"soonami69"},"content":"        JsonWeddingPlannerStorage weddingPlannerStorage \u003d new JsonWeddingPlannerStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"soonami69"},"content":"        storageManager \u003d new StorageManager(weddingPlannerStorage, userPrefsStorage);","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"soonami69"},"content":"    /* TODO: EDIT TEST AND DATA TO MATCH WEDDINGPLANNER","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"soonami69"},"content":"","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zedonggg"},"content":"        storageManager.saveWeddingPlanner(original);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"soonami69"},"content":"        ReadOnlyWeddingPlanner retrieved \u003d storageManager.readWeddingPlanner().get();","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"soonami69"},"content":"    */","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"soonami69"},"content":"    public void getWeddingPlannerFilePath() {","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"soonami69"},"content":"        assertNotNull(storageManager.getWeddingPlannerFilePath());","lastModifiedDate":"2025-03-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"soonami69":8,"zedonggg":1,"-":59}}]
